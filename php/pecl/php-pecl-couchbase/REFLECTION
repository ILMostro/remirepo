Extension [ <persistent> extension #154 couchbase version 1.2.2 ] {

  - Dependencies {
    Dependency [ json (Required) ]
    Dependency [ igbinary (Required) ]
  }

  - INI {
    Entry [ couchbase.config_cache <ALL> ]
      Current = ''
    }
    Entry [ couchbase.serializer <ALL> ]
      Current = 'php'
    }
    Entry [ couchbase.compressor <ALL> ]
      Current = 'none'
    }
    Entry [ couchbase.compression_factor <ALL> ]
      Current = '1.3'
    }
    Entry [ couchbase.compression_threshold <ALL> ]
      Current = '2000'
    }
    Entry [ couchbase.durability_default_poll_interval <ALL> ]
      Current = '100000'
    }
    Entry [ couchbase.durability_default_timeout <ALL> ]
      Current = '40000000'
    }
    Entry [ couchbase.view_timeout <ALL> ]
      Current = '75'
    }
    Entry [ couchbase.instance.persistent <ALL> ]
      Current = '1'
    }
    Entry [ couchbase.restflush <ALL> ]
      Current = '1'
    }
    Entry [ couchbase.skip_config_errors_on_connect <ALL> ]
      Current = ''
    }
  }

  - Constants [34] {
    Constant [ integer COUCHBASE_SUCCESS ] { 0 }
    Constant [ integer COUCHBASE_AUTH_CONTINUE ] { 1 }
    Constant [ integer COUCHBASE_DELTA_BADVAL ] { 3 }
    Constant [ integer COUCHBASE_E2BIG ] { 4 }
    Constant [ integer COUCHBASE_EBUSY ] { 5 }
    Constant [ integer COUCHBASE_EINTERNAL ] { 6 }
    Constant [ integer COUCHBASE_EINVAL ] { 7 }
    Constant [ integer COUCHBASE_ENOMEM ] { 8 }
    Constant [ integer COUCHBASE_ERROR ] { 10 }
    Constant [ integer COUCHBASE_ETMPFAIL ] { 11 }
    Constant [ integer COUCHBASE_KEY_EEXISTS ] { 12 }
    Constant [ integer COUCHBASE_KEY_ENOENT ] { 13 }
    Constant [ integer COUCHBASE_NETWORK_ERROR ] { 16 }
    Constant [ integer COUCHBASE_NOT_MY_VBUCKET ] { 17 }
    Constant [ integer COUCHBASE_NOT_STORED ] { 18 }
    Constant [ integer COUCHBASE_NOT_SUPPORTED ] { 19 }
    Constant [ integer COUCHBASE_UNKNOWN_COMMAND ] { 20 }
    Constant [ integer COUCHBASE_UNKNOWN_HOST ] { 21 }
    Constant [ integer COUCHBASE_OPT_SERIALIZER ] { 1 }
    Constant [ integer COUCHBASE_OPT_COMPRESSION ] { 2 }
    Constant [ integer COUCHBASE_OPT_PREFIX_KEY ] { 3 }
    Constant [ integer COUCHBASE_OPT_IGNOREFLAGS ] { 4 }
    Constant [ integer COUCHBASE_SERIALIZER_PHP ] { 0 }
    Constant [ integer COUCHBASE_SERIALIZER_JSON ] { 1 }
    Constant [ integer COUCHBASE_SERIALIZER_JSON_ARRAY ] { 2 }
    Constant [ integer COUCHBASE_SERIALIZER_IGBINARY ] { 3 }
    Constant [ integer COUCHBASE_COMPRESSION_NONE ] { 0 }
    Constant [ integer COUCHBASE_COMPRESSION_FASTLZ ] { 2 }
    Constant [ integer COUCHBASE_COMPRESSION_ZLIB ] { 1 }
    Constant [ integer COUCHBASE_GET_PRESERVE_ORDER ] { 1 }
    Constant [ integer COUCHBASE_OPT_VOPTS_PASSTHROUGH ] { 5 }
    Constant [ integer COUCHBASE_REPLICA_FIRST ] { 0 }
    Constant [ integer COUCHBASE_REPLICA_ALL ] { 1 }
    Constant [ integer COUCHBASE_REPLICA_SELECT ] { 2 }
  }

  - Functions {
    Function [ <internal:couchbase> function couchbase_connect ] {

      - Parameters [5] {
        Parameter #0 [ <required> $host ]
        Parameter #1 [ <optional> $user ]
        Parameter #2 [ <optional> $password ]
        Parameter #3 [ <optional> $bucket ]
        Parameter #4 [ <optional> $persistent ]
      }
    }
    Function [ <internal:couchbase> function couchbase_add ] {

      - Parameters [4] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $key ]
        Parameter #2 [ <required> $value ]
        Parameter #3 [ <optional> $expiration ]
      }
    }
    Function [ <internal:couchbase> function couchbase_set ] {

      - Parameters [5] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $key ]
        Parameter #2 [ <required> $value ]
        Parameter #3 [ <optional> $expiration ]
        Parameter #4 [ <optional> $cas ]
      }
    }
    Function [ <internal:couchbase> function couchbase_set_multi ] {

      - Parameters [3] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> array $values ]
        Parameter #2 [ <optional> $expiration ]
      }
    }
    Function [ <internal:couchbase> function couchbase_replace ] {

      - Parameters [5] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $key ]
        Parameter #2 [ <required> $value ]
        Parameter #3 [ <optional> $expiration ]
        Parameter #4 [ <optional> $cas ]
      }
    }
    Function [ <internal:couchbase> function couchbase_prepend ] {

      - Parameters [5] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $key ]
        Parameter #2 [ <required> $value ]
        Parameter #3 [ <optional> $expiration ]
        Parameter #4 [ <optional> $cas ]
      }
    }
    Function [ <internal:couchbase> function couchbase_append ] {

      - Parameters [5] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $key ]
        Parameter #2 [ <required> $value ]
        Parameter #3 [ <optional> $expiration ]
        Parameter #4 [ <optional> $cas ]
      }
    }
    Function [ <internal:couchbase> function couchbase_cas ] {

      - Parameters [5] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $cas ]
        Parameter #2 [ <required> $key ]
        Parameter #3 [ <required> $value ]
        Parameter #4 [ <optional> $expiration ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get ] {

      - Parameters [4] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $key ]
        Parameter #2 [ <optional> $cache_cb ]
        Parameter #3 [ <optional> &$cas_token ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_multi ] {

      - Parameters [4] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> array $keys ]
        Parameter #2 [ <optional> array or NULL &$cas_tokens ]
        Parameter #3 [ <optional> $flags ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_delayed ] {

      - Parameters [6] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> array $keys ]
        Parameter #2 [ <optional> $with_cas ]
        Parameter #3 [ <optional> $cb ]
        Parameter #4 [ <optional> $expiry ]
        Parameter #5 [ <optional> $lock ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_and_lock ] {

      - Parameters [4] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $key ]
        Parameter #2 [ <required> &$cas ]
        Parameter #3 [ <optional> $expiry ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_and_lock_multi ] {

      - Parameters [5] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> array $keys ]
        Parameter #2 [ <required> array or NULL &$cas_tokens ]
        Parameter #3 [ <optional> $flags ]
        Parameter #4 [ <optional> $expiry ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_and_touch ] {

      - Parameters [4] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $key ]
        Parameter #2 [ <required> $expiry ]
        Parameter #3 [ <optional> &$cas ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_and_touch_multi ] {

      - Parameters [4] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> array $keys ]
        Parameter #2 [ <required> $expiry ]
        Parameter #3 [ <optional> array or NULL &$cas_tokens ]
      }
    }
    Function [ <internal:couchbase> function couchbase_unlock ] {

      - Parameters [3] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $key ]
        Parameter #2 [ <required> $cas ]
      }
    }
    Function [ <internal:couchbase> function couchbase_touch ] {

      - Parameters [3] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $key ]
        Parameter #2 [ <required> $expiry ]
      }
    }
    Function [ <internal:couchbase> function couchbase_touch_multi ] {

      - Parameters [3] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> array $keys ]
        Parameter #2 [ <required> $expiry ]
      }
    }
    Function [ <internal:couchbase> function couchbase_fetch ] {

      - Parameters [1] {
        Parameter #0 [ <required> $resource ]
      }
    }
    Function [ <internal:couchbase> function couchbase_fetch_all ] {

      - Parameters [1] {
        Parameter #0 [ <required> $resource ]
      }
    }
    Function [ <internal:couchbase> function couchbase_view ] {

      - Parameters [5] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $doc_name ]
        Parameter #2 [ <optional> $view_name ]
        Parameter #3 [ <optional> array $options ]
        Parameter #4 [ <optional> $return_errors ]
      }
    }
    Function [ <internal:couchbase> function couchbase_view_gen_query ] {

      - Parameters [5] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $doc_name ]
        Parameter #2 [ <optional> $view_name ]
        Parameter #3 [ <optional> array $options ]
        Parameter #4 [ <optional> $return_errors ]
      }
    }
    Function [ <internal:couchbase> function couchbase_increment ] {

      - Parameters [6] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $key ]
        Parameter #2 [ <optional> $offset ]
        Parameter #3 [ <optional> $create ]
        Parameter #4 [ <optional> $expiration ]
        Parameter #5 [ <optional> $initial ]
      }
    }
    Function [ <internal:couchbase> function couchbase_decrement ] {

      - Parameters [6] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $key ]
        Parameter #2 [ <optional> $offset ]
        Parameter #3 [ <optional> $create ]
        Parameter #4 [ <optional> $expiration ]
        Parameter #5 [ <optional> $initial ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_stats ] {

      - Parameters [1] {
        Parameter #0 [ <required> $resource ]
      }
    }
    Function [ <internal:couchbase> function couchbase_delete ] {

      - Parameters [3] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $key ]
        Parameter #2 [ <optional> $cas ]
      }
    }
    Function [ <internal:couchbase> function couchbase_flush ] {

      - Parameters [1] {
        Parameter #0 [ <required> $resource ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_result_code ] {

      - Parameters [1] {
        Parameter #0 [ <required> $resource ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_result_message ] {

      - Parameters [1] {
        Parameter #0 [ <required> $resource ]
      }
    }
    Function [ <internal:couchbase> function couchbase_set_option ] {

      - Parameters [3] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $option ]
        Parameter #2 [ <required> $value ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_option ] {

      - Parameters [2] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $option ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_servers ] {

      - Parameters [1] {
        Parameter #0 [ <required> $resource ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_num_replicas ] {

      - Parameters [1] {
        Parameter #0 [ <required> $resource ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_version ] {

      - Parameters [1] {
        Parameter #0 [ <required> $resource ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_client_version ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:couchbase> function couchbase_observe ] {

      - Parameters [4] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $key ]
        Parameter #2 [ <required> $cas ]
        Parameter #3 [ <optional> &$details ]
      }
    }
    Function [ <internal:couchbase> function couchbase_observe_multi ] {

      - Parameters [3] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> array $key_to_cas ]
        Parameter #2 [ <optional> &$details ]
      }
    }
    Function [ <internal:couchbase> function couchbase_key_durability ] {

      - Parameters [4] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $key ]
        Parameter #2 [ <required> $cas ]
        Parameter #3 [ <required> array $durability ]
      }
    }
    Function [ <internal:couchbase> function couchbase_key_durability_multi ] {

      - Parameters [3] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> array $key_to_cas ]
        Parameter #2 [ <required> array $durability ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_design_doc ] {

      - Parameters [2] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $name ]
      }
    }
    Function [ <internal:couchbase> function couchbase_set_design_doc ] {

      - Parameters [3] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $name ]
        Parameter #2 [ <required> $doc ]
      }
    }
    Function [ <internal:couchbase> function couchbase_delete_design_doc ] {

      - Parameters [2] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $name ]
      }
    }
    Function [ <internal:couchbase> function couchbase_list_design_docs ] {

      - Parameters [1] {
        Parameter #0 [ <required> $resource ]
      }
    }
    Function [ <internal:couchbase> function couchbase_get_timeout ] {

      - Parameters [1] {
        Parameter #0 [ <required> $resource ]
      }
    }
    Function [ <internal:couchbase> function couchbase_set_timeout ] {

      - Parameters [2] {
        Parameter #0 [ <required> $resource ]
        Parameter #1 [ <required> $timeout ]
      }
    }
  }

  - Classes [15] {
    Class [ <internal:couchbase> class Couchbase ] {

      - Constants [34] {
        Constant [ integer SUCCESS ] { 0 }
        Constant [ integer AUTH_CONTINUE ] { 1 }
        Constant [ integer DELTA_BADVAL ] { 3 }
        Constant [ integer E2BIG ] { 4 }
        Constant [ integer EBUSY ] { 5 }
        Constant [ integer EINTERNAL ] { 6 }
        Constant [ integer EINVAL ] { 7 }
        Constant [ integer ENOMEM ] { 8 }
        Constant [ integer ERROR ] { 10 }
        Constant [ integer ETMPFAIL ] { 11 }
        Constant [ integer KEY_EEXISTS ] { 12 }
        Constant [ integer KEY_ENOENT ] { 13 }
        Constant [ integer NETWORK_ERROR ] { 16 }
        Constant [ integer NOT_MY_VBUCKET ] { 17 }
        Constant [ integer NOT_STORED ] { 18 }
        Constant [ integer NOT_SUPPORTED ] { 19 }
        Constant [ integer UNKNOWN_COMMAND ] { 20 }
        Constant [ integer UNKNOWN_HOST ] { 21 }
        Constant [ integer OPT_SERIALIZER ] { 1 }
        Constant [ integer OPT_COMPRESSION ] { 2 }
        Constant [ integer OPT_PREFIX_KEY ] { 3 }
        Constant [ integer OPT_IGNOREFLAGS ] { 4 }
        Constant [ integer SERIALIZER_PHP ] { 0 }
        Constant [ integer SERIALIZER_JSON ] { 1 }
        Constant [ integer SERIALIZER_JSON_ARRAY ] { 2 }
        Constant [ integer SERIALIZER_IGBINARY ] { 3 }
        Constant [ integer COMPRESSION_NONE ] { 0 }
        Constant [ integer COMPRESSION_FASTLZ ] { 2 }
        Constant [ integer COMPRESSION_ZLIB ] { 1 }
        Constant [ integer GET_PRESERVE_ORDER ] { 1 }
        Constant [ integer OPT_VOPTS_PASSTHROUGH ] { 5 }
        Constant [ integer REPLICA_FIRST ] { 0 }
        Constant [ integer REPLICA_ALL ] { 1 }
        Constant [ integer REPLICA_SELECT ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> private $_handle ]
      }

      - Methods [46] {
        Method [ <internal:couchbase, ctor> public method __construct ] {

          - Parameters [5] {
            Parameter #0 [ <required> $hosts ]
            Parameter #1 [ <optional> $user ]
            Parameter #2 [ <optional> $password ]
            Parameter #3 [ <optional> $bucket ]
            Parameter #4 [ <optional> $persistent ]
          }
        }

        Method [ <internal:couchbase> public method add ] {

          - Parameters [5] {
            Parameter #0 [ <required> $id ]
            Parameter #1 [ <required> $document ]
            Parameter #2 [ <optional> $expiry ]
            Parameter #3 [ <optional> $persist_to ]
            Parameter #4 [ <optional> $replicate_to ]
          }
        }

        Method [ <internal:couchbase> public method set ] {

          - Parameters [6] {
            Parameter #0 [ <required> $id ]
            Parameter #1 [ <required> $document ]
            Parameter #2 [ <optional> $expiry ]
            Parameter #3 [ <optional> $cas ]
            Parameter #4 [ <optional> $persist_to ]
            Parameter #5 [ <optional> $replicate_to ]
          }
        }

        Method [ <internal:couchbase> public method setMulti ] {

          - Parameters [4] {
            Parameter #0 [ <required> array $documents ]
            Parameter #1 [ <optional> $expiry ]
            Parameter #2 [ <optional> $persist_to ]
            Parameter #3 [ <optional> $replicate_to ]
          }
        }

        Method [ <internal:couchbase> public method replace ] {

          - Parameters [6] {
            Parameter #0 [ <required> $id ]
            Parameter #1 [ <required> $document ]
            Parameter #2 [ <optional> $expiry ]
            Parameter #3 [ <optional> $cas ]
            Parameter #4 [ <optional> $persist_to ]
            Parameter #5 [ <optional> $replicate_to ]
          }
        }

        Method [ <internal:couchbase> public method prepend ] {

          - Parameters [6] {
            Parameter #0 [ <required> $id ]
            Parameter #1 [ <required> $document ]
            Parameter #2 [ <optional> $expiry ]
            Parameter #3 [ <optional> $cas ]
            Parameter #4 [ <optional> $persist_to ]
            Parameter #5 [ <optional> $replicate_to ]
          }
        }

        Method [ <internal:couchbase> public method append ] {

          - Parameters [6] {
            Parameter #0 [ <required> $id ]
            Parameter #1 [ <required> $document ]
            Parameter #2 [ <optional> $expiry ]
            Parameter #3 [ <optional> $cas ]
            Parameter #4 [ <optional> $persist_to ]
            Parameter #5 [ <optional> $replicate_to ]
          }
        }

        Method [ <internal:couchbase> public method cas ] {

          - Parameters [4] {
            Parameter #0 [ <required> $cas ]
            Parameter #1 [ <required> $id ]
            Parameter #2 [ <required> $document ]
            Parameter #3 [ <optional> $expiry ]
          }
        }

        Method [ <internal:couchbase> public method get ] {

          - Parameters [3] {
            Parameter #0 [ <required> $id ]
            Parameter #1 [ <optional> $callback ]
            Parameter #2 [ <optional> &$cas ]
          }
        }

        Method [ <internal:couchbase> public method getMulti ] {

          - Parameters [3] {
            Parameter #0 [ <required> array $ids ]
            Parameter #1 [ <optional> array or NULL &$cas ]
            Parameter #2 [ <optional> $flags ]
          }
        }

        Method [ <internal:couchbase> public method getReplica ] {

          - Parameters [2] {
            Parameter #0 [ <required> $ids ]
            Parameter #1 [ <optional> $strategy ]
          }
        }

        Method [ <internal:couchbase> public method getDelayed ] {

          - Parameters [5] {
            Parameter #0 [ <required> array $ids ]
            Parameter #1 [ <optional> $with_cas ]
            Parameter #2 [ <optional> $callback ]
            Parameter #3 [ <optional> $expiry ]
            Parameter #4 [ <optional> $lock ]
          }
        }

        Method [ <internal:couchbase> public method getAndLock ] {

          - Parameters [3] {
            Parameter #0 [ <required> $ids ]
            Parameter #1 [ <required> &$cas ]
            Parameter #2 [ <optional> $expiry ]
          }
        }

        Method [ <internal:couchbase> public method getAndLockMulti ] {

          - Parameters [4] {
            Parameter #0 [ <required> array $ids ]
            Parameter #1 [ <required> array or NULL &$cas ]
            Parameter #2 [ <optional> $flags ]
            Parameter #3 [ <optional> $expiry ]
          }
        }

        Method [ <internal:couchbase> public method getAndTouch ] {

          - Parameters [3] {
            Parameter #0 [ <required> $id ]
            Parameter #1 [ <required> $expiry ]
            Parameter #2 [ <optional> &$cas ]
          }
        }

        Method [ <internal:couchbase> public method getAndTouchMulti ] {

          - Parameters [3] {
            Parameter #0 [ <required> array $ids ]
            Parameter #1 [ <required> $expiry ]
            Parameter #2 [ <optional> array or NULL &$cas ]
          }
        }

        Method [ <internal:couchbase> public method unlock ] {

          - Parameters [2] {
            Parameter #0 [ <required> $id ]
            Parameter #1 [ <required> $cas ]
          }
        }

        Method [ <internal:couchbase> public method touch ] {

          - Parameters [2] {
            Parameter #0 [ <required> $id ]
            Parameter #1 [ <required> $expiry ]
          }
        }

        Method [ <internal:couchbase> public method touchMulti ] {

          - Parameters [2] {
            Parameter #0 [ <required> array $ids ]
            Parameter #1 [ <required> $expiry ]
          }
        }

        Method [ <internal:couchbase> public method fetch ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:couchbase> public method fetchAll ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:couchbase> public method view ] {

          - Parameters [4] {
            Parameter #0 [ <required> $document ]
            Parameter #1 [ <optional> $view ]
            Parameter #2 [ <optional> array $options ]
            Parameter #3 [ <optional> $return_errors ]
          }
        }

        Method [ <internal:couchbase> public method viewGenQuery ] {

          - Parameters [4] {
            Parameter #0 [ <required> $doc_name ]
            Parameter #1 [ <optional> $view_name ]
            Parameter #2 [ <optional> array $options ]
            Parameter #3 [ <optional> $return_errors ]
          }
        }

        Method [ <internal:couchbase> public method delete ] {

          - Parameters [4] {
            Parameter #0 [ <required> $id ]
            Parameter #1 [ <optional> $cas ]
            Parameter #2 [ <optional> $persist_to ]
            Parameter #3 [ <optional> $replicate_to ]
          }
        }

        Method [ <internal:couchbase> public method getStats ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:couchbase> public method flush ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:couchbase> public method increment ] {

          - Parameters [5] {
            Parameter #0 [ <required> $id ]
            Parameter #1 [ <optional> $delta ]
            Parameter #2 [ <optional> $create ]
            Parameter #3 [ <optional> $expire ]
            Parameter #4 [ <optional> $initial ]
          }
        }

        Method [ <internal:couchbase> public method decrement ] {

          - Parameters [5] {
            Parameter #0 [ <required> $id ]
            Parameter #1 [ <optional> $delta ]
            Parameter #2 [ <optional> $create ]
            Parameter #3 [ <optional> $expire ]
            Parameter #4 [ <optional> $initial ]
          }
        }

        Method [ <internal:couchbase> public method getResultCode ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:couchbase> public method getResultMessage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:couchbase> public method setOption ] {

          - Parameters [2] {
            Parameter #0 [ <required> $option ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:couchbase> public method getOption ] {

          - Parameters [1] {
            Parameter #0 [ <required> $option ]
          }
        }

        Method [ <internal:couchbase> public method getVersion ] {

          - Parameters [1] {
            Parameter #0 [ <required> $resource ]
          }
        }

        Method [ <internal:couchbase> public method getClientVersion ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:couchbase> public method getNumReplicas ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:couchbase> public method getServers ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:couchbase> public method observe ] {

          - Parameters [3] {
            Parameter #0 [ <required> $id ]
            Parameter #1 [ <required> $cas ]
            Parameter #2 [ <optional> &$details ]
          }
        }

        Method [ <internal:couchbase> public method observeMulti ] {

          - Parameters [2] {
            Parameter #0 [ <required> array $ids ]
            Parameter #1 [ <optional> &$details ]
          }
        }

        Method [ <internal:couchbase> public method keyDurability ] {

          - Parameters [3] {
            Parameter #0 [ <required> $id ]
            Parameter #1 [ <required> $cas ]
            Parameter #2 [ <required> array $details ]
          }
        }

        Method [ <internal:couchbase> public method keyDurabilityMulti ] {

          - Parameters [2] {
            Parameter #0 [ <required> array $ids ]
            Parameter #1 [ <required> array $details ]
          }
        }

        Method [ <internal:couchbase> public method getDesignDoc ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:couchbase> public method setDesignDoc ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $document ]
          }
        }

        Method [ <internal:couchbase> public method deleteDesignDoc ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:couchbase> public method listDesignDocs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:couchbase> public method getTimeout ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:couchbase> public method setTimeout ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timeout ]
          }
        }
      }
    }

    Class [ <internal:couchbase> class CouchbaseClusterManager ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:couchbase, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> $hosts ]
            Parameter #1 [ <required> $user ]
            Parameter #2 [ <required> $password ]
          }
        }

        Method [ <internal:couchbase> public method createBucket ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $attributes ]
          }
        }

        Method [ <internal:couchbase> public method modifyBucket ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $attributes ]
          }
        }

        Method [ <internal:couchbase> public method deleteBucket ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:couchbase> public method flushBucket ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:couchbase> public method getBucketInfo ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $name ]
          }
        }

        Method [ <internal:couchbase> public method getInfo ] {
        }
      }
    }

    Class [ <internal:couchbase> class CouchbaseException extends Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:couchbase> class CouchbaseIllegalKeyException extends CouchbaseException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:couchbase> class CouchbaseNoSuchKeyException extends CouchbaseException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:couchbase> class CouchbaseAuthenticationException extends CouchbaseException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:couchbase> class CouchbaseLibcouchbaseException extends CouchbaseException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:couchbase> class CouchbaseServerException extends CouchbaseException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:couchbase> class CouchbaseKeyMutatedException extends CouchbaseException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:couchbase> class CouchbaseTimeoutException extends CouchbaseException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:couchbase> class CouchbaseNotEnoughNodesException extends CouchbaseException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:couchbase> class CouchbaseIllegalOptionException extends CouchbaseException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:couchbase> class CouchbaseIllegalValueException extends CouchbaseException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:couchbase> class CouchbaseIllegalArgumentsException extends CouchbaseException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:couchbase> class CouchbaseNotSupportedException extends CouchbaseException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }
  }
}

