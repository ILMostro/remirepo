Extension [ <persistent> extension #152 zmq version 1.1.2 ] {

  - Classes [10] {
    Class [ <internal:zmq> class ZMQ ] {

      - Constants [61] {
        Constant [ integer SOCKET_PAIR ] { 0 }
        Constant [ integer SOCKET_PUB ] { 1 }
        Constant [ integer SOCKET_SUB ] { 2 }
        Constant [ integer SOCKET_XSUB ] { 10 }
        Constant [ integer SOCKET_XPUB ] { 9 }
        Constant [ integer SOCKET_REQ ] { 3 }
        Constant [ integer SOCKET_REP ] { 4 }
        Constant [ integer SOCKET_XREQ ] { 5 }
        Constant [ integer SOCKET_XREP ] { 6 }
        Constant [ integer SOCKET_PUSH ] { 8 }
        Constant [ integer SOCKET_PULL ] { 7 }
        Constant [ integer SOCKET_DEALER ] { 5 }
        Constant [ integer SOCKET_ROUTER ] { 6 }
        Constant [ integer SOCKET_UPSTREAM ] { 7 }
        Constant [ integer SOCKET_DOWNSTREAM ] { 8 }
        Constant [ integer POLL_IN ] { 1 }
        Constant [ integer POLL_OUT ] { 2 }
        Constant [ integer MODE_SNDMORE ] { 2 }
        Constant [ integer MODE_NOBLOCK ] { 1 }
        Constant [ integer MODE_DONTWAIT ] { 1 }
        Constant [ integer DEVICE_FORWARDER ] { 2 }
        Constant [ integer DEVICE_QUEUE ] { 3 }
        Constant [ integer DEVICE_STREAMER ] { 1 }
        Constant [ integer ERR_INTERNAL ] { -99 }
        Constant [ integer ERR_EAGAIN ] { 11 }
        Constant [ integer ERR_ENOTSUP ] { 95 }
        Constant [ integer ERR_EFSM ] { 156384763 }
        Constant [ integer ERR_ETERM ] { 156384765 }
        Constant [ string LIBZMQ_VER ] { 3.2.4 }
        Constant [ integer SOCKOPT_HWM ] { 201 }
        Constant [ integer SOCKOPT_SNDHWM ] { 23 }
        Constant [ integer SOCKOPT_RCVHWM ] { 24 }
        Constant [ integer SOCKOPT_AFFINITY ] { 4 }
        Constant [ integer SOCKOPT_IDENTITY ] { 5 }
        Constant [ integer SOCKOPT_RATE ] { 8 }
        Constant [ integer SOCKOPT_RECOVERY_IVL ] { 9 }
        Constant [ integer SOCKOPT_SNDBUF ] { 11 }
        Constant [ integer SOCKOPT_RCVBUF ] { 12 }
        Constant [ integer SOCKOPT_LINGER ] { 17 }
        Constant [ integer SOCKOPT_RECONNECT_IVL ] { 18 }
        Constant [ integer SOCKOPT_RECONNECT_IVL_MAX ] { 21 }
        Constant [ integer SOCKOPT_BACKLOG ] { 19 }
        Constant [ integer SOCKOPT_MAXMSGSIZE ] { 22 }
        Constant [ integer SOCKOPT_SUBSCRIBE ] { 6 }
        Constant [ integer SOCKOPT_UNSUBSCRIBE ] { 7 }
        Constant [ integer SOCKOPT_TYPE ] { 16 }
        Constant [ integer SOCKOPT_RCVMORE ] { 13 }
        Constant [ integer SOCKOPT_FD ] { 14 }
        Constant [ integer SOCKOPT_EVENTS ] { 15 }
        Constant [ integer SOCKOPT_SNDTIMEO ] { 28 }
        Constant [ integer SOCKOPT_RCVTIMEO ] { 27 }
        Constant [ integer SOCKOPT_IPV4ONLY ] { 31 }
        Constant [ integer SOCKOPT_LAST_ENDPOINT ] { 32 }
        Constant [ integer SOCKOPT_TCP_KEEPALIVE ] { 34 }
        Constant [ integer SOCKOPT_TCP_KEEPALIVE_IDLE ] { 36 }
        Constant [ integer SOCKOPT_TCP_KEEPALIVE_CNT ] { 35 }
        Constant [ integer SOCKOPT_TCP_KEEPALIVE_INTVL ] { 37 }
        Constant [ integer SOCKOPT_TCP_ACCEPT_FILTER ] { 38 }
        Constant [ integer SOCKOPT_DELAY_ATTACH_ON_CONNECT ] { 39 }
        Constant [ integer SOCKOPT_XPUB_VERBOSE ] { 40 }
        Constant [ integer CTXOPT_MAX_SOCKETS ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:zmq> static public method clock ] {

          - Parameters [0] {
          }
        }
      }

      - Properties [0] {
      }

      - Methods [1] {
        Method [ <internal:zmq, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:zmq> class ZMQContext ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:zmq, ctor> final public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $io_threads ]
            Parameter #1 [ <optional> $persistent ]
          }
        }

        Method [ <internal:zmq> public method getsocket ] {

          - Parameters [3] {
            Parameter #0 [ <required> $type ]
            Parameter #1 [ <required> $dsn ]
            Parameter #2 [ <optional> $on_new_socket ]
          }
        }

        Method [ <internal:zmq> public method ispersistent ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:zmq> final private method __clone ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:zmq> public method setOpt ] {

          - Parameters [2] {
            Parameter #0 [ <required> $option ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:zmq> public method getOpt ] {

          - Parameters [1] {
            Parameter #0 [ <required> $option ]
          }
        }
      }
    }

    Class [ <internal:zmq> class ZMQSocket ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [18] {
        Method [ <internal:zmq, ctor> final public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> ZMQContext $ZMQContext ]
            Parameter #1 [ <required> $type ]
            Parameter #2 [ <optional> $persistent_id ]
            Parameter #3 [ <optional> $on_new_socket ]
          }
        }

        Method [ <internal:zmq> public method send ] {

          - Parameters [2] {
            Parameter #0 [ <required> $message ]
            Parameter #1 [ <optional> $mode ]
          }
        }

        Method [ <internal:zmq> public method recv ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $mode ]
          }
        }

        Method [ <internal:zmq> public method sendmulti ] {

          - Parameters [2] {
            Parameter #0 [ <required> $message ]
            Parameter #1 [ <optional> $mode ]
          }
        }

        Method [ <internal:zmq> public method recvmulti ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $mode ]
          }
        }

        Method [ <internal:zmq> public method bind ] {

          - Parameters [2] {
            Parameter #0 [ <required> $dsn ]
            Parameter #1 [ <optional> $force ]
          }
        }

        Method [ <internal:zmq> public method connect ] {

          - Parameters [2] {
            Parameter #0 [ <required> $dsn ]
            Parameter #1 [ <optional> $force ]
          }
        }

        Method [ <internal:zmq> public method unbind ] {

          - Parameters [1] {
            Parameter #0 [ <required> $dsn ]
          }
        }

        Method [ <internal:zmq> public method disconnect ] {

          - Parameters [1] {
            Parameter #0 [ <required> $dsn ]
          }
        }

        Method [ <internal:zmq> public method setsockopt ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:zmq> public method getendpoints ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:zmq> public method getsockettype ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:zmq> public method ispersistent ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:zmq> public method getpersistentid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:zmq> public method getsockopt ] {

          - Parameters [1] {
            Parameter #0 [ <required> $key ]
          }
        }

        Method [ <internal:zmq> final private method __clone ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:zmq> public method sendmsg ] {

          - Parameters [2] {
            Parameter #0 [ <required> $message ]
            Parameter #1 [ <optional> $mode ]
          }
        }

        Method [ <internal:zmq> public method recvmsg ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $mode ]
          }
        }
      }
    }

    Class [ <internal:zmq> class ZMQPoll ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:zmq> public method add ] {

          - Parameters [2] {
            Parameter #0 [ <required> $entry ]
            Parameter #1 [ <required> $type ]
          }
        }

        Method [ <internal:zmq> public method poll ] {

          - Parameters [3] {
            Parameter #0 [ <required> &$readable ]
            Parameter #1 [ <required> &$writable ]
            Parameter #2 [ <optional> $timeout ]
          }
        }

        Method [ <internal:zmq> public method getlasterrors ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:zmq> public method remove ] {

          - Parameters [1] {
            Parameter #0 [ <required> $remove ]
          }
        }

        Method [ <internal:zmq> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:zmq> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:zmq> final private method __clone ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:zmq> class ZMQDevice ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [9] {
        Method [ <internal:zmq, ctor> final public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> ZMQSocket $frontend ]
            Parameter #1 [ <required> ZMQSocket $backend ]
            Parameter #2 [ <optional> ZMQSocket $capture ]
          }
        }

        Method [ <internal:zmq> public method run ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:zmq> public method setidlecallback ] {

          - Parameters [3] {
            Parameter #0 [ <required> $idle_callback ]
            Parameter #1 [ <required> $timeout ]
            Parameter #2 [ <optional> $user_data ]
          }
        }

        Method [ <internal:zmq> public method setidletimeout ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timeout ]
          }
        }

        Method [ <internal:zmq> public method getidletimeout ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:zmq> public method settimercallback ] {

          - Parameters [3] {
            Parameter #0 [ <required> $idle_callback ]
            Parameter #1 [ <required> $timeout ]
            Parameter #2 [ <optional> $user_data ]
          }
        }

        Method [ <internal:zmq> public method settimertimeout ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timeout ]
          }
        }

        Method [ <internal:zmq> public method gettimertimeout ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:zmq> final private method __clone ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:zmq> class ZMQException extends Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:zmq> final class ZMQContextException extends ZMQException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:zmq> final class ZMQSocketException extends ZMQException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:zmq> final class ZMQPollException extends ZMQException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:zmq> final class ZMQDeviceException extends ZMQException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }
  }
}

