Extension [ <persistent> extension #146 xslcache version 0.7.2 ] {

  - Dependencies {
    Dependency [ libxml (Required) ]
    Dependency [ dom (Required) ]
  }

  - Classes [1] {
    Class [ <internal:xslcache> class XSLTCache ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [9] {
        Method [ <internal:xslcache> public method importStylesheet ] {

          - Parameters [2] {
            Parameter #0 [ <required> $path ]
            Parameter #1 [ <optional> $cachesheet ]
          }
        }

        Method [ <internal:xslcache> public method transformToDoc ] {

          - Parameters [1] {
            Parameter #0 [ <required> $doc ]
          }
        }

        Method [ <internal:xslcache> public method transformToUri ] {

          - Parameters [2] {
            Parameter #0 [ <required> $doc ]
            Parameter #1 [ <required> $uri ]
          }
        }

        Method [ <internal:xslcache> public method transformToXml ] {

          - Parameters [1] {
            Parameter #0 [ <required> $doc ]
          }
        }

        Method [ <internal:xslcache> public method setParameter ] {

          - Parameters [3] {
            Parameter #0 [ <required> $namespace ]
            Parameter #1 [ <required> $name ]
            Parameter #2 [ <optional> $value ]
          }
        }

        Method [ <internal:xslcache> public method getParameter ] {

          - Parameters [2] {
            Parameter #0 [ <required> $namespace ]
            Parameter #1 [ <required> $name ]
          }
        }

        Method [ <internal:xslcache> public method removeParameter ] {

          - Parameters [2] {
            Parameter #0 [ <required> $namespace ]
            Parameter #1 [ <required> $name ]
          }
        }

        Method [ <internal:xslcache> public method hasExsltSupport ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:xslcache> public method registerPHPFunctions ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $restrict ]
          }
        }
      }
    }
  }
}

