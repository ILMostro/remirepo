Extension [ <persistent> extension #144 selinux version 0.4.1 ] {

  - Functions {
    Function [ <internal:selinux> function selinux_is_enabled ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:selinux> function selinux_mls_is_enabled ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:selinux> function selinux_getenforce ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:selinux> function selinux_setenforce ] {

      - Parameters [1] {
        Parameter #0 [ <required> $mode ]
      }
    }
    Function [ <internal:selinux> function selinux_policyvers ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:selinux> function selinux_deny_unknown ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:selinux> function selinux_getcon ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:selinux> function selinux_setcon ] {

      - Parameters [1] {
        Parameter #0 [ <required> $context ]
      }
    }
    Function [ <internal:selinux> function selinux_getpidcon ] {

      - Parameters [1] {
        Parameter #0 [ <required> $pid ]
      }
    }
    Function [ <internal:selinux> function selinux_getprevcon ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:selinux> function selinux_getexeccon ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:selinux> function selinux_setexeccon ] {

      - Parameters [1] {
        Parameter #0 [ <required> $context ]
      }
    }
    Function [ <internal:selinux> function selinux_getfscreatecon ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:selinux> function selinux_setfscreatecon ] {

      - Parameters [1] {
        Parameter #0 [ <required> $context ]
      }
    }
    Function [ <internal:selinux> function selinux_getkeycreatecon ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:selinux> function selinux_setkeycreatecon ] {

      - Parameters [1] {
        Parameter #0 [ <required> $context ]
      }
    }
    Function [ <internal:selinux> function selinux_getsockcreatecon ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:selinux> function selinux_setsockcreatecon ] {

      - Parameters [1] {
        Parameter #0 [ <required> $context ]
      }
    }
    Function [ <internal:selinux> function selinux_getfilecon ] {

      - Parameters [1] {
        Parameter #0 [ <required> $filename ]
      }
    }
    Function [ <internal:selinux> function selinux_lgetfilecon ] {

      - Parameters [1] {
        Parameter #0 [ <required> $filename ]
      }
    }
    Function [ <internal:selinux> function selinux_fgetfilecon ] {

      - Parameters [1] {
        Parameter #0 [ <required> $stream ]
      }
    }
    Function [ <internal:selinux> function selinux_setfilecon ] {

      - Parameters [2] {
        Parameter #0 [ <required> $filename ]
        Parameter #1 [ <required> $context ]
      }
    }
    Function [ <internal:selinux> function selinux_lsetfilecon ] {

      - Parameters [2] {
        Parameter #0 [ <required> $filename ]
        Parameter #1 [ <required> $context ]
      }
    }
    Function [ <internal:selinux> function selinux_fsetfilecon ] {

      - Parameters [2] {
        Parameter #0 [ <required> $stream ]
        Parameter #1 [ <required> $context ]
      }
    }
    Function [ <internal:selinux> function selinux_getpeercon ] {

      - Parameters [1] {
        Parameter #0 [ <required> $stream ]
      }
    }
    Function [ <internal:selinux> function selinux_compute_av ] {

      - Parameters [3] {
        Parameter #0 [ <required> $scontext ]
        Parameter #1 [ <required> $tcontext ]
        Parameter #2 [ <required> $tclass ]
      }
    }
    Function [ <internal:selinux> function selinux_compute_create ] {

      - Parameters [4] {
        Parameter #0 [ <required> $scontext ]
        Parameter #1 [ <required> $tcontext ]
        Parameter #2 [ <required> $tclass ]
        Parameter #3 [ <optional> $name ]
      }
    }
    Function [ <internal:selinux> function selinux_compute_relabel ] {

      - Parameters [3] {
        Parameter #0 [ <required> $scontext ]
        Parameter #1 [ <required> $tcontext ]
        Parameter #2 [ <required> $tclass ]
      }
    }
    Function [ <internal:selinux> function selinux_compute_member ] {

      - Parameters [3] {
        Parameter #0 [ <required> $scontext ]
        Parameter #1 [ <required> $tcontext ]
        Parameter #2 [ <required> $tclass ]
      }
    }
    Function [ <internal:selinux> function selinux_compute_user ] {

      - Parameters [2] {
        Parameter #0 [ <required> $scontext ]
        Parameter #1 [ <required> $username ]
      }
    }
    Function [ <internal:selinux> function selinux_get_initial_context ] {

      - Parameters [1] {
        Parameter #0 [ <required> $name ]
      }
    }
    Function [ <internal:selinux> function selinux_check_context ] {

      - Parameters [1] {
        Parameter #0 [ <required> $context ]
      }
    }
    Function [ <internal:selinux> function selinux_canonicalize_context ] {

      - Parameters [1] {
        Parameter #0 [ <required> $context ]
      }
    }
    Function [ <internal:selinux> function selinux_get_boolean_names ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:selinux> function selinux_get_boolean_pending ] {

      - Parameters [1] {
        Parameter #0 [ <required> $bool_name ]
      }
    }
    Function [ <internal:selinux> function selinux_get_boolean_active ] {

      - Parameters [1] {
        Parameter #0 [ <required> $bool_name ]
      }
    }
    Function [ <internal:selinux> function selinux_set_boolean ] {

      - Parameters [2] {
        Parameter #0 [ <required> $bool_name ]
        Parameter #1 [ <required> $bool_value ]
      }
    }
    Function [ <internal:selinux> function selinux_commit_booleans ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:selinux> function selinux_trans_to_raw_context ] {

      - Parameters [1] {
        Parameter #0 [ <required> $context ]
      }
    }
    Function [ <internal:selinux> function selinux_raw_to_trans_context ] {

      - Parameters [1] {
        Parameter #0 [ <required> $context ]
      }
    }
    Function [ <internal:selinux> function selinux_file_label_lookup ] {

      - Parameters [6] {
        Parameter #0 [ <required> $pathname ]
        Parameter #1 [ <required> $mode ]
        Parameter #2 [ <optional> $validate ]
        Parameter #3 [ <optional> $baseonly ]
        Parameter #4 [ <optional> $subset ]
        Parameter #5 [ <optional> $specfile ]
      }
    }
    Function [ <internal:selinux> function selinux_media_label_lookup ] {

      - Parameters [3] {
        Parameter #0 [ <required> $device_name ]
        Parameter #1 [ <optional> $validate ]
        Parameter #2 [ <optional> $specfile ]
      }
    }
    Function [ <internal:selinux> function selinux_x_label_lookup ] {

      - Parameters [2] {
        Parameter #0 [ <required> $x_key ]
        Parameter #1 [ <required> $x_type ]
      }
    }
    Function [ <internal:selinux> function selinux_db_label_lookup ] {

      - Parameters [2] {
        Parameter #0 [ <required> $db_key ]
        Parameter #1 [ <required> $db_type ]
      }
    }
    Function [ <internal:selinux> function selinux_getenforcemode ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:selinux> function selinux_getpolicytype ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:selinux> function selinux_policy_root ] {

      - Parameters [0] {
      }
    }
  }
}

