Extension [ <persistent> extension #156 xmldiff version 1.1.0 ] {

  - Dependencies {
    Dependency [ dom (Required) ]
    Dependency [ libxml (Required) ]
  }

  - Classes [5] {
    Class [ <internal:xmldiff> abstract class XMLDiff\Base ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [3] {
        Method [ <internal:xmldiff, ctor> public method __construct ] {
        }

        Method [ <internal:xmldiff> abstract public method diff ] {

          - Parameters [2] {
            Parameter #0 [ <required> $from ]
            Parameter #1 [ <required> $to ]
          }
        }

        Method [ <internal:xmldiff> abstract public method merge ] {

          - Parameters [2] {
            Parameter #0 [ <required> $src ]
            Parameter #1 [ <required> $diff ]
          }
        }
      }
    }

    Class [ <internal:xmldiff> class XMLDiff\DOM extends XMLDiff\Base ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [3] {
        Method [ <internal:xmldiff, overwrites XMLDiff\Base, prototype XMLDiff\Base> public method diff ] {

          - Parameters [2] {
            Parameter #0 [ <required> $from ]
            Parameter #1 [ <required> $to ]
          }
        }

        Method [ <internal:xmldiff, overwrites XMLDiff\Base, prototype XMLDiff\Base> public method merge ] {

          - Parameters [2] {
            Parameter #0 [ <required> $src ]
            Parameter #1 [ <required> $diff ]
          }
        }

        Method [ <internal:xmldiff, inherits XMLDiff\Base, ctor> public method __construct ] {
        }
      }
    }

    Class [ <internal:xmldiff> class XMLDiff\File extends XMLDiff\Base ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [3] {
        Method [ <internal:xmldiff, overwrites XMLDiff\Base, prototype XMLDiff\Base> public method diff ] {

          - Parameters [2] {
            Parameter #0 [ <required> $from ]
            Parameter #1 [ <required> $to ]
          }
        }

        Method [ <internal:xmldiff, overwrites XMLDiff\Base, prototype XMLDiff\Base> public method merge ] {

          - Parameters [2] {
            Parameter #0 [ <required> $src ]
            Parameter #1 [ <required> $diff ]
          }
        }

        Method [ <internal:xmldiff, inherits XMLDiff\Base, ctor> public method __construct ] {
        }
      }
    }

    Class [ <internal:xmldiff> class XMLDiff\Memory extends XMLDiff\Base ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [3] {
        Method [ <internal:xmldiff, overwrites XMLDiff\Base, prototype XMLDiff\Base> public method diff ] {

          - Parameters [2] {
            Parameter #0 [ <required> $from ]
            Parameter #1 [ <required> $to ]
          }
        }

        Method [ <internal:xmldiff, overwrites XMLDiff\Base, prototype XMLDiff\Base> public method merge ] {

          - Parameters [2] {
            Parameter #0 [ <required> $src ]
            Parameter #1 [ <required> $diff ]
          }
        }

        Method [ <internal:xmldiff, inherits XMLDiff\Base, ctor> public method __construct ] {
        }
      }
    }

    Class [ <internal:xmldiff> class XMLDiff\Exception extends Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }
  }
}

