Extension [ <persistent> extension #88 haru version 1.0.4 ] {

  - Classes [9] {
    Class [ <internal:haru> class HaruException extends Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:haru> class HaruDoc ] {

      - Constants [38] {
        Constant [ integer CS_DEVICE_GRAY ] { 0 }
        Constant [ integer CS_DEVICE_RGB ] { 1 }
        Constant [ integer CS_DEVICE_CMYK ] { 2 }
        Constant [ integer CS_CAL_GRAY ] { 3 }
        Constant [ integer CS_CAL_RGB ] { 4 }
        Constant [ integer CS_LAB ] { 5 }
        Constant [ integer CS_ICC_BASED ] { 6 }
        Constant [ integer CS_SEPARATION ] { 7 }
        Constant [ integer CS_DEVICE_N ] { 8 }
        Constant [ integer CS_INDEXED ] { 9 }
        Constant [ integer CS_PATTERN ] { 10 }
        Constant [ integer ENABLE_READ ] { 0 }
        Constant [ integer ENABLE_PRINT ] { 4 }
        Constant [ integer ENABLE_EDIT_ALL ] { 8 }
        Constant [ integer ENABLE_COPY ] { 16 }
        Constant [ integer ENABLE_EDIT ] { 32 }
        Constant [ integer ENCRYPT_R2 ] { 2 }
        Constant [ integer ENCRYPT_R3 ] { 3 }
        Constant [ integer INFO_AUTHOR ] { 2 }
        Constant [ integer INFO_CREATOR ] { 3 }
        Constant [ integer INFO_TITLE ] { 5 }
        Constant [ integer INFO_SUBJECT ] { 6 }
        Constant [ integer INFO_KEYWORDS ] { 7 }
        Constant [ integer INFO_CREATION_DATE ] { 0 }
        Constant [ integer INFO_MOD_DATE ] { 1 }
        Constant [ integer COMP_NONE ] { 0 }
        Constant [ integer COMP_TEXT ] { 1 }
        Constant [ integer COMP_IMAGE ] { 2 }
        Constant [ integer COMP_METADATA ] { 4 }
        Constant [ integer COMP_ALL ] { 15 }
        Constant [ integer PAGE_LAYOUT_SINGLE ] { 0 }
        Constant [ integer PAGE_LAYOUT_ONE_COLUMN ] { 1 }
        Constant [ integer PAGE_LAYOUT_TWO_COLUMN_LEFT ] { 2 }
        Constant [ integer PAGE_LAYOUT_TWO_COLUMN_RIGHT ] { 3 }
        Constant [ integer PAGE_MODE_USE_NONE ] { 0 }
        Constant [ integer PAGE_MODE_USE_OUTLINE ] { 1 }
        Constant [ integer PAGE_MODE_USE_THUMBS ] { 2 }
        Constant [ integer PAGE_MODE_FULL_SCREEN ] { 3 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [44] {
        Method [ <internal:haru, ctor> public method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method resetError ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method save ] {

          - Parameters [1] {
            Parameter #0 [ <required> $file ]
          }
        }

        Method [ <internal:haru> public method output ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method saveToStream ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method resetStream ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getStreamSize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method readFromStream ] {

          - Parameters [1] {
            Parameter #0 [ <required> $bytes ]
          }
        }

        Method [ <internal:haru> public method addPage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method insertPage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $page ]
          }
        }

        Method [ <internal:haru> public method getCurrentPage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getEncoder ] {

          - Parameters [1] {
            Parameter #0 [ <required> $encoding ]
          }
        }

        Method [ <internal:haru> public method getCurrentEncoder ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method setCurrentEncoder ] {

          - Parameters [1] {
            Parameter #0 [ <required> $encoding ]
          }
        }

        Method [ <internal:haru> public method setPageLayout ] {

          - Parameters [1] {
            Parameter #0 [ <required> $layout ]
          }
        }

        Method [ <internal:haru> public method getPageLayout ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method setPageMode ] {

          - Parameters [1] {
            Parameter #0 [ <required> $mode ]
          }
        }

        Method [ <internal:haru> public method getPageMode ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method setInfoAttr ] {

          - Parameters [2] {
            Parameter #0 [ <required> $type ]
            Parameter #1 [ <required> $info ]
          }
        }

        Method [ <internal:haru> public method setInfoDateAttr ] {

          - Parameters [10] {
            Parameter #0 [ <required> $type ]
            Parameter #1 [ <required> $year ]
            Parameter #2 [ <required> $month ]
            Parameter #3 [ <required> $day ]
            Parameter #4 [ <required> $hour ]
            Parameter #5 [ <required> $min ]
            Parameter #6 [ <required> $sec ]
            Parameter #7 [ <required> $ind ]
            Parameter #8 [ <required> $off_hour ]
            Parameter #9 [ <required> $off_min ]
          }
        }

        Method [ <internal:haru> public method getInfoAttr ] {

          - Parameters [1] {
            Parameter #0 [ <required> $type ]
          }
        }

        Method [ <internal:haru> public method getFont ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fontname ]
            Parameter #1 [ <optional> $encoding ]
          }
        }

        Method [ <internal:haru> public method loadTTF ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fontfile ]
            Parameter #1 [ <optional> $embed ]
          }
        }

        Method [ <internal:haru> public method loadTTC ] {

          - Parameters [3] {
            Parameter #0 [ <required> $fontfile ]
            Parameter #1 [ <required> $index ]
            Parameter #2 [ <optional> $embed ]
          }
        }

        Method [ <internal:haru> public method loadType1 ] {

          - Parameters [2] {
            Parameter #0 [ <required> $afmfile ]
            Parameter #1 [ <optional> $pfmfile ]
          }
        }

        Method [ <internal:haru> public method loadPNG ] {

          - Parameters [2] {
            Parameter #0 [ <required> $filename ]
            Parameter #1 [ <optional> $deferred ]
          }
        }

        Method [ <internal:haru> public method loadJPEG ] {

          - Parameters [1] {
            Parameter #0 [ <required> $filename ]
          }
        }

        Method [ <internal:haru> public method loadRaw ] {

          - Parameters [4] {
            Parameter #0 [ <required> $filename ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <required> $height ]
            Parameter #3 [ <required> $color_space ]
          }
        }

        Method [ <internal:haru> public method setPassword ] {

          - Parameters [2] {
            Parameter #0 [ <required> $owner_password ]
            Parameter #1 [ <required> $user_password ]
          }
        }

        Method [ <internal:haru> public method setPermission ] {

          - Parameters [1] {
            Parameter #0 [ <required> $permission ]
          }
        }

        Method [ <internal:haru> public method setEncryptionMode ] {

          - Parameters [2] {
            Parameter #0 [ <required> $mode ]
            Parameter #1 [ <optional> $key_len ]
          }
        }

        Method [ <internal:haru> public method setCompressionMode ] {

          - Parameters [1] {
            Parameter #0 [ <required> $mode ]
          }
        }

        Method [ <internal:haru> public method setPagesConfiguration ] {

          - Parameters [1] {
            Parameter #0 [ <required> $page_per_pages ]
          }
        }

        Method [ <internal:haru> public method setOpenAction ] {

          - Parameters [1] {
            Parameter #0 [ <required> $destination ]
          }
        }

        Method [ <internal:haru> public method createOutline ] {

          - Parameters [3] {
            Parameter #0 [ <required> $title ]
            Parameter #1 [ <optional> $parent_outline ]
            Parameter #2 [ <optional> $encoder ]
          }
        }

        Method [ <internal:haru> public method addPageLabel ] {

          - Parameters [4] {
            Parameter #0 [ <required> $first_page ]
            Parameter #1 [ <required> $style ]
            Parameter #2 [ <required> $first_num ]
            Parameter #3 [ <optional> $prefix ]
          }
        }

        Method [ <internal:haru> public method useJPFonts ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method useJPEncodings ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method useKRFonts ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method useKREncodings ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method useCNSFonts ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method useCNSEncodings ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method useCNTFonts ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method useCNTEncodings ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:haru> class HaruPage ] {

      - Constants [61] {
        Constant [ integer GMODE_PAGE_DESCRIPTION ] { 1 }
        Constant [ integer GMODE_TEXT_OBJECT ] { 4 }
        Constant [ integer GMODE_PATH_OBJECT ] { 2 }
        Constant [ integer GMODE_CLIPPING_PATH ] { 8 }
        Constant [ integer GMODE_SHADING ] { 16 }
        Constant [ integer GMODE_INLINE_IMAGE ] { 32 }
        Constant [ integer GMODE_EXTERNAL_OBJECT ] { 64 }
        Constant [ integer BUTT_END ] { 0 }
        Constant [ integer ROUND_END ] { 1 }
        Constant [ integer PROJECTING_SCUARE_END ] { 2 }
        Constant [ integer MITER_JOIN ] { 0 }
        Constant [ integer ROUND_JOIN ] { 1 }
        Constant [ integer BEVEL_JOIN ] { 2 }
        Constant [ integer FILL ] { 0 }
        Constant [ integer STROKE ] { 1 }
        Constant [ integer FILL_THEN_STROKE ] { 2 }
        Constant [ integer INVISIBLE ] { 3 }
        Constant [ integer FILL_CLIPPING ] { 4 }
        Constant [ integer STROKE_CLIPPING ] { 5 }
        Constant [ integer FILL_STROKE_CLIPPING ] { 6 }
        Constant [ integer CLIPPING ] { 7 }
        Constant [ integer TALIGN_LEFT ] { 0 }
        Constant [ integer TALIGN_RIGHT ] { 1 }
        Constant [ integer TALIGN_CENTER ] { 2 }
        Constant [ integer TALIGN_JUSTIFY ] { 3 }
        Constant [ integer SIZE_LETTER ] { 0 }
        Constant [ integer SIZE_LEGAL ] { 1 }
        Constant [ integer SIZE_A3 ] { 2 }
        Constant [ integer SIZE_A4 ] { 3 }
        Constant [ integer SIZE_A5 ] { 4 }
        Constant [ integer SIZE_B4 ] { 5 }
        Constant [ integer SIZE_B5 ] { 6 }
        Constant [ integer SIZE_EXECUTIVE ] { 7 }
        Constant [ integer SIZE_US4x6 ] { 8 }
        Constant [ integer SIZE_US4x8 ] { 9 }
        Constant [ integer SIZE_US5x7 ] { 10 }
        Constant [ integer SIZE_COMM10 ] { 11 }
        Constant [ integer PORTRAIT ] { 0 }
        Constant [ integer LANDSCAPE ] { 1 }
        Constant [ integer TS_WIPE_LIGHT ] { 0 }
        Constant [ integer TS_WIPE_UP ] { 1 }
        Constant [ integer TS_WIPE_LEFT ] { 2 }
        Constant [ integer TS_WIPE_DOWN ] { 3 }
        Constant [ integer TS_BARN_DOORS_HORIZONTAL_OUT ] { 4 }
        Constant [ integer TS_BARN_DOORS_HORIZONTAL_IN ] { 5 }
        Constant [ integer TS_BARN_DOORS_VERTICAL_OUT ] { 6 }
        Constant [ integer TS_BARN_DOORS_VERTICAL_IN ] { 7 }
        Constant [ integer TS_BOX_OUT ] { 8 }
        Constant [ integer TS_BOX_IN ] { 9 }
        Constant [ integer TS_BLINDS_HORIZONTAL ] { 10 }
        Constant [ integer TS_BLINDS_VERTICAL ] { 11 }
        Constant [ integer TS_DISSOLVE ] { 12 }
        Constant [ integer TS_GLITTER_RIGHT ] { 13 }
        Constant [ integer TS_GLITTER_DOWN ] { 14 }
        Constant [ integer TS_GLITTER_TOP_LEFT_TO_BOTTOM_RIGHT ] { 15 }
        Constant [ integer TS_REPLACE ] { 16 }
        Constant [ integer NUM_STYLE_DECIMAL ] { 0 }
        Constant [ integer NUM_STYLE_UPPER_ROMAN ] { 1 }
        Constant [ integer NUM_STYLE_LOWER_ROMAN ] { 2 }
        Constant [ integer NUM_STYLE_UPPER_LETTERS ] { 3 }
        Constant [ integer NUM_STYLE_LOWER_LETTERS ] { 4 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [88] {
        Method [ <internal:haru, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method drawImage ] {

          - Parameters [5] {
            Parameter #0 [ <required> $image ]
            Parameter #1 [ <required> $x ]
            Parameter #2 [ <required> $y ]
            Parameter #3 [ <required> $width ]
            Parameter #4 [ <required> $height ]
          }
        }

        Method [ <internal:haru> public method setLineWidth ] {

          - Parameters [1] {
            Parameter #0 [ <required> $width ]
          }
        }

        Method [ <internal:haru> public method setLineCap ] {

          - Parameters [1] {
            Parameter #0 [ <required> $cap ]
          }
        }

        Method [ <internal:haru> public method setLineJoin ] {

          - Parameters [1] {
            Parameter #0 [ <required> $join ]
          }
        }

        Method [ <internal:haru> public method setMiterLimit ] {

          - Parameters [1] {
            Parameter #0 [ <required> $limit ]
          }
        }

        Method [ <internal:haru> public method setFlatness ] {

          - Parameters [1] {
            Parameter #0 [ <required> $flatness ]
          }
        }

        Method [ <internal:haru> public method setDash ] {

          - Parameters [2] {
            Parameter #0 [ <required> $pattern ]
            Parameter #1 [ <required> $phase ]
          }
        }

        Method [ <internal:haru> public method Concat ] {

          - Parameters [6] {
            Parameter #0 [ <required> $a ]
            Parameter #1 [ <required> $b ]
            Parameter #2 [ <required> $c ]
            Parameter #3 [ <required> $d ]
            Parameter #4 [ <required> $x ]
            Parameter #5 [ <required> $y ]
          }
        }

        Method [ <internal:haru> public method getTransMatrix ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method setTextMatrix ] {

          - Parameters [6] {
            Parameter #0 [ <required> $a ]
            Parameter #1 [ <required> $b ]
            Parameter #2 [ <required> $c ]
            Parameter #3 [ <required> $d ]
            Parameter #4 [ <required> $x ]
            Parameter #5 [ <required> $y ]
          }
        }

        Method [ <internal:haru> public method getTextMatrix ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method moveTo ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:haru> public method stroke ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $close_path ]
          }
        }

        Method [ <internal:haru> public method fill ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method eofill ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method lineTo ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:haru> public method curveTo ] {

          - Parameters [6] {
            Parameter #0 [ <required> $x1 ]
            Parameter #1 [ <required> $y1 ]
            Parameter #2 [ <required> $x2 ]
            Parameter #3 [ <required> $y2 ]
            Parameter #4 [ <required> $x3 ]
            Parameter #5 [ <required> $y3 ]
          }
        }

        Method [ <internal:haru> public method curveTo2 ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x2 ]
            Parameter #1 [ <required> $y2 ]
            Parameter #2 [ <required> $x3 ]
            Parameter #3 [ <required> $y3 ]
          }
        }

        Method [ <internal:haru> public method curveTo3 ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x1 ]
            Parameter #1 [ <required> $y1 ]
            Parameter #2 [ <required> $x3 ]
            Parameter #3 [ <required> $y3 ]
          }
        }

        Method [ <internal:haru> public method rectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:haru> public method arc ] {

          - Parameters [5] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $ray ]
            Parameter #3 [ <required> $ang1 ]
            Parameter #4 [ <required> $ang2 ]
          }
        }

        Method [ <internal:haru> public method circle ] {

          - Parameters [3] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $ray ]
          }
        }

        Method [ <internal:haru> public method showText ] {

          - Parameters [1] {
            Parameter #0 [ <required> $text ]
          }
        }

        Method [ <internal:haru> public method showTextNextLine ] {

          - Parameters [1] {
            Parameter #0 [ <required> $text ]
          }
        }

        Method [ <internal:haru> public method textOut ] {

          - Parameters [3] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $text ]
          }
        }

        Method [ <internal:haru> public method beginText ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method endText ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method setFontAndSize ] {

          - Parameters [2] {
            Parameter #0 [ <required> $font ]
            Parameter #1 [ <required> $size ]
          }
        }

        Method [ <internal:haru> public method setCharSpace ] {

          - Parameters [1] {
            Parameter #0 [ <required> $char_space ]
          }
        }

        Method [ <internal:haru> public method setWordSpace ] {

          - Parameters [1] {
            Parameter #0 [ <required> $word_space ]
          }
        }

        Method [ <internal:haru> public method setHorizontalScaling ] {

          - Parameters [1] {
            Parameter #0 [ <required> $scaling ]
          }
        }

        Method [ <internal:haru> public method setTextLeading ] {

          - Parameters [1] {
            Parameter #0 [ <required> $text_leading ]
          }
        }

        Method [ <internal:haru> public method setTextRenderingMode ] {

          - Parameters [1] {
            Parameter #0 [ <required> $mode ]
          }
        }

        Method [ <internal:haru> public method setTextRise ] {

          - Parameters [1] {
            Parameter #0 [ <required> $rise ]
          }
        }

        Method [ <internal:haru> public method moveTextPos ] {

          - Parameters [3] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <optional> $set_leading ]
          }
        }

        Method [ <internal:haru> public method fillStroke ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $close_path ]
          }
        }

        Method [ <internal:haru> public method eoFillStroke ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $close_path ]
          }
        }

        Method [ <internal:haru> public method closePath ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method endPath ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method ellipse ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $xray ]
            Parameter #3 [ <required> $yray ]
          }
        }

        Method [ <internal:haru> public method textRect ] {

          - Parameters [6] {
            Parameter #0 [ <required> $left ]
            Parameter #1 [ <required> $top ]
            Parameter #2 [ <required> $right ]
            Parameter #3 [ <required> $bottom ]
            Parameter #4 [ <required> $text ]
            Parameter #5 [ <optional> $align ]
          }
        }

        Method [ <internal:haru> public method moveToNextLine ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method setGrayFill ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:haru> public method setGrayStroke ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:haru> public method setRGBFill ] {

          - Parameters [3] {
            Parameter #0 [ <required> $r ]
            Parameter #1 [ <required> $g ]
            Parameter #2 [ <required> $b ]
          }
        }

        Method [ <internal:haru> public method setRGBStroke ] {

          - Parameters [3] {
            Parameter #0 [ <required> $r ]
            Parameter #1 [ <required> $g ]
            Parameter #2 [ <required> $b ]
          }
        }

        Method [ <internal:haru> public method setCMYKFill ] {

          - Parameters [4] {
            Parameter #0 [ <required> $c ]
            Parameter #1 [ <required> $m ]
            Parameter #2 [ <required> $y ]
            Parameter #3 [ <required> $k ]
          }
        }

        Method [ <internal:haru> public method setCMYKStroke ] {

          - Parameters [4] {
            Parameter #0 [ <required> $c ]
            Parameter #1 [ <required> $m ]
            Parameter #2 [ <required> $y ]
            Parameter #3 [ <required> $k ]
          }
        }

        Method [ <internal:haru> public method setWidth ] {

          - Parameters [1] {
            Parameter #0 [ <required> $width ]
          }
        }

        Method [ <internal:haru> public method setHeight ] {

          - Parameters [1] {
            Parameter #0 [ <required> $height ]
          }
        }

        Method [ <internal:haru> public method setSize ] {

          - Parameters [2] {
            Parameter #0 [ <required> $size ]
            Parameter #1 [ <required> $direction ]
          }
        }

        Method [ <internal:haru> public method setRotate ] {

          - Parameters [1] {
            Parameter #0 [ <required> $angle ]
          }
        }

        Method [ <internal:haru> public method getWidth ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getHeight ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method createDestination ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method createTextAnnotation ] {

          - Parameters [3] {
            Parameter #0 [ <required> $rectangle ]
            Parameter #1 [ <required> $text ]
            Parameter #2 [ <optional> $encoder ]
          }
        }

        Method [ <internal:haru> public method createLinkAnnotation ] {

          - Parameters [2] {
            Parameter #0 [ <required> $rectangle ]
            Parameter #1 [ <required> $destination ]
          }
        }

        Method [ <internal:haru> public method createURLAnnotation ] {

          - Parameters [2] {
            Parameter #0 [ <required> $rectangle ]
            Parameter #1 [ <required> $url ]
          }
        }

        Method [ <internal:haru> public method getTextWidth ] {

          - Parameters [1] {
            Parameter #0 [ <required> $text ]
          }
        }

        Method [ <internal:haru> public method MeasureText ] {

          - Parameters [3] {
            Parameter #0 [ <required> $text ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <optional> $wordwrap ]
          }
        }

        Method [ <internal:haru> public method getGMode ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getCurrentPos ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getCurrentTextPos ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getCurrentFont ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getCurrentFontSize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getLineWidth ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getLineCap ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getLineJoin ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getMiterLimit ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getDash ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getFlatness ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getCharSpace ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getWordSpace ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getHorizontalScaling ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getTextLeading ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getTextRenderingMode ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getTextRise ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getRGBFill ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getRGBStroke ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getCMYKFill ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getCMYKStroke ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getGrayFill ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getGrayStroke ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getFillingColorSpace ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getStrokingColorSpace ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method setSlideShow ] {

          - Parameters [3] {
            Parameter #0 [ <required> $type ]
            Parameter #1 [ <required> $disp_time ]
            Parameter #2 [ <required> $trans_time ]
          }
        }

        Method [ <internal:haru> public method setZoom ] {

          - Parameters [1] {
            Parameter #0 [ <required> $zoom ]
          }
        }
      }
    }

    Class [ <internal:haru> class HaruFont ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [10] {
        Method [ <internal:haru, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getFontName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getEncodingName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getUnicodeWidth ] {

          - Parameters [1] {
            Parameter #0 [ <required> $character ]
          }
        }

        Method [ <internal:haru> public method getAscent ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getDescent ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getXHeight ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getCapHeight ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getTextWidth ] {

          - Parameters [1] {
            Parameter #0 [ <required> $text ]
          }
        }

        Method [ <internal:haru> public method MeasureText ] {

          - Parameters [6] {
            Parameter #0 [ <required> $text ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <required> $font_size ]
            Parameter #3 [ <required> $char_space ]
            Parameter #4 [ <required> $word_space ]
            Parameter #5 [ <optional> $word_wrap ]
          }
        }
      }
    }

    Class [ <internal:haru> class HaruImage ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [9] {
        Method [ <internal:haru, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getSize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getWidth ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getHeight ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getBitsPerComponent ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getColorSpace ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method setColorMask ] {

          - Parameters [6] {
            Parameter #0 [ <required> $rmin ]
            Parameter #1 [ <required> $rmax ]
            Parameter #2 [ <required> $gmin ]
            Parameter #3 [ <required> $gmax ]
            Parameter #4 [ <required> $bmin ]
            Parameter #5 [ <required> $bmax ]
          }
        }

        Method [ <internal:haru> public method setMaskImage ] {

          - Parameters [1] {
            Parameter #0 [ <required> $mask_image ]
          }
        }

        Method [ <internal:haru> public method addSMask ] {

          - Parameters [1] {
            Parameter #0 [ <required> $smask_image ]
          }
        }
      }
    }

    Class [ <internal:haru> class HaruDestination ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [9] {
        Method [ <internal:haru, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method setXYZ ] {

          - Parameters [3] {
            Parameter #0 [ <required> $left ]
            Parameter #1 [ <required> $top ]
            Parameter #2 [ <required> $zoom ]
          }
        }

        Method [ <internal:haru> public method setFit ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method setFitH ] {

          - Parameters [1] {
            Parameter #0 [ <required> $top ]
          }
        }

        Method [ <internal:haru> public method setFitV ] {

          - Parameters [1] {
            Parameter #0 [ <required> $left ]
          }
        }

        Method [ <internal:haru> public method setFitR ] {

          - Parameters [4] {
            Parameter #0 [ <required> $left ]
            Parameter #1 [ <required> $bottom ]
            Parameter #2 [ <required> $right ]
            Parameter #3 [ <required> $top ]
          }
        }

        Method [ <internal:haru> public method setFitB ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method setFitBH ] {

          - Parameters [1] {
            Parameter #0 [ <required> $top ]
          }
        }

        Method [ <internal:haru> public method setFitBV ] {

          - Parameters [1] {
            Parameter #0 [ <required> $left ]
          }
        }
      }
    }

    Class [ <internal:haru> class HaruAnnotation ] {

      - Constants [11] {
        Constant [ integer NO_HIGHLIGHT ] { 0 }
        Constant [ integer INVERT_BOX ] { 1 }
        Constant [ integer INVERT_BORDER ] { 2 }
        Constant [ integer DOWN_APPEARANCE ] { 3 }
        Constant [ integer ICON_COMMENT ] { 0 }
        Constant [ integer ICON_KEY ] { 1 }
        Constant [ integer ICON_NOTE ] { 2 }
        Constant [ integer ICON_HELP ] { 3 }
        Constant [ integer ICON_NEW_PARAGRAPH ] { 4 }
        Constant [ integer ICON_PARAGRAPH ] { 5 }
        Constant [ integer ICON_INSERT ] { 6 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:haru, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method setHighlightMode ] {

          - Parameters [1] {
            Parameter #0 [ <required> $mode ]
          }
        }

        Method [ <internal:haru> public method setBorderStyle ] {

          - Parameters [3] {
            Parameter #0 [ <required> $width ]
            Parameter #1 [ <required> $dash_on ]
            Parameter #2 [ <required> $dash_off ]
          }
        }

        Method [ <internal:haru> public method setIcon ] {

          - Parameters [1] {
            Parameter #0 [ <required> $icon ]
          }
        }

        Method [ <internal:haru> public method setOpened ] {

          - Parameters [1] {
            Parameter #0 [ <required> $opened ]
          }
        }
      }
    }

    Class [ <internal:haru> class HaruEncoder ] {

      - Constants [10] {
        Constant [ integer TYPE_SINGLE_BYTE ] { 0 }
        Constant [ integer TYPE_DOUBLE_BYTE ] { 1 }
        Constant [ integer TYPE_UNINITIALIZED ] { 2 }
        Constant [ integer UNKNOWN ] { 3 }
        Constant [ integer BYTE_TYPE_SINGLE ] { 0 }
        Constant [ integer BYTE_TYPE_LEAD ] { 1 }
        Constant [ integer BYTE_TYPE_TRAIL ] { 2 }
        Constant [ integer BYTE_TYPE_UNKNOWN ] { 3 }
        Constant [ integer WMODE_HORIZONTAL ] { 0 }
        Constant [ integer WMODE_VERTICAL ] { 1 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:haru, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getType ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method getByteType ] {

          - Parameters [2] {
            Parameter #0 [ <required> $text ]
            Parameter #1 [ <required> $index ]
          }
        }

        Method [ <internal:haru> public method getUnicode ] {

          - Parameters [1] {
            Parameter #0 [ <required> $character ]
          }
        }

        Method [ <internal:haru> public method getWritingMode ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:haru> class HaruOutline ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [3] {
        Method [ <internal:haru, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:haru> public method setOpened ] {

          - Parameters [1] {
            Parameter #0 [ <required> $opened ]
          }
        }

        Method [ <internal:haru> public method setDestination ] {

          - Parameters [1] {
            Parameter #0 [ <required> $destination ]
          }
        }
      }
    }
  }
}

