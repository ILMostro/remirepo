Extension [ <persistent> extension #121 rar version 3.0.2 ] {

  - Constants [6] {
    Constant [ integer RAR_HOST_MSDOS ] { 0 }
    Constant [ integer RAR_HOST_OS2 ] { 1 }
    Constant [ integer RAR_HOST_WIN32 ] { 2 }
    Constant [ integer RAR_HOST_UNIX ] { 3 }
    Constant [ integer RAR_HOST_MACOS ] { 4 }
    Constant [ integer RAR_HOST_BEOS ] { 5 }
  }

  - Functions {
    Function [ <internal:rar> function rar_open ] {

      - Parameters [3] {
        Parameter #0 [ <required> $filename ]
        Parameter #1 [ <optional> $password ]
        Parameter #2 [ <optional> $volume_callback ]
      }
    }
    Function [ <internal:rar> function rar_list ] {

      - Parameters [1] {
        Parameter #0 [ <required> $rarfile ]
      }
    }
    Function [ <internal:rar> function rar_entry_get ] {

      - Parameters [2] {
        Parameter #0 [ <required> $rarfile ]
        Parameter #1 [ <required> $filename ]
      }
    }
    Function [ <internal:rar> function rar_solid_is ] {

      - Parameters [1] {
        Parameter #0 [ <required> $rarfile ]
      }
    }
    Function [ <internal:rar> function rar_comment_get ] {

      - Parameters [1] {
        Parameter #0 [ <required> $rarfile ]
      }
    }
    Function [ <internal:rar> function rar_broken_is ] {

      - Parameters [1] {
        Parameter #0 [ <required> $rarfile ]
      }
    }
    Function [ <internal:rar> function rar_allow_broken_set ] {

      - Parameters [2] {
        Parameter #0 [ <required> $rarfile ]
        Parameter #1 [ <required> $allow_broken ]
      }
    }
    Function [ <internal:rar> function rar_close ] {

      - Parameters [1] {
        Parameter #0 [ <required> $rarfile ]
      }
    }
    Function [ <internal:rar> function rar_wrapper_cache_stats ] {

      - Parameters [0] {
      }
    }
  }

  - Classes [3] {
    Class [ <internal:rar> <iterateable> final class RarArchive implements Traversable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:rar> static public method open ] {

          - Parameters [3] {
            Parameter #0 [ <required> $filename ]
            Parameter #1 [ <optional> $password ]
            Parameter #2 [ <optional> $volume_callback ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [9] {
        Method [ <internal:rar> public method getEntries ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method getEntry ] {

          - Parameters [1] {
            Parameter #0 [ <required> $filename ]
          }
        }

        Method [ <internal:rar> public method isSolid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method getComment ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method isBroken ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method setAllowBroken ] {

          - Parameters [1] {
            Parameter #0 [ <required> $allow_broken ]
          }
        }

        Method [ <internal:rar> public method close ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:rar> final class RarEntry ] {

      - Constants [41] {
        Constant [ integer HOST_MSDOS ] { 0 }
        Constant [ integer HOST_OS2 ] { 1 }
        Constant [ integer HOST_WIN32 ] { 2 }
        Constant [ integer HOST_UNIX ] { 3 }
        Constant [ integer HOST_MACOS ] { 4 }
        Constant [ integer HOST_BEOS ] { 5 }
        Constant [ integer ATTRIBUTE_WIN_READONLY ] { 1 }
        Constant [ integer ATTRIBUTE_WIN_HIDDEN ] { 2 }
        Constant [ integer ATTRIBUTE_WIN_SYSTEM ] { 4 }
        Constant [ integer ATTRIBUTE_WIN_DIRECTORY ] { 16 }
        Constant [ integer ATTRIBUTE_WIN_ARCHIVE ] { 32 }
        Constant [ integer ATTRIBUTE_WIN_DEVICE ] { 64 }
        Constant [ integer ATTRIBUTE_WIN_NORMAL ] { 128 }
        Constant [ integer ATTRIBUTE_WIN_TEMPORARY ] { 256 }
        Constant [ integer ATTRIBUTE_WIN_SPARSE_FILE ] { 512 }
        Constant [ integer ATTRIBUTE_WIN_REPARSE_POINT ] { 1024 }
        Constant [ integer ATTRIBUTE_WIN_COMPRESSED ] { 2048 }
        Constant [ integer ATTRIBUTE_WIN_OFFLINE ] { 4096 }
        Constant [ integer ATTRIBUTE_WIN_NOT_CONTENT_INDEXED ] { 8192 }
        Constant [ integer ATTRIBUTE_WIN_ENCRYPTED ] { 16384 }
        Constant [ integer ATTRIBUTE_WIN_VIRTUAL ] { 65536 }
        Constant [ integer ATTRIBUTE_UNIX_WORLD_EXECUTE ] { 1 }
        Constant [ integer ATTRIBUTE_UNIX_WORLD_WRITE ] { 2 }
        Constant [ integer ATTRIBUTE_UNIX_WORLD_READ ] { 4 }
        Constant [ integer ATTRIBUTE_UNIX_GROUP_EXECUTE ] { 8 }
        Constant [ integer ATTRIBUTE_UNIX_GROUP_WRITE ] { 16 }
        Constant [ integer ATTRIBUTE_UNIX_GROUP_READ ] { 32 }
        Constant [ integer ATTRIBUTE_UNIX_OWNER_EXECUTE ] { 64 }
        Constant [ integer ATTRIBUTE_UNIX_OWNER_WRITE ] { 128 }
        Constant [ integer ATTRIBUTE_UNIX_OWNER_READ ] { 256 }
        Constant [ integer ATTRIBUTE_UNIX_STICKY ] { 512 }
        Constant [ integer ATTRIBUTE_UNIX_SETGID ] { 1024 }
        Constant [ integer ATTRIBUTE_UNIX_SETUID ] { 2048 }
        Constant [ integer ATTRIBUTE_UNIX_FINAL_QUARTET ] { 61440 }
        Constant [ integer ATTRIBUTE_UNIX_FIFO ] { 4096 }
        Constant [ integer ATTRIBUTE_UNIX_CHAR_DEV ] { 8192 }
        Constant [ integer ATTRIBUTE_UNIX_DIRECTORY ] { 16384 }
        Constant [ integer ATTRIBUTE_UNIX_BLOCK_DEV ] { 24576 }
        Constant [ integer ATTRIBUTE_UNIX_REGULAR_FILE ] { 32768 }
        Constant [ integer ATTRIBUTE_UNIX_SYM_LINK ] { 40960 }
        Constant [ integer ATTRIBUTE_UNIX_SOCKET ] { 49152 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [12] {
        Property [ <default> private $rarfile ]
        Property [ <default> private $position ]
        Property [ <default> private $name ]
        Property [ <default> private $unpacked_size ]
        Property [ <default> private $packed_size ]
        Property [ <default> private $host_os ]
        Property [ <default> private $file_time ]
        Property [ <default> private $crc ]
        Property [ <default> private $attr ]
        Property [ <default> private $version ]
        Property [ <default> private $method ]
        Property [ <default> private $flags ]
      }

      - Methods [16] {
        Method [ <internal:rar> public method extract ] {

          - Parameters [4] {
            Parameter #0 [ <required> $path ]
            Parameter #1 [ <optional> $filename ]
            Parameter #2 [ <optional> $password ]
            Parameter #3 [ <optional> $extended_data ]
          }
        }

        Method [ <internal:rar> public method getPosition ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method getName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method getUnpackedSize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method getPackedSize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method getHostOs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method getFileTime ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method getCrc ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method getAttr ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method getVersion ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method getMethod ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method getStream ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $password ]
          }
        }

        Method [ <internal:rar> public method isDirectory ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method isEncrypted ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:rar, ctor> private method __construct ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:rar> class RarException extends Exception ] {

      - Constants [0] {
      }

      - Static properties [1] {
        Property [ private static $usingExceptions ]
      }

      - Static methods [2] {
        Method [ <internal:rar> static public method setUsingExceptions ] {

          - Parameters [1] {
            Parameter #0 [ <required> $using_exceptions ]
          }
        }

        Method [ <internal:rar> static public method isUsingExceptions ] {

          - Parameters [0] {
          }
        }
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }
  }
}

