Extension [ <persistent> extension #176 solr version 2.1.0 ] {

  - Dependencies {
    Dependency [ libxml (Required) ]
    Dependency [ json (Required) ]
  }

  - Constants [4] {
    Constant [ integer SOLR_MAJOR_VERSION ] { 2 }
    Constant [ integer SOLR_MINOR_VERSION ] { 1 }
    Constant [ integer SOLR_PATCH_VERSION ] { 0 }
    Constant [ string SOLR_EXTENSION_VERSION ] { 2.1.0 }
  }

  - Functions {
    Function [ <internal:solr> function solr_get_version ] {

      - Parameters [0] {
      }
    }
  }

  - Classes [20] {
    Class [ <internal:solr> final class SolrObject implements ArrayAccess ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:solr, ctor> public method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, prototype ArrayAccess> public method offsetSet ] {

          - Parameters [2] {
            Parameter #0 [ <required> $property_name ]
            Parameter #1 [ <required> $property_value ]
          }
        }

        Method [ <internal:solr, prototype ArrayAccess> public method offsetGet ] {

          - Parameters [1] {
            Parameter #0 [ <required> $property_name ]
          }
        }

        Method [ <internal:solr, prototype ArrayAccess> public method offsetExists ] {

          - Parameters [1] {
            Parameter #0 [ <required> $property_name ]
          }
        }

        Method [ <internal:solr, prototype ArrayAccess> public method offsetUnset ] {

          - Parameters [1] {
            Parameter #0 [ <required> $property_name ]
          }
        }

        Method [ <internal:solr> public method getPropertyNames ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:solr> <iterateable> final class SolrDocument implements ArrayAccess, Iterator, Traversable, Serializable ] {

      - Constants [6] {
        Constant [ integer SORT_DEFAULT ] { 1 }
        Constant [ integer SORT_ASC ] { 1 }
        Constant [ integer SORT_DESC ] { 2 }
        Constant [ integer SORT_FIELD_NAME ] { 1 }
        Constant [ integer SORT_FIELD_VALUE_COUNT ] { 2 }
        Constant [ integer SORT_FIELD_BOOST_VALUE ] { 4 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> private $_hashtable_index ]
      }

      - Methods [30] {
        Method [ <internal:solr, ctor> public method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method __clone ] {
        }

        Method [ <internal:solr> public method __set ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fieldName ]
            Parameter #1 [ <required> $fieldValue ]
          }
        }

        Method [ <internal:solr> public method __get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fieldName ]
          }
        }

        Method [ <internal:solr> public method __isset ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fieldName ]
          }
        }

        Method [ <internal:solr> public method __unset ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fieldName ]
          }
        }

        Method [ <internal:solr, prototype ArrayAccess> public method offsetSet ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fieldName ]
            Parameter #1 [ <required> $fieldValue ]
          }
        }

        Method [ <internal:solr, prototype ArrayAccess> public method offsetGet ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fieldName ]
          }
        }

        Method [ <internal:solr, prototype ArrayAccess> public method offsetExists ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fieldName ]
          }
        }

        Method [ <internal:solr, prototype ArrayAccess> public method offsetUnset ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fieldName ]
          }
        }

        Method [ <internal:solr, prototype Iterator> public method &current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, prototype Serializable> public method serialize ] {
        }

        Method [ <internal:solr, prototype Serializable> public method unserialize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $serialized ]
          }
        }

        Method [ <internal:solr> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method reset ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method addField ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fieldName ]
            Parameter #1 [ <required> $fieldValue ]
          }
        }

        Method [ <internal:solr> public method getFieldNames ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method getFieldCount ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method getField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fieldName ]
          }
        }

        Method [ <internal:solr> public method toArray ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method fieldExists ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fieldName ]
          }
        }

        Method [ <internal:solr> public method deleteField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fieldName ]
          }
        }

        Method [ <internal:solr> public method sort ] {

          - Parameters [2] {
            Parameter #0 [ <required> $sortOrderBy ]
            Parameter #1 [ <optional> $sortDirection ]
          }
        }

        Method [ <internal:solr> public method merge ] {

          - Parameters [2] {
            Parameter #0 [ <required> SolrDocument &$sourceDoc ]
            Parameter #1 [ <optional> $overwrite ]
          }
        }

        Method [ <internal:solr> public method &getInputDocument ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:solr> final class SolrDocumentField ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [3] {
        Property [ <default> public $name ]
        Property [ <default> public $boost ]
        Property [ <default> public $values ]
      }

      - Methods [2] {
        Method [ <internal:solr, ctor> public method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:solr> final class SolrInputDocument ] {

      - Constants [6] {
        Constant [ integer SORT_DEFAULT ] { 1 }
        Constant [ integer SORT_ASC ] { 1 }
        Constant [ integer SORT_DESC ] { 2 }
        Constant [ integer SORT_FIELD_NAME ] { 1 }
        Constant [ integer SORT_FIELD_VALUE_COUNT ] { 2 }
        Constant [ integer SORT_FIELD_BOOST_VALUE ] { 4 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> private $_hashtable_index ]
      }

      - Methods [20] {
        Method [ <internal:solr, ctor> public method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method __clone ] {
        }

        Method [ <internal:solr> public method __sleep ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method __wakeup ] {
        }

        Method [ <internal:solr> public method setBoost ] {

          - Parameters [1] {
            Parameter #0 [ <required> $documentBoostValue ]
          }
        }

        Method [ <internal:solr> public method getBoost ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method clear ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method reset ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method addField ] {

          - Parameters [3] {
            Parameter #0 [ <required> $fieldName ]
            Parameter #1 [ <required> $fieldValue ]
            Parameter #2 [ <optional> $fieldBoostValue ]
          }
        }

        Method [ <internal:solr> public method getFieldBoost ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fieldName ]
          }
        }

        Method [ <internal:solr> public method setFieldBoost ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fieldName ]
            Parameter #1 [ <required> $fieldBoostValue ]
          }
        }

        Method [ <internal:solr> public method getFieldNames ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method getFieldCount ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method getField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fieldName ]
          }
        }

        Method [ <internal:solr> public method toArray ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method fieldExists ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fieldName ]
          }
        }

        Method [ <internal:solr> public method deleteField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fieldName ]
          }
        }

        Method [ <internal:solr> public method sort ] {

          - Parameters [2] {
            Parameter #0 [ <required> $sortOrderBy ]
            Parameter #1 [ <optional> $sortDirection ]
          }
        }

        Method [ <internal:solr> public method merge ] {

          - Parameters [2] {
            Parameter #0 [ <required> SolrInputDocument &$sourceDoc ]
            Parameter #1 [ <optional> $overwrite ]
          }
        }
      }
    }

    Class [ <internal:solr> class SolrClient ] {

      - Constants [12] {
        Constant [ integer SEARCH_SERVLET_TYPE ] { 1 }
        Constant [ integer UPDATE_SERVLET_TYPE ] { 2 }
        Constant [ integer THREADS_SERVLET_TYPE ] { 4 }
        Constant [ integer PING_SERVLET_TYPE ] { 8 }
        Constant [ integer TERMS_SERVLET_TYPE ] { 16 }
        Constant [ integer SYSTEM_SERVLET_TYPE ] { 32 }
        Constant [ string DEFAULT_SEARCH_SERVLET ] { select }
        Constant [ string DEFAULT_UPDATE_SERVLET ] { update }
        Constant [ string DEFAULT_THREADS_SERVLET ] { admin/threads }
        Constant [ string DEFAULT_PING_SERVLET ] { admin/ping }
        Constant [ string DEFAULT_TERMS_SERVLET ] { terms }
        Constant [ string DEFAULT_SYSTEM_SERVLET ] { admin/system }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> private $_hashtable_index ]
      }

      - Methods [23] {
        Method [ <internal:solr, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $clientOptions ]
          }
        }

        Method [ <internal:solr, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method __sleep ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method __wakeup ] {
        }

        Method [ <internal:solr> public method __clone ] {
        }

        Method [ <internal:solr> public method getOptions ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method getDebug ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method setServlet ] {

          - Parameters [2] {
            Parameter #0 [ <required> $type ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method &query ] {

          - Parameters [1] {
            Parameter #0 [ <required> SolrParams &$query ]
          }
        }

        Method [ <internal:solr> public method &addDocument ] {

          - Parameters [3] {
            Parameter #0 [ <required> SolrInputDocument &$doc ]
            Parameter #1 [ <optional> $overwrite ]
            Parameter #2 [ <optional> $commitWithin ]
          }
        }

        Method [ <internal:solr> public method &addDocuments ] {

          - Parameters [3] {
            Parameter #0 [ <required> array &$docs ]
            Parameter #1 [ <optional> $overwrite ]
            Parameter #2 [ <optional> $commitWithin ]
          }
        }

        Method [ <internal:solr> public method &request ] {

          - Parameters [1] {
            Parameter #0 [ <required> $raw_request ]
          }
        }

        Method [ <internal:solr> public method &setResponseWriter ] {

          - Parameters [1] {
            Parameter #0 [ <required> $responseWriter ]
          }
        }

        Method [ <internal:solr> public method &deleteById ] {

          - Parameters [1] {
            Parameter #0 [ <required> $id ]
          }
        }

        Method [ <internal:solr> public method &deleteByIds ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $ids ]
          }
        }

        Method [ <internal:solr> public method &deleteByQuery ] {

          - Parameters [1] {
            Parameter #0 [ <required> $query ]
          }
        }

        Method [ <internal:solr> public method &deleteByQueries ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $queries ]
          }
        }

        Method [ <internal:solr> public method &commit ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $softCommit ]
            Parameter #1 [ <optional> $waitSearcher ]
            Parameter #2 [ <optional> $expungeDeletes ]
          }
        }

        Method [ <internal:solr> public method &optimize ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $maxSegments ]
            Parameter #1 [ <optional> $softCommit ]
            Parameter #2 [ <optional> $waitSearcher ]
          }
        }

        Method [ <internal:solr> public method &rollback ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &ping ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &system ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &threads ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:solr> abstract class SolrParams implements Serializable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> protected $_hashtable_index ]
      }

      - Methods [13] {
        Method [ <internal:solr> public method &setParam ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method &addParam ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method toString ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $url_encode ]
          }
        }

        Method [ <internal:solr> public method getParams ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method getParam ] {

          - Parameters [1] {
            Parameter #0 [ <required> $param_name ]
          }
        }

        Method [ <internal:solr> public method getPreparedParams ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method __clone ] {
        }

        Method [ <internal:solr, prototype Serializable> public method serialize ] {
        }

        Method [ <internal:solr, prototype Serializable> public method unserialize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $serialized ]
          }
        }

        Method [ <internal:solr> public method &add ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method &set ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $param_name ]
          }
        }
      }
    }

    Class [ <internal:solr> class SolrModifiableParams extends SolrParams implements Serializable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> protected $_hashtable_index ]
      }

      - Methods [15] {
        Method [ <internal:solr, ctor> public method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method &setParam ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method &addParam ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method toString ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $url_encode ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method getParams ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method getParam ] {

          - Parameters [1] {
            Parameter #0 [ <required> $param_name ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method getPreparedParams ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method __clone ] {
        }

        Method [ <internal:solr, inherits SolrParams, prototype Serializable> public method serialize ] {
        }

        Method [ <internal:solr, inherits SolrParams, prototype Serializable> public method unserialize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $serialized ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method &add ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method &set ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $param_name ]
          }
        }
      }
    }

    Class [ <internal:solr> class SolrQuery extends SolrModifiableParams implements Serializable ] {

      - Constants [6] {
        Constant [ integer ORDER_ASC ] { 0 }
        Constant [ integer ORDER_DESC ] { 1 }
        Constant [ integer FACET_SORT_INDEX ] { 0 }
        Constant [ integer FACET_SORT_COUNT ] { 1 }
        Constant [ integer TERMS_SORT_INDEX ] { 0 }
        Constant [ integer TERMS_SORT_COUNT ] { 1 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> protected $_hashtable_index ]
      }

      - Methods [167] {
        Method [ <internal:solr, overwrites SolrModifiableParams, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $q ]
          }
        }

        Method [ <internal:solr, overwrites SolrModifiableParams, prototype SolrModifiableParams, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setQuery ] {

          - Parameters [1] {
            Parameter #0 [ <required> $q ]
          }
        }

        Method [ <internal:solr> public method getQuery ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setStart ] {

          - Parameters [1] {
            Parameter #0 [ <required> $start ]
          }
        }

        Method [ <internal:solr> public method getStart ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setRows ] {

          - Parameters [1] {
            Parameter #0 [ <required> $rows ]
          }
        }

        Method [ <internal:solr> public method getRows ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &addField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $field ]
          }
        }

        Method [ <internal:solr> public method &removeField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $field ]
          }
        }

        Method [ <internal:solr> public method getFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &addSortField ] {

          - Parameters [2] {
            Parameter #0 [ <required> $field ]
            Parameter #1 [ <optional> $order ]
          }
        }

        Method [ <internal:solr> public method &removeSortField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $field ]
          }
        }

        Method [ <internal:solr> public method getSortFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &addFilterQuery ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fq ]
          }
        }

        Method [ <internal:solr> public method &removeFilterQuery ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fq ]
          }
        }

        Method [ <internal:solr> public method getFilterQueries ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setShowDebugInfo ] {

          - Parameters [1] {
            Parameter #0 [ <required> $flag ]
          }
        }

        Method [ <internal:solr> public method &setExplainOther ] {

          - Parameters [1] {
            Parameter #0 [ <required> $flag ]
          }
        }

        Method [ <internal:solr> public method &setTimeAllowed ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timeAllowed ]
          }
        }

        Method [ <internal:solr> public method getTimeAllowed ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setOmitHeader ] {

          - Parameters [1] {
            Parameter #0 [ <required> $flag ]
          }
        }

        Method [ <internal:solr> public method &setEchoHandler ] {

          - Parameters [1] {
            Parameter #0 [ <required> $flag ]
          }
        }

        Method [ <internal:solr> public method &setEchoParams ] {

          - Parameters [1] {
            Parameter #0 [ <required> $type ]
          }
        }

        Method [ <internal:solr> public method &setFacet ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getFacet ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &addFacetField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method &removeFacetField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getFacetFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &addFacetQuery ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method &removeFacetQuery ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getFacetQueries ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setFacetPrefix ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getFacetPrefix ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setFacetSort ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getFacetSort ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setFacetLimit ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getFacetLimit ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setFacetOffset ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getFacetOffset ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setFacetMinCount ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getFacetMinCount ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setFacetMissing ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getFacetMissing ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setFacetMethod ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getFacetMethod ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setFacetEnumCacheMinDefaultFrequency ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &addFacetDateField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method &removeFacetDateField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getFacetDateFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setFacetDateStart ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getFacetDateStart ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setFacetDateEnd ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getFacetDateEnd ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setFacetDateGap ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getFacetDateGap ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setFacetDateHardEnd ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getFacetDateHardEnd ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &addFacetDateOther ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &removeFacetDateOther ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getFacetDateOther ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setHighlight ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getHighlight ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &addHighlightField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method &removeHighlightField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getHighlightFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setHighlightSnippets ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getHighlightSnippets ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setHighlightFragsize ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getHighlightFragsize ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setHighlightMergeContiguous ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getHighlightMergeContiguous ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setHighlightRequireFieldMatch ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getHighlightRequireFieldMatch ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setHighlightMaxAnalyzedChars ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getHighlightMaxAnalyzedChars ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setHighlightAlternateField ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getHighlightAlternateField ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setHighlightMaxAlternateFieldLength ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getHighlightMaxAlternateFieldLength ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setHighlightFormatter ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getHighlightFormatter ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setHighlightSimplePre ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getHighlightSimplePre ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setHighlightSimplePost ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getHighlightSimplePost ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setHighlightFragmenter ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method getHighlightFragmenter ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr> public method &setHighlightUsePhraseHighlighter ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getHighlightUsePhraseHighlighter ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setHighlightHighlightMultiTerm ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getHighlightHighlightMultiTerm ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setHighlightRegexSlop ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getHighlightRegexSlop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setHighlightRegexPattern ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getHighlightRegexPattern ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setHighlightRegexMaxAnalyzedChars ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getHighlightRegexMaxAnalyzedChars ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setStats ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getStats ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &addStatsField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method &removeStatsField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getStatsFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &addStatsFacet ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method &removeStatsFacet ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getStatsFacets ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setMlt ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getMlt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setMltCount ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getMltCount ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &addMltField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method &removeMltField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getMltFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &addMltQueryField ] {

          - Parameters [2] {
            Parameter #0 [ <required> $field ]
            Parameter #1 [ <required> $boost ]
          }
        }

        Method [ <internal:solr> public method &removeMltQueryField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getMltQueryFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setMltMinTermFrequency ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getMltMinTermFrequency ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setMltMinDocFrequency ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getMltMinDocFrequency ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setMltMinWordLength ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getMltMinWordLength ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setMltMaxWordLength ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getMltMaxWordLength ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setMltMaxNumTokens ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getMltMaxNumTokens ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setMltMaxNumQueryTerms ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getMltMaxNumQueryTerms ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setMltBoost ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getMltBoost ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setTerms ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getTerms ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setTermsField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getTermsField ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setTermsLowerBound ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getTermsLowerBound ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setTermsUpperBound ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getTermsUpperBound ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setTermsIncludeLowerBound ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getTermsIncludeLowerBound ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setTermsIncludeUpperBound ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getTermsIncludeUpperBound ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setTermsMinCount ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getTermsMinCount ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setTermsMaxCount ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getTermsMaxCount ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setTermsPrefix ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getTermsPrefix ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setTermsLimit ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getTermsLimit ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setTermsReturnRaw ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getTermsReturnRaw ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method &setTermsSort ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method getTermsSort ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method &setParam ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method &addParam ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method toString ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $url_encode ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method getParams ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method getParam ] {

          - Parameters [1] {
            Parameter #0 [ <required> $param_name ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method getPreparedParams ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method __clone ] {
        }

        Method [ <internal:solr, inherits SolrParams, prototype Serializable> public method serialize ] {
        }

        Method [ <internal:solr, inherits SolrParams, prototype Serializable> public method unserialize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $serialized ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method &add ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method &set ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $param_name ]
          }
        }
      }
    }

    Class [ <internal:solr> class SolrDisMaxQuery extends SolrQuery implements Serializable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> protected $_hashtable_index ]
      }

      - Methods [194] {
        Method [ <internal:solr, overwrites SolrQuery, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $q ]
          }
        }

        Method [ <internal:solr> public method setQueryAlt ] {

          - Parameters [1] {
            Parameter #0 [ <required> $q ]
          }
        }

        Method [ <internal:solr> public method addQueryField ] {

          - Parameters [2] {
            Parameter #0 [ <required> $field ]
            Parameter #1 [ <optional> $boost ]
          }
        }

        Method [ <internal:solr> public method removeQueryField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $field ]
          }
        }

        Method [ <internal:solr> public method addPhraseField ] {

          - Parameters [3] {
            Parameter #0 [ <required> $field ]
            Parameter #1 [ <required> $boost ]
            Parameter #2 [ <optional> $slop ]
          }
        }

        Method [ <internal:solr> public method removePhraseField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $field ]
          }
        }

        Method [ <internal:solr> public method setPhraseFields ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fields ]
          }
        }

        Method [ <internal:solr> public method setPhraseSlop ] {

          - Parameters [1] {
            Parameter #0 [ <required> $slop ]
          }
        }

        Method [ <internal:solr> public method setQueryPhraseSlop ] {

          - Parameters [1] {
            Parameter #0 [ <required> $slop ]
          }
        }

        Method [ <internal:solr> public method setBoostQuery ] {

          - Parameters [1] {
            Parameter #0 [ <required> $q ]
          }
        }

        Method [ <internal:solr> public method addBoostQuery ] {

          - Parameters [3] {
            Parameter #0 [ <required> $field ]
            Parameter #1 [ <required> $value ]
            Parameter #2 [ <optional> $boost ]
          }
        }

        Method [ <internal:solr> public method removeBoostQuery ] {

          - Parameters [1] {
            Parameter #0 [ <required> $field ]
          }
        }

        Method [ <internal:solr> public method setBoostFunction ] {

          - Parameters [1] {
            Parameter #0 [ <required> $function ]
          }
        }

        Method [ <internal:solr> public method setMinimumMatch ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr> public method setTieBreaker ] {

          - Parameters [1] {
            Parameter #0 [ <required> $tieBreaker ]
          }
        }

        Method [ <internal:solr> public method useDisMaxQueryParser ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method useEDisMaxQueryParser ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method setBigramPhraseFields ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fields ]
          }
        }

        Method [ <internal:solr> public method addBigramPhraseField ] {

          - Parameters [3] {
            Parameter #0 [ <required> $field ]
            Parameter #1 [ <required> $boost ]
            Parameter #2 [ <optional> $slop ]
          }
        }

        Method [ <internal:solr> public method removeBigramPhraseField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $field ]
          }
        }

        Method [ <internal:solr> public method setBigramPhraseSlop ] {

          - Parameters [1] {
            Parameter #0 [ <required> $slop ]
          }
        }

        Method [ <internal:solr> public method setTrigramPhraseFields ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fields ]
          }
        }

        Method [ <internal:solr> public method addTrigramPhraseField ] {

          - Parameters [3] {
            Parameter #0 [ <required> $field ]
            Parameter #1 [ <required> $boost ]
            Parameter #2 [ <optional> $slop ]
          }
        }

        Method [ <internal:solr> public method removeTrigramPhraseField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $field ]
          }
        }

        Method [ <internal:solr> public method setTrigramPhraseSlop ] {

          - Parameters [1] {
            Parameter #0 [ <required> $slop ]
          }
        }

        Method [ <internal:solr> public method addUserField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $field ]
          }
        }

        Method [ <internal:solr> public method removeUserField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $field ]
          }
        }

        Method [ <internal:solr> public method setUserFields ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fields ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery, prototype SolrModifiableParams, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setQuery ] {

          - Parameters [1] {
            Parameter #0 [ <required> $q ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getQuery ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setStart ] {

          - Parameters [1] {
            Parameter #0 [ <required> $start ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getStart ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setRows ] {

          - Parameters [1] {
            Parameter #0 [ <required> $rows ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getRows ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &addField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $field ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &removeField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $field ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &addSortField ] {

          - Parameters [2] {
            Parameter #0 [ <required> $field ]
            Parameter #1 [ <optional> $order ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &removeSortField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $field ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getSortFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &addFilterQuery ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fq ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &removeFilterQuery ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fq ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFilterQueries ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setShowDebugInfo ] {

          - Parameters [1] {
            Parameter #0 [ <required> $flag ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setExplainOther ] {

          - Parameters [1] {
            Parameter #0 [ <required> $flag ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setTimeAllowed ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timeAllowed ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getTimeAllowed ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setOmitHeader ] {

          - Parameters [1] {
            Parameter #0 [ <required> $flag ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setEchoHandler ] {

          - Parameters [1] {
            Parameter #0 [ <required> $flag ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setEchoParams ] {

          - Parameters [1] {
            Parameter #0 [ <required> $type ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setFacet ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacet ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &addFacetField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &removeFacetField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacetFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &addFacetQuery ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &removeFacetQuery ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacetQueries ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setFacetPrefix ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacetPrefix ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setFacetSort ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacetSort ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setFacetLimit ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacetLimit ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setFacetOffset ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacetOffset ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setFacetMinCount ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacetMinCount ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setFacetMissing ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacetMissing ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setFacetMethod ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacetMethod ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setFacetEnumCacheMinDefaultFrequency ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &addFacetDateField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &removeFacetDateField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacetDateFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setFacetDateStart ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacetDateStart ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setFacetDateEnd ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacetDateEnd ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setFacetDateGap ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacetDateGap ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setFacetDateHardEnd ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacetDateHardEnd ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &addFacetDateOther ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &removeFacetDateOther ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getFacetDateOther ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlight ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlight ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &addHighlightField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &removeHighlightField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightSnippets ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightSnippets ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightFragsize ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightFragsize ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightMergeContiguous ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightMergeContiguous ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightRequireFieldMatch ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightRequireFieldMatch ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightMaxAnalyzedChars ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightMaxAnalyzedChars ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightAlternateField ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightAlternateField ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightMaxAlternateFieldLength ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightMaxAlternateFieldLength ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightFormatter ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightFormatter ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightSimplePre ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightSimplePre ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightSimplePost ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightSimplePost ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightFragmenter ] {

          - Parameters [2] {
            Parameter #0 [ <required> $value ]
            Parameter #1 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightFragmenter ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $field_override ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightUsePhraseHighlighter ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightUsePhraseHighlighter ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightHighlightMultiTerm ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightHighlightMultiTerm ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightRegexSlop ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightRegexSlop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightRegexPattern ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightRegexPattern ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setHighlightRegexMaxAnalyzedChars ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getHighlightRegexMaxAnalyzedChars ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setStats ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getStats ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &addStatsField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &removeStatsField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getStatsFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &addStatsFacet ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &removeStatsFacet ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getStatsFacets ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setMlt ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getMlt ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setMltCount ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getMltCount ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &addMltField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &removeMltField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getMltFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &addMltQueryField ] {

          - Parameters [2] {
            Parameter #0 [ <required> $field ]
            Parameter #1 [ <required> $boost ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &removeMltQueryField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getMltQueryFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setMltMinTermFrequency ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getMltMinTermFrequency ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setMltMinDocFrequency ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getMltMinDocFrequency ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setMltMinWordLength ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getMltMinWordLength ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setMltMaxWordLength ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getMltMaxWordLength ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setMltMaxNumTokens ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getMltMaxNumTokens ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setMltMaxNumQueryTerms ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getMltMaxNumQueryTerms ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setMltBoost ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getMltBoost ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setTerms ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getTerms ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setTermsField ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getTermsField ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setTermsLowerBound ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getTermsLowerBound ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setTermsUpperBound ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getTermsUpperBound ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setTermsIncludeLowerBound ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getTermsIncludeLowerBound ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setTermsIncludeUpperBound ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getTermsIncludeUpperBound ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setTermsMinCount ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getTermsMinCount ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setTermsMaxCount ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getTermsMaxCount ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setTermsPrefix ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getTermsPrefix ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setTermsLimit ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getTermsLimit ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setTermsReturnRaw ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getTermsReturnRaw ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method &setTermsSort ] {

          - Parameters [1] {
            Parameter #0 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrQuery> public method getTermsSort ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method &setParam ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method &addParam ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method toString ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $url_encode ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method getParams ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method getParam ] {

          - Parameters [1] {
            Parameter #0 [ <required> $param_name ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method getPreparedParams ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method __clone ] {
        }

        Method [ <internal:solr, inherits SolrParams, prototype Serializable> public method serialize ] {
        }

        Method [ <internal:solr, inherits SolrParams, prototype Serializable> public method unserialize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $serialized ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method &add ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method &set ] {

          - Parameters [2] {
            Parameter #0 [ <required> $name ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:solr, inherits SolrParams> public method get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $param_name ]
          }
        }
      }
    }

    Class [ <internal:solr> abstract class SolrResponse ] {

      - Constants [2] {
        Constant [ integer PARSE_SOLR_OBJ ] { 0 }
        Constant [ integer PARSE_SOLR_DOC ] { 1 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [11] {
        Property [ <default> protected $http_status ]
        Property [ <default> protected $parser_mode ]
        Property [ <default> protected $success ]
        Property [ <default> protected $response_writer ]
        Property [ <default> protected $http_status_message ]
        Property [ <default> protected $http_request_url ]
        Property [ <default> protected $http_raw_request_headers ]
        Property [ <default> protected $http_raw_request ]
        Property [ <default> protected $http_raw_response_headers ]
        Property [ <default> protected $http_raw_response ]
        Property [ <default> protected $http_digested_response ]
      }

      - Methods [12] {
        Method [ <internal:solr> public method getHttpStatus ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method getHttpStatusMessage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method success ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method getRequestUrl ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method getRawRequestHeaders ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method getRawRequest ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method getRawResponseHeaders ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method getRawResponse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method getDigestedResponse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method setParseMode ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $parser_mode ]
          }
        }

        Method [ <internal:solr> public method getResponse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr> public method getArrayResponse ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:solr> final class SolrQueryResponse extends SolrResponse ] {

      - Constants [2] {
        Constant [ integer PARSE_SOLR_OBJ ] { 0 }
        Constant [ integer PARSE_SOLR_DOC ] { 1 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [11] {
        Property [ <default> protected $http_status ]
        Property [ <default> protected $parser_mode ]
        Property [ <default> protected $success ]
        Property [ <default> protected $response_writer ]
        Property [ <default> protected $http_status_message ]
        Property [ <default> protected $http_request_url ]
        Property [ <default> protected $http_raw_request_headers ]
        Property [ <default> protected $http_raw_request ]
        Property [ <default> protected $http_raw_response_headers ]
        Property [ <default> protected $http_raw_response ]
        Property [ <default> protected $http_digested_response ]
      }

      - Methods [14] {
        Method [ <internal:solr, ctor> public method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getHttpStatus ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getHttpStatusMessage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method success ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRequestUrl ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawRequestHeaders ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawRequest ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawResponseHeaders ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawResponse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getDigestedResponse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method setParseMode ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $parser_mode ]
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getResponse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getArrayResponse ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:solr> final class SolrUpdateResponse extends SolrResponse ] {

      - Constants [2] {
        Constant [ integer PARSE_SOLR_OBJ ] { 0 }
        Constant [ integer PARSE_SOLR_DOC ] { 1 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [11] {
        Property [ <default> protected $http_status ]
        Property [ <default> protected $parser_mode ]
        Property [ <default> protected $success ]
        Property [ <default> protected $response_writer ]
        Property [ <default> protected $http_status_message ]
        Property [ <default> protected $http_request_url ]
        Property [ <default> protected $http_raw_request_headers ]
        Property [ <default> protected $http_raw_request ]
        Property [ <default> protected $http_raw_response_headers ]
        Property [ <default> protected $http_raw_response ]
        Property [ <default> protected $http_digested_response ]
      }

      - Methods [14] {
        Method [ <internal:solr, ctor> public method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getHttpStatus ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getHttpStatusMessage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method success ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRequestUrl ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawRequestHeaders ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawRequest ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawResponseHeaders ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawResponse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getDigestedResponse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method setParseMode ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $parser_mode ]
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getResponse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getArrayResponse ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:solr> final class SolrPingResponse extends SolrResponse ] {

      - Constants [2] {
        Constant [ integer PARSE_SOLR_OBJ ] { 0 }
        Constant [ integer PARSE_SOLR_DOC ] { 1 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [11] {
        Property [ <default> protected $http_status ]
        Property [ <default> protected $parser_mode ]
        Property [ <default> protected $success ]
        Property [ <default> protected $response_writer ]
        Property [ <default> protected $http_status_message ]
        Property [ <default> protected $http_request_url ]
        Property [ <default> protected $http_raw_request_headers ]
        Property [ <default> protected $http_raw_request ]
        Property [ <default> protected $http_raw_response_headers ]
        Property [ <default> protected $http_raw_response ]
        Property [ <default> protected $http_digested_response ]
      }

      - Methods [14] {
        Method [ <internal:solr, ctor> public method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, overwrites SolrResponse, prototype SolrResponse> public method getResponse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getHttpStatus ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getHttpStatusMessage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method success ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRequestUrl ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawRequestHeaders ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawRequest ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawResponseHeaders ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawResponse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getDigestedResponse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method setParseMode ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $parser_mode ]
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getArrayResponse ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:solr> final class SolrGenericResponse extends SolrResponse ] {

      - Constants [2] {
        Constant [ integer PARSE_SOLR_OBJ ] { 0 }
        Constant [ integer PARSE_SOLR_DOC ] { 1 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [11] {
        Property [ <default> protected $http_status ]
        Property [ <default> protected $parser_mode ]
        Property [ <default> protected $success ]
        Property [ <default> protected $response_writer ]
        Property [ <default> protected $http_status_message ]
        Property [ <default> protected $http_request_url ]
        Property [ <default> protected $http_raw_request_headers ]
        Property [ <default> protected $http_raw_request ]
        Property [ <default> protected $http_raw_response_headers ]
        Property [ <default> protected $http_raw_response ]
        Property [ <default> protected $http_digested_response ]
      }

      - Methods [14] {
        Method [ <internal:solr, ctor> public method __construct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, dtor> public method __destruct ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getHttpStatus ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getHttpStatusMessage ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method success ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRequestUrl ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawRequestHeaders ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawRequest ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawResponseHeaders ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getRawResponse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getDigestedResponse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method setParseMode ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $parser_mode ]
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getResponse ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:solr, inherits SolrResponse> public method getArrayResponse ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:solr> abstract class SolrUtils ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [5] {
        Method [ <internal:solr> static public method escapeQueryChars ] {

          - Parameters [1] {
            Parameter #0 [ <required> $str ]
          }
        }

        Method [ <internal:solr> static public method queryPhrase ] {

          - Parameters [1] {
            Parameter #0 [ <required> $str ]
          }
        }

        Method [ <internal:solr> static public method digestXmlResponse ] {

          - Parameters [2] {
            Parameter #0 [ <required> $xmlresponse ]
            Parameter #1 [ <optional> $parse_mode ]
          }
        }

        Method [ <internal:solr> static public method digestJsonResponse ] {

          - Parameters [1] {
            Parameter #0 [ <required> $jsonResponse ]
          }
        }

        Method [ <internal:solr> static public method getSolrVersion ] {

          - Parameters [0] {
          }
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:solr> class SolrException extends Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [7] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
        Property [ <default> protected $sourceline ]
        Property [ <default> protected $sourcefile ]
        Property [ <default> protected $zif_name ]
      }

      - Methods [10] {
        Method [ <internal:solr> public method getInternalInfo ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:solr> class SolrIllegalOperationException extends SolrException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [7] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
        Property [ <default> protected $sourceline ]
        Property [ <default> protected $sourcefile ]
        Property [ <default> protected $zif_name ]
      }

      - Methods [10] {
        Method [ <internal:solr, overwrites SolrException, prototype SolrException> public method getInternalInfo ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:solr> class SolrIllegalArgumentException extends SolrException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [7] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
        Property [ <default> protected $sourceline ]
        Property [ <default> protected $sourcefile ]
        Property [ <default> protected $zif_name ]
      }

      - Methods [10] {
        Method [ <internal:solr, overwrites SolrException, prototype SolrException> public method getInternalInfo ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:solr> class SolrClientException extends SolrException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [7] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
        Property [ <default> protected $sourceline ]
        Property [ <default> protected $sourcefile ]
        Property [ <default> protected $zif_name ]
      }

      - Methods [10] {
        Method [ <internal:solr, overwrites SolrException, prototype SolrException> public method getInternalInfo ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:solr> class SolrServerException extends SolrException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [7] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
        Property [ <default> protected $sourceline ]
        Property [ <default> protected $sourcefile ]
        Property [ <default> protected $zif_name ]
      }

      - Methods [10] {
        Method [ <internal:solr, overwrites SolrException, prototype SolrException> public method getInternalInfo ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }
  }
}

