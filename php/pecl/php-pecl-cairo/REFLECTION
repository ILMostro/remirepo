Extension [ <persistent> extension #76 cairo version 0.3.2-beta ] {

  - Constants [135] {
    Constant [ integer CAIRO_STATUS_SUCCESS ] { 0 }
    Constant [ integer CAIRO_STATUS_NO_MEMORY ] { 1 }
    Constant [ integer CAIRO_STATUS_INVALID_RESTORE ] { 2 }
    Constant [ integer CAIRO_STATUS_INVALID_POP_GROUP ] { 3 }
    Constant [ integer CAIRO_STATUS_NO_CURRENT_POINT ] { 4 }
    Constant [ integer CAIRO_STATUS_INVALID_MATRIX ] { 5 }
    Constant [ integer CAIRO_STATUS_INVALID_STATUS ] { 6 }
    Constant [ integer CAIRO_STATUS_NULL_POINTER ] { 7 }
    Constant [ integer CAIRO_STATUS_INVALID_STRING ] { 8 }
    Constant [ integer CAIRO_STATUS_INVALID_PATH_DATA ] { 9 }
    Constant [ integer CAIRO_STATUS_READ_ERROR ] { 10 }
    Constant [ integer CAIRO_STATUS_WRITE_ERROR ] { 11 }
    Constant [ integer CAIRO_STATUS_SURFACE_FINISHED ] { 12 }
    Constant [ integer CAIRO_STATUS_SURFACE_TYPE_MISMATCH ] { 13 }
    Constant [ integer CAIRO_STATUS_PATTERN_TYPE_MISMATCH ] { 14 }
    Constant [ integer CAIRO_STATUS_INVALID_CONTENT ] { 15 }
    Constant [ integer CAIRO_STATUS_INVALID_FORMAT ] { 16 }
    Constant [ integer CAIRO_STATUS_INVALID_VISUAL ] { 17 }
    Constant [ integer CAIRO_STATUS_FILE_NOT_FOUND ] { 18 }
    Constant [ integer CAIRO_STATUS_INVALID_DASH ] { 19 }
    Constant [ integer CAIRO_STATUS_INVALID_DSC_COMMENT ] { 20 }
    Constant [ integer CAIRO_STATUS_INVALID_INDEX ] { 21 }
    Constant [ integer CAIRO_STATUS_CLIP_NOT_REPRESENTABLE ] { 22 }
    Constant [ integer CAIRO_STATUS_TEMP_FILE_ERROR ] { 23 }
    Constant [ integer CAIRO_STATUS_INVALID_STRIDE ] { 24 }
    Constant [ integer CAIRO_STATUS_FONT_TYPE_MISMATCH ] { 25 }
    Constant [ integer CAIRO_STATUS_USER_FONT_IMMUTABLE ] { 26 }
    Constant [ integer CAIRO_STATUS_USER_FONT_ERROR ] { 27 }
    Constant [ integer CAIRO_STATUS_NEGATIVE_COUNT ] { 28 }
    Constant [ integer CAIRO_STATUS_INVALID_CLUSTERS ] { 29 }
    Constant [ integer CAIRO_STATUS_INVALID_SLANT ] { 30 }
    Constant [ integer CAIRO_STATUS_INVALID_WEIGHT ] { 31 }
    Constant [ integer CAIRO_ANTIALIAS_DEFAULT ] { 0 }
    Constant [ integer CAIRO_ANTIALIAS_NONE ] { 1 }
    Constant [ integer CAIRO_ANTIALIAS_GRAY ] { 2 }
    Constant [ integer CAIRO_ANTIALIAS_SUBPIXEL ] { 3 }
    Constant [ integer CAIRO_SUBPIXEL_ORDER_DEFAULT ] { 0 }
    Constant [ integer CAIRO_SUBPIXEL_ORDER_RGB ] { 1 }
    Constant [ integer CAIRO_SUBPIXEL_ORDER_BGR ] { 2 }
    Constant [ integer CAIRO_SUBPIXEL_ORDER_VRGB ] { 3 }
    Constant [ integer CAIRO_SUBPIXEL_ORDER_VBGR ] { 4 }
    Constant [ integer CAIRO_FILL_RULE_WINDING ] { 0 }
    Constant [ integer CAIRO_FILL_RULE_EVEN_ODD ] { 1 }
    Constant [ integer CAIRO_LINE_CAP_BUTT ] { 0 }
    Constant [ integer CAIRO_LINE_CAP_ROUND ] { 1 }
    Constant [ integer CAIRO_LINE_CAP_SQUARE ] { 2 }
    Constant [ integer CAIRO_LINE_JOIN_MITER ] { 0 }
    Constant [ integer CAIRO_LINE_JOIN_ROUND ] { 1 }
    Constant [ integer CAIRO_LINE_JOIN_BEVEL ] { 2 }
    Constant [ integer CAIRO_OPERATOR_CLEAR ] { 0 }
    Constant [ integer CAIRO_OPERATOR_SOURCE ] { 1 }
    Constant [ integer CAIRO_OPERATOR_OVER ] { 2 }
    Constant [ integer CAIRO_OPERATOR_IN ] { 3 }
    Constant [ integer CAIRO_OPERATOR_OUT ] { 4 }
    Constant [ integer CAIRO_OPERATOR_ATOP ] { 5 }
    Constant [ integer CAIRO_OPERATOR_DEST ] { 6 }
    Constant [ integer CAIRO_OPERATOR_DEST_OVER ] { 7 }
    Constant [ integer CAIRO_OPERATOR_DEST_IN ] { 8 }
    Constant [ integer CAIRO_OPERATOR_DEST_OUT ] { 9 }
    Constant [ integer CAIRO_OPERATOR_DEST_ATOP ] { 10 }
    Constant [ integer CAIRO_OPERATOR_XOR ] { 11 }
    Constant [ integer CAIRO_OPERATOR_ADD ] { 12 }
    Constant [ integer CAIRO_OPERATOR_SATURATE ] { 13 }
    Constant [ integer CAIRO_OPERATOR_MULTIPLY ] { 14 }
    Constant [ integer CAIRO_OPERATOR_SCREEN ] { 15 }
    Constant [ integer CAIRO_OPERATOR_OVERLAY ] { 16 }
    Constant [ integer CAIRO_OPERATOR_DARKEN ] { 17 }
    Constant [ integer CAIRO_OPERATOR_LIGHTEN ] { 18 }
    Constant [ integer CAIRO_OPERATOR_COLOR_DODGE ] { 19 }
    Constant [ integer CAIRO_OPERATOR_COLOR_BURN ] { 20 }
    Constant [ integer CAIRO_OPERATOR_HARD_LIGHT ] { 21 }
    Constant [ integer CAIRO_OPERATOR_SOFT_LIGHT ] { 22 }
    Constant [ integer CAIRO_OPERATOR_DIFFERENCE ] { 23 }
    Constant [ integer CAIRO_OPERATOR_EXCLUSION ] { 24 }
    Constant [ integer CAIRO_OPERATOR_HSL_HUE ] { 25 }
    Constant [ integer CAIRO_OPERATOR_HSL_SATURATION ] { 26 }
    Constant [ integer CAIRO_OPERATOR_HSL_COLOR ] { 27 }
    Constant [ integer CAIRO_OPERATOR_HSL_LUMINOSITY ] { 28 }
    Constant [ integer CAIRO_PATTERN_TYPE_SOLID ] { 0 }
    Constant [ integer CAIRO_PATTERN_TYPE_SURFACE ] { 1 }
    Constant [ integer CAIRO_PATTERN_TYPE_LINEAR ] { 2 }
    Constant [ integer CAIRO_PATTERN_TYPE_RADIAL ] { 3 }
    Constant [ integer CAIRO_EXTEND_NONE ] { 0 }
    Constant [ integer CAIRO_EXTEND_REPEAT ] { 1 }
    Constant [ integer CAIRO_EXTEND_REFLECT ] { 2 }
    Constant [ integer CAIRO_EXTEND_PAD ] { 3 }
    Constant [ integer CAIRO_FILTER_FAST ] { 0 }
    Constant [ integer CAIRO_FILTER_GOOD ] { 1 }
    Constant [ integer CAIRO_FILTER_BEST ] { 2 }
    Constant [ integer CAIRO_FILTER_NEAREST ] { 3 }
    Constant [ integer CAIRO_FILTER_BILINEAR ] { 4 }
    Constant [ integer CAIRO_FILTER_GAUSSIAN ] { 5 }
    Constant [ integer CAIRO_HINT_STYLE_DEFAULT ] { 0 }
    Constant [ integer CAIRO_HINT_STYLE_NONE ] { 1 }
    Constant [ integer CAIRO_HINT_STYLE_SLIGHT ] { 2 }
    Constant [ integer CAIRO_HINT_STYLE_MEDIUM ] { 3 }
    Constant [ integer CAIRO_HINT_STYLE_FULL ] { 4 }
    Constant [ integer CAIRO_HINT_METRICS_DEFAULT ] { 0 }
    Constant [ integer CAIRO_HINT_METRICS_OFF ] { 1 }
    Constant [ integer CAIRO_HINT_METRICS_ON ] { 2 }
    Constant [ integer CAIRO_FONT_TYPE_TOY ] { 0 }
    Constant [ integer CAIRO_FONT_TYPE_FT ] { 1 }
    Constant [ integer CAIRO_FONT_TYPE_WIN32 ] { 2 }
    Constant [ integer CAIRO_FONT_TYPE_QUARTZ ] { 3 }
    Constant [ integer CAIRO_FONT_TYPE_USER ] { 4 }
    Constant [ integer CAIRO_FONT_SLANT_NORMAL ] { 0 }
    Constant [ integer CAIRO_FONT_SLANT_ITALIC ] { 1 }
    Constant [ integer CAIRO_FONT_SLANT_OBLIQUE ] { 2 }
    Constant [ integer CAIRO_FONT_WEIGHT_NORMAL ] { 0 }
    Constant [ integer CAIRO_FONT_WEIGHT_BOLD ] { 1 }
    Constant [ integer CAIRO_CONTENT_COLOR ] { 4096 }
    Constant [ integer CAIRO_CONTENT_ALPHA ] { 8192 }
    Constant [ integer CAIRO_CONTENT_COLOR_ALPHA ] { 12288 }
    Constant [ integer CAIRO_SURFACE_TYPE_IMAGE ] { 0 }
    Constant [ integer CAIRO_SURFACE_TYPE_PDF ] { 1 }
    Constant [ integer CAIRO_SURFACE_TYPE_PS ] { 2 }
    Constant [ integer CAIRO_SURFACE_TYPE_XLIB ] { 3 }
    Constant [ integer CAIRO_SURFACE_TYPE_XCB ] { 4 }
    Constant [ integer CAIRO_SURFACE_TYPE_GLITZ ] { 5 }
    Constant [ integer CAIRO_SURFACE_TYPE_QUARTZ ] { 6 }
    Constant [ integer CAIRO_SURFACE_TYPE_WIN32 ] { 7 }
    Constant [ integer CAIRO_SURFACE_TYPE_BEOS ] { 8 }
    Constant [ integer CAIRO_SURFACE_TYPE_DIRECTFB ] { 9 }
    Constant [ integer CAIRO_SURFACE_TYPE_SVG ] { 10 }
    Constant [ integer CAIRO_SURFACE_TYPE_OS2 ] { 11 }
    Constant [ integer CAIRO_SURFACE_TYPE_WIN32_PRINTING ] { 12 }
    Constant [ integer CAIRO_SURFACE_TYPE_QUARTZ_IMAGE ] { 13 }
    Constant [ integer CAIRO_FORMAT_ARGB32 ] { 0 }
    Constant [ integer CAIRO_FORMAT_RGB24 ] { 1 }
    Constant [ integer CAIRO_FORMAT_A8 ] { 2 }
    Constant [ integer CAIRO_FORMAT_A1 ] { 3 }
    Constant [ integer CAIRO_PS_LEVEL_2 ] { 0 }
    Constant [ integer CAIRO_PS_LEVEL_3 ] { 1 }
    Constant [ integer CAIRO_SVG_VERSION_1_1 ] { 0 }
    Constant [ integer CAIRO_SVG_VERSION_1_2 ] { 1 }
  }

  - Functions {
    Function [ <internal:cairo> function cairo_version ] {
    }
    Function [ <internal:cairo> function cairo_version_string ] {
    }
    Function [ <internal:cairo> function cairo_available_surfaces ] {
    }
    Function [ <internal:cairo> function cairo_available_fonts ] {
    }
    Function [ <internal:cairo> function cairo_status_to_string ] {

      - Parameters [1] {
        Parameter #0 [ <required> $status ]
      }
    }
    Function [ <internal:cairo> function cairo_create ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_status ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_save ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_restore ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_get_target ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_push_group ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_push_group_with_content ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $content ]
      }
    }
    Function [ <internal:cairo> function cairo_pop_group ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_pop_group_to_source ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_get_group_target ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_set_source_rgb ] {

      - Parameters [4] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $red ]
        Parameter #2 [ <required> $green ]
        Parameter #3 [ <required> $blue ]
      }
    }
    Function [ <internal:cairo> function cairo_set_source_rgba ] {

      - Parameters [5] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $red ]
        Parameter #2 [ <required> $green ]
        Parameter #3 [ <required> $blue ]
        Parameter #4 [ <required> $alpha ]
      }
    }
    Function [ <internal:cairo> function cairo_set_source ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> CairoPattern $pattern ]
      }
    }
    Function [ <internal:cairo> function cairo_set_source_surface ] {

      - Parameters [4] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> CairoSurface $surface ]
        Parameter #2 [ <optional> $x ]
        Parameter #3 [ <optional> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_get_source ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_set_antialias ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <optional> $antialias ]
      }
    }
    Function [ <internal:cairo> function cairo_get_antialias ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_set_dash ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> array $dashes ]
        Parameter #2 [ <optional> $offset ]
      }
    }
    Function [ <internal:cairo> function cairo_get_dash_count ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_get_dash ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_set_fill_rule ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $setting ]
      }
    }
    Function [ <internal:cairo> function cairo_get_fill_rule ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_set_line_cap ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $setting ]
      }
    }
    Function [ <internal:cairo> function cairo_get_line_cap ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_set_line_join ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $setting ]
      }
    }
    Function [ <internal:cairo> function cairo_get_line_join ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_set_line_width ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $width ]
      }
    }
    Function [ <internal:cairo> function cairo_get_line_width ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_set_miter_limit ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $limit ]
      }
    }
    Function [ <internal:cairo> function cairo_get_miter_limit ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_set_operator ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $setting ]
      }
    }
    Function [ <internal:cairo> function cairo_get_operator ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_set_tolerance ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $tolerance ]
      }
    }
    Function [ <internal:cairo> function cairo_get_tolerance ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_clip ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_clip_preserve ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_reset_clip ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_in_clip ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_clip_extents ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_clip_rectangle_list ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_fill ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_fill_preserve ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_fill_extents ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_in_fill ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_mask ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> CairoPattern $pattern ]
      }
    }
    Function [ <internal:cairo> function cairo_mask_surface ] {

      - Parameters [4] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> CairoSurface $surface ]
        Parameter #2 [ <optional> $x ]
        Parameter #3 [ <optional> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_paint ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_paint_with_alpha ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $alpha ]
      }
    }
    Function [ <internal:cairo> function cairo_stroke ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_stroke_preserve ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_stroke_extents ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_in_stroke ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_copy_page ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_show_page ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_translate ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_scale ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_rotate ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $angle ]
      }
    }
    Function [ <internal:cairo> function cairo_transform ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> CairoMatrix $matrix ]
      }
    }
    Function [ <internal:cairo> function cairo_set_matrix ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> CairoMatrix $matrix ]
      }
    }
    Function [ <internal:cairo> function cairo_get_matrix ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_identity_matrix ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_user_to_device ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_user_to_device_distance ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_device_to_user ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_device_to_user_distance ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_copy_path ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_copy_path_flat ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_append_path ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> CairoPath $path ]
      }
    }
    Function [ <internal:cairo> function cairo_has_current_point ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_get_current_point ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_new_path ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_new_sub_path ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_close_path ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_arc ] {

      - Parameters [6] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
        Parameter #3 [ <required> $radius ]
        Parameter #4 [ <required> $angle1 ]
        Parameter #5 [ <required> $angle2 ]
      }
    }
    Function [ <internal:cairo> function cairo_arc_negative ] {

      - Parameters [6] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
        Parameter #3 [ <required> $radius ]
        Parameter #4 [ <required> $angle1 ]
        Parameter #5 [ <required> $angle2 ]
      }
    }
    Function [ <internal:cairo> function cairo_curve_to ] {

      - Parameters [7] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x1 ]
        Parameter #2 [ <required> $y1 ]
        Parameter #3 [ <required> $x2 ]
        Parameter #4 [ <required> $y2 ]
        Parameter #5 [ <required> $x3 ]
        Parameter #6 [ <required> $y3 ]
      }
    }
    Function [ <internal:cairo> function cairo_line_to ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_move_to ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_rectangle ] {

      - Parameters [5] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
        Parameter #3 [ <required> $width ]
        Parameter #4 [ <required> $height ]
      }
    }
    Function [ <internal:cairo> function cairo_glyph_path ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> array $glyphs ]
      }
    }
    Function [ <internal:cairo> function cairo_text_path ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $text ]
      }
    }
    Function [ <internal:cairo> function cairo_rel_curve_to ] {

      - Parameters [7] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x1 ]
        Parameter #2 [ <required> $y1 ]
        Parameter #3 [ <required> $x2 ]
        Parameter #4 [ <required> $y2 ]
        Parameter #5 [ <required> $x3 ]
        Parameter #6 [ <required> $y3 ]
      }
    }
    Function [ <internal:cairo> function cairo_rel_line_to ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_rel_move_to ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_path_extents ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_select_font_face ] {

      - Parameters [4] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $family ]
        Parameter #2 [ <optional> $slant ]
        Parameter #3 [ <optional> $weight ]
      }
    }
    Function [ <internal:cairo> function cairo_set_font_size ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $size ]
      }
    }
    Function [ <internal:cairo> function cairo_set_font_matrix ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> CairoMatrix $matrix ]
      }
    }
    Function [ <internal:cairo> function cairo_get_font_matrix ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_set_font_options ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> CairoFontOptions $fontoptions ]
      }
    }
    Function [ <internal:cairo> function cairo_get_font_options ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_set_font_face ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> CairoFontFace $fontface ]
      }
    }
    Function [ <internal:cairo> function cairo_get_font_face ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_set_scaled_font ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> CairoScaledFont $scaledfont ]
      }
    }
    Function [ <internal:cairo> function cairo_get_scaled_font ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_show_text ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoContext $context ]
        Parameter #1 [ <required> $text ]
      }
    }
    Function [ <internal:cairo> function cairo_text_extents ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_font_extents ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoContext $context ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_get_type ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoPattern $pattern ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_status ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoPattern $pattern ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_get_matrix ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoPattern $pattern ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_set_matrix ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoPattern $pattern ]
        Parameter #1 [ <optional> CairoMatrix $matrix ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_create_rgb ] {

      - Parameters [3] {
        Parameter #0 [ <required> $red ]
        Parameter #1 [ <required> $green ]
        Parameter #2 [ <required> $blue ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_create_rgba ] {

      - Parameters [4] {
        Parameter #0 [ <required> $red ]
        Parameter #1 [ <required> $green ]
        Parameter #2 [ <required> $blue ]
        Parameter #3 [ <required> $alpha ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_create_for_surface ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_set_filter ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoSurfacePattern $pattern ]
        Parameter #1 [ <optional> $filter ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_get_filter ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurfacePattern $pattern ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_set_extend ] {

      - Parameters [2] {
        Parameter #0 [ <required> $pattern ]
        Parameter #1 [ <required> $extend ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_get_extend ] {

      - Parameters [1] {
        Parameter #0 [ <required> $pattern ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_add_color_stop_rgb ] {

      - Parameters [5] {
        Parameter #0 [ <required> CairoGradientPattern $pattern ]
        Parameter #1 [ <required> $offset ]
        Parameter #2 [ <required> $red ]
        Parameter #3 [ <required> $green ]
        Parameter #4 [ <required> $blue ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_add_color_stop_rgba ] {

      - Parameters [6] {
        Parameter #0 [ <required> CairoGradientPattern $pattern ]
        Parameter #1 [ <required> $offset ]
        Parameter #2 [ <required> $red ]
        Parameter #3 [ <required> $green ]
        Parameter #4 [ <required> $blue ]
        Parameter #5 [ <required> $alpha ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_create_linear ] {

      - Parameters [4] {
        Parameter #0 [ <required> $x0 ]
        Parameter #1 [ <required> $y0 ]
        Parameter #2 [ <required> $x1 ]
        Parameter #3 [ <required> $y1 ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_create_radial ] {

      - Parameters [6] {
        Parameter #0 [ <required> $x0 ]
        Parameter #1 [ <required> $y0 ]
        Parameter #2 [ <required> $r0 ]
        Parameter #3 [ <required> $x1 ]
        Parameter #4 [ <required> $y1 ]
        Parameter #5 [ <required> $r1 ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_get_color_stop_count ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoGradientPattern $pattern ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_get_surface ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurfacePattern $pattern ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_get_rgba ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSolidPattern $pattern ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_get_color_stop_rgba ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoGradientPattern $pattern ]
        Parameter #1 [ <required> $index ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_get_linear_points ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoLinearGradient $pattern ]
      }
    }
    Function [ <internal:cairo> function cairo_pattern_get_radial_circles ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoRadialGradient $pattern ]
      }
    }
    Function [ <internal:cairo> function cairo_matrix_init ] {

      - Parameters [5] {
        Parameter #0 [ <optional> $yx ]
        Parameter #1 [ <optional> $xy ]
        Parameter #2 [ <optional> $yy ]
        Parameter #3 [ <optional> $x0 ]
        Parameter #4 [ <optional> $y0 ]
      }
    }
    Function [ <internal:cairo> function cairo_matrix_init_identity ] {
    }
    Function [ <internal:cairo> function cairo_matrix_init_translate ] {

      - Parameters [2] {
        Parameter #0 [ <required> $tx ]
        Parameter #1 [ <required> $ty ]
      }
    }
    Function [ <internal:cairo> function cairo_matrix_init_scale ] {

      - Parameters [2] {
        Parameter #0 [ <required> $sx ]
        Parameter #1 [ <required> $sy ]
      }
    }
    Function [ <internal:cairo> function cairo_matrix_init_rotate ] {

      - Parameters [1] {
        Parameter #0 [ <required> $radians ]
      }
    }
    Function [ <internal:cairo> function cairo_matrix_translate ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoMatrix $matrix ]
        Parameter #1 [ <required> $tx ]
        Parameter #2 [ <required> $ty ]
      }
    }
    Function [ <internal:cairo> function cairo_matrix_scale ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoMatrix $matrix ]
        Parameter #1 [ <required> $sx ]
        Parameter #2 [ <required> $sy ]
      }
    }
    Function [ <internal:cairo> function cairo_matrix_rotate ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoMatrix $matrix ]
        Parameter #1 [ <required> $radians ]
      }
    }
    Function [ <internal:cairo> function cairo_matrix_invert ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoMatrix $matrix ]
      }
    }
    Function [ <internal:cairo> function cairo_matrix_multiply ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoMatrix or NULL $matrix1 ]
        Parameter #1 [ <required> CairoMatrix or NULL $matrix2 ]
      }
    }
    Function [ <internal:cairo> function cairo_matrix_transform_distance ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoMatrix $matrix ]
        Parameter #1 [ <required> $dx ]
        Parameter #2 [ <required> $dy ]
      }
    }
    Function [ <internal:cairo> function cairo_matrix_transform_point ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoMatrix $matrix ]
        Parameter #1 [ <required> $dx ]
        Parameter #2 [ <required> $dy ]
      }
    }
    Function [ <internal:cairo> function cairo_font_options_create ] {
    }
    Function [ <internal:cairo> function cairo_font_options_status ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoFontOptions $options ]
      }
    }
    Function [ <internal:cairo> function cairo_font_options_merge ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoFontOptions $options ]
        Parameter #1 [ <required> CairoFontOptions $other ]
      }
    }
    Function [ <internal:cairo> function cairo_font_options_hash ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoFontOptions $options ]
      }
    }
    Function [ <internal:cairo> function cairo_font_options_equal ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoFontOptions $options ]
        Parameter #1 [ <required> CairoFontOptions $other ]
      }
    }
    Function [ <internal:cairo> function cairo_font_options_set_antialias ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoFontOptions $options ]
        Parameter #1 [ <required> $antialias ]
      }
    }
    Function [ <internal:cairo> function cairo_font_options_get_antialias ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoFontOptions $options ]
      }
    }
    Function [ <internal:cairo> function cairo_font_options_set_subpixel_order ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoFontOptions $options ]
        Parameter #1 [ <required> $subpixel_order ]
      }
    }
    Function [ <internal:cairo> function cairo_font_options_get_subpixel_order ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoFontOptions $options ]
      }
    }
    Function [ <internal:cairo> function cairo_font_options_set_hint_style ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoFontOptions $options ]
        Parameter #1 [ <required> $hint_style ]
      }
    }
    Function [ <internal:cairo> function cairo_font_options_get_hint_style ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoFontOptions $options ]
      }
    }
    Function [ <internal:cairo> function cairo_font_options_set_hint_metrics ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoFontOptions $options ]
        Parameter #1 [ <required> $hint_metrics ]
      }
    }
    Function [ <internal:cairo> function cairo_font_options_get_hint_metrics ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoFontOptions $options ]
      }
    }
    Function [ <internal:cairo> function cairo_toy_font_face_create ] {

      - Parameters [3] {
        Parameter #0 [ <required> $family ]
        Parameter #1 [ <optional> $slant ]
        Parameter #2 [ <optional> $weight ]
      }
    }
    Function [ <internal:cairo> function cairo_toy_font_face_get_family ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoToyFontFace $fontface ]
      }
    }
    Function [ <internal:cairo> function cairo_toy_font_face_get_weight ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoToyFontFace $fontface ]
      }
    }
    Function [ <internal:cairo> function cairo_toy_font_face_get_slant ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoToyFontFace $fontface ]
      }
    }
    Function [ <internal:cairo> function cairo_font_face_status ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoFontFace $fontface ]
      }
    }
    Function [ <internal:cairo> function cairo_font_face_get_type ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoFontFace $fontface ]
      }
    }
    Function [ <internal:cairo> function cairo_scaled_font_create ] {

      - Parameters [4] {
        Parameter #0 [ <required> CairoFontFace $fontface ]
        Parameter #1 [ <optional> CairoMatrix $matrix ]
        Parameter #2 [ <optional> CairoMatrix $ctm ]
        Parameter #3 [ <optional> CairoFontOptions $fontoptions ]
      }
    }
    Function [ <internal:cairo> function cairo_scaled_font_status ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoScaledFont $scaledfont ]
      }
    }
    Function [ <internal:cairo> function cairo_scaled_font_extents ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoScaledFont $scaledfont ]
      }
    }
    Function [ <internal:cairo> function cairo_scaled_font_text_extents ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoScaledFont $scaledfont ]
        Parameter #1 [ <required> $text ]
      }
    }
    Function [ <internal:cairo> function cairo_scaled_font_glyph_extents ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoScaledFont $scaledfont ]
        Parameter #1 [ <required> $glyphs ]
      }
    }
    Function [ <internal:cairo> function cairo_scaled_font_get_font_face ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoScaledFont $scaledfont ]
      }
    }
    Function [ <internal:cairo> function cairo_scaled_font_get_font_options ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoScaledFont $scaledfont ]
      }
    }
    Function [ <internal:cairo> function cairo_scaled_font_get_font_matrix ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoScaledFont $scaledfont ]
      }
    }
    Function [ <internal:cairo> function cairo_scaled_font_get_ctm ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoScaledFont $scaledfont ]
      }
    }
    Function [ <internal:cairo> function cairo_scaled_font_get_scale_matrix ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoScaledFont $scaledfont ]
      }
    }
    Function [ <internal:cairo> function cairo_scaled_font_get_type ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoScaledFont $scaledfont ]
      }
    }
    Function [ <internal:cairo> function cairo_ft_font_face_create ] {
    }
    Function [ <internal:cairo> function cairo_surface_create_similar ] {

      - Parameters [4] {
        Parameter #0 [ <required> CairoSurface $surface ]
        Parameter #1 [ <required> $content ]
        Parameter #2 [ <required> $width ]
        Parameter #3 [ <required> $height ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_create_for_rectangle ] {

      - Parameters [4] {
        Parameter #0 [ <required> CairoSurface $surface ]
        Parameter #1 [ <required> $content ]
        Parameter #2 [ <required> $width ]
        Parameter #3 [ <required> $height ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_status ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_finish ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_flush ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_get_font_options ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_get_content ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_mark_dirty ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_mark_dirty_rectangle ] {

      - Parameters [5] {
        Parameter #0 [ <required> CairoSurface $surface ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
        Parameter #3 [ <required> $width ]
        Parameter #4 [ <required> $height ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_set_device_offset ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoSurface $surface ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_get_device_offset ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_set_fallback_resolution ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoSurface $surface ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_get_fallback_resolution ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_get_type ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_copy_page ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_show_page ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_has_show_text_glyphs ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_image_surface_create ] {

      - Parameters [3] {
        Parameter #0 [ <required> $format ]
        Parameter #1 [ <required> $width ]
        Parameter #2 [ <required> $height ]
      }
    }
    Function [ <internal:cairo> function cairo_format_stride_for_width ] {

      - Parameters [2] {
        Parameter #0 [ <required> $format ]
        Parameter #1 [ <required> $width ]
      }
    }
    Function [ <internal:cairo> function cairo_image_surface_create_for_data ] {

      - Parameters [5] {
        Parameter #0 [ <required> $data ]
        Parameter #1 [ <required> $format ]
        Parameter #2 [ <required> $width ]
        Parameter #3 [ <required> $height ]
        Parameter #4 [ <optional> $stride ]
      }
    }
    Function [ <internal:cairo> function cairo_image_surface_get_data ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoImageSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_image_surface_get_format ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoImageSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_image_surface_get_width ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoImageSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_image_surface_get_height ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoImageSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_image_surface_get_stride ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoImageSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_image_surface_create_from_png ] {

      - Parameters [1] {
        Parameter #0 [ <required> $file ]
      }
    }
    Function [ <internal:cairo> function cairo_surface_write_to_png ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoSurface $surface ]
        Parameter #1 [ <required> $x ]
        Parameter #2 [ <required> $y ]
      }
    }
    Function [ <internal:cairo> function cairo_svg_surface_create ] {

      - Parameters [3] {
        Parameter #0 [ <required> $file ]
        Parameter #1 [ <required> $width ]
        Parameter #2 [ <required> $height ]
      }
    }
    Function [ <internal:cairo> function cairo_svg_surface_restrict_to_version ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoSvgSurface $surface ]
        Parameter #1 [ <required> $version ]
      }
    }
    Function [ <internal:cairo> function cairo_svg_get_versions ] {
    }
    Function [ <internal:cairo> function cairo_svg_version_to_string ] {

      - Parameters [1] {
        Parameter #0 [ <required> $version ]
      }
    }
    Function [ <internal:cairo> function cairo_pdf_surface_create ] {

      - Parameters [3] {
        Parameter #0 [ <required> $file ]
        Parameter #1 [ <required> $width ]
        Parameter #2 [ <required> $height ]
      }
    }
    Function [ <internal:cairo> function cairo_pdf_surface_set_size ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoPdfSurface $surface ]
        Parameter #1 [ <required> $width ]
        Parameter #2 [ <required> $height ]
      }
    }
    Function [ <internal:cairo> function cairo_ps_surface_create ] {

      - Parameters [3] {
        Parameter #0 [ <required> $file ]
        Parameter #1 [ <required> $width ]
        Parameter #2 [ <required> $height ]
      }
    }
    Function [ <internal:cairo> function cairo_ps_surface_set_size ] {

      - Parameters [3] {
        Parameter #0 [ <required> CairoPsSurface $surface ]
        Parameter #1 [ <required> $width ]
        Parameter #2 [ <required> $height ]
      }
    }
    Function [ <internal:cairo> function cairo_ps_surface_restrict_to_level ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoPsSurface $surface ]
        Parameter #1 [ <required> $level ]
      }
    }
    Function [ <internal:cairo> function cairo_ps_level_to_string ] {

      - Parameters [1] {
        Parameter #0 [ <required> $level ]
      }
    }
    Function [ <internal:cairo> function cairo_ps_get_levels ] {
    }
    Function [ <internal:cairo> function cairo_ps_surface_set_eps ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoPsSurface $surface ]
        Parameter #1 [ <required> $level ]
      }
    }
    Function [ <internal:cairo> function cairo_ps_surface_get_eps ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoPsSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_ps_surface_dsc_begin_setup ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoPsSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_ps_surface_dsc_begin_page_setup ] {

      - Parameters [1] {
        Parameter #0 [ <required> CairoPsSurface $surface ]
      }
    }
    Function [ <internal:cairo> function cairo_ps_surface_dsc_comment ] {

      - Parameters [2] {
        Parameter #0 [ <required> CairoPsSurface $surface ]
        Parameter #1 [ <required> $comment ]
      }
    }
    Function [ <internal:cairo> function cairo_recording_surface_create ] {

      - Parameters [2] {
        Parameter #0 [ <required> $content ]
        Parameter #1 [ <required> $extents ]
      }
    }
    Function [ <internal, deprecated:cairo> function cairo_matrix_create_scale ] {

      - Parameters [2] {
        Parameter #0 [ <required> $sx ]
        Parameter #1 [ <required> $sy ]
      }
    }
    Function [ <internal, deprecated:cairo> function cairo_matrix_create_translate ] {

      - Parameters [2] {
        Parameter #0 [ <required> $tx ]
        Parameter #1 [ <required> $ty ]
      }
    }
  }

  - Classes [43] {
    Class [ <internal:cairo> abstract final class Cairo ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [5] {
        Method [ <internal:cairo> static public method version ] {
        }

        Method [ <internal:cairo> static public method versionString ] {
        }

        Method [ <internal:cairo> static public method availableSurfaces ] {
        }

        Method [ <internal:cairo> static public method availableFonts ] {
        }

        Method [ <internal:cairo> static public method statusToString ] {

          - Parameters [1] {
            Parameter #0 [ <required> $status ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> class CairoException extends Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:cairo> abstract final class CairoStatus ] {

      - Constants [32] {
        Constant [ integer SUCCESS ] { 0 }
        Constant [ integer NO_MEMORY ] { 1 }
        Constant [ integer INVALID_RESTORE ] { 2 }
        Constant [ integer INVALID_POP_GROUP ] { 3 }
        Constant [ integer NO_CURRENT_POINT ] { 4 }
        Constant [ integer INVALID_MATRIX ] { 5 }
        Constant [ integer INVALID_STATUS ] { 6 }
        Constant [ integer NULL_POINTER ] { 7 }
        Constant [ integer INVALID_STRING ] { 8 }
        Constant [ integer INVALID_PATH_DATA ] { 9 }
        Constant [ integer READ_ERROR ] { 10 }
        Constant [ integer WRITE_ERROR ] { 11 }
        Constant [ integer SURFACE_FINISHED ] { 12 }
        Constant [ integer SURFACE_TYPE_MISMATCH ] { 13 }
        Constant [ integer PATTERN_TYPE_MISMATCH ] { 14 }
        Constant [ integer INVALID_CONTENT ] { 15 }
        Constant [ integer INVALID_FORMAT ] { 16 }
        Constant [ integer INVALID_VISUAL ] { 17 }
        Constant [ integer FILE_NOT_FOUND ] { 18 }
        Constant [ integer INVALID_DASH ] { 19 }
        Constant [ integer INVALID_DSC_COMMENT ] { 20 }
        Constant [ integer INVALID_INDEX ] { 21 }
        Constant [ integer CLIP_NOT_REPRESENTABLE ] { 22 }
        Constant [ integer TEMP_FILE_ERROR ] { 23 }
        Constant [ integer INVALID_STRIDE ] { 24 }
        Constant [ integer FONT_TYPE_MISMATCH ] { 25 }
        Constant [ integer USER_FONT_IMMUTABLE ] { 26 }
        Constant [ integer USER_FONT_ERROR ] { 27 }
        Constant [ integer NEGATIVE_COUNT ] { 28 }
        Constant [ integer INVALID_CLUSTERS ] { 29 }
        Constant [ integer INVALID_SLANT ] { 30 }
        Constant [ integer INVALID_WEIGHT ] { 31 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> class CairoContext ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [98] {
        Method [ <internal:cairo, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $surface ]
          }
        }

        Method [ <internal:cairo> public method status ] {
        }

        Method [ <internal:cairo> public method save ] {
        }

        Method [ <internal:cairo> public method restore ] {
        }

        Method [ <internal:cairo> public method getTarget ] {
        }

        Method [ <internal:cairo> public method pushGroup ] {
        }

        Method [ <internal:cairo> public method pushGroupWithContent ] {

          - Parameters [1] {
            Parameter #0 [ <required> $content ]
          }
        }

        Method [ <internal:cairo> public method popGroup ] {
        }

        Method [ <internal:cairo> public method popGroupToSource ] {
        }

        Method [ <internal:cairo> public method getGroupTarget ] {
        }

        Method [ <internal:cairo> public method setSourceRGB ] {

          - Parameters [3] {
            Parameter #0 [ <required> $red ]
            Parameter #1 [ <required> $green ]
            Parameter #2 [ <required> $blue ]
          }
        }

        Method [ <internal:cairo> public method setSourceRGBA ] {

          - Parameters [4] {
            Parameter #0 [ <required> $red ]
            Parameter #1 [ <required> $green ]
            Parameter #2 [ <required> $blue ]
            Parameter #3 [ <required> $alpha ]
          }
        }

        Method [ <internal:cairo> public method setSource ] {

          - Parameters [1] {
            Parameter #0 [ <required> $pattern ]
          }
        }

        Method [ <internal:cairo> public method setSourceSurface ] {

          - Parameters [3] {
            Parameter #0 [ <required> $surface ]
            Parameter #1 [ <optional> $x ]
            Parameter #2 [ <optional> $y ]
          }
        }

        Method [ <internal:cairo> public method getSource ] {
        }

        Method [ <internal:cairo> public method setAntialias ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $antialias ]
          }
        }

        Method [ <internal:cairo> public method getAntialias ] {
        }

        Method [ <internal:cairo> public method setDash ] {

          - Parameters [2] {
            Parameter #0 [ <required> $dashes ]
            Parameter #1 [ <optional> $offset ]
          }
        }

        Method [ <internal:cairo> public method getDashCount ] {
        }

        Method [ <internal:cairo> public method getDash ] {
        }

        Method [ <internal:cairo> public method setFillRule ] {

          - Parameters [1] {
            Parameter #0 [ <required> $setting ]
          }
        }

        Method [ <internal:cairo> public method getFillRule ] {
        }

        Method [ <internal:cairo> public method setLineCap ] {

          - Parameters [1] {
            Parameter #0 [ <required> $setting ]
          }
        }

        Method [ <internal:cairo> public method getLineCap ] {
        }

        Method [ <internal:cairo> public method setLineJoin ] {

          - Parameters [1] {
            Parameter #0 [ <required> $setting ]
          }
        }

        Method [ <internal:cairo> public method getLineJoin ] {
        }

        Method [ <internal:cairo> public method setLineWidth ] {

          - Parameters [1] {
            Parameter #0 [ <required> $width ]
          }
        }

        Method [ <internal:cairo> public method getLineWidth ] {
        }

        Method [ <internal:cairo> public method setMiterLimit ] {

          - Parameters [1] {
            Parameter #0 [ <required> $limit ]
          }
        }

        Method [ <internal:cairo> public method getMiterLimit ] {
        }

        Method [ <internal:cairo> public method setOperator ] {

          - Parameters [1] {
            Parameter #0 [ <required> $setting ]
          }
        }

        Method [ <internal:cairo> public method getOperator ] {
        }

        Method [ <internal:cairo> public method setTolerance ] {

          - Parameters [1] {
            Parameter #0 [ <required> $tolerance ]
          }
        }

        Method [ <internal:cairo> public method getTolerance ] {
        }

        Method [ <internal:cairo> public method clip ] {
        }

        Method [ <internal:cairo> public method inClip ] {
        }

        Method [ <internal:cairo> public method clipPreserve ] {
        }

        Method [ <internal:cairo> public method resetClip ] {
        }

        Method [ <internal:cairo> public method clipExtents ] {
        }

        Method [ <internal:cairo> public method clipRectangleList ] {
        }

        Method [ <internal:cairo> public method fill ] {
        }

        Method [ <internal:cairo> public method fillPreserve ] {
        }

        Method [ <internal:cairo> public method fillExtents ] {
        }

        Method [ <internal:cairo> public method inFill ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo> public method mask ] {

          - Parameters [1] {
            Parameter #0 [ <required> $pattern ]
          }
        }

        Method [ <internal:cairo> public method maskSurface ] {

          - Parameters [3] {
            Parameter #0 [ <required> $surface ]
            Parameter #1 [ <optional> $x ]
            Parameter #2 [ <optional> $y ]
          }
        }

        Method [ <internal:cairo> public method paint ] {
        }

        Method [ <internal:cairo> public method paintWithAlpha ] {

          - Parameters [1] {
            Parameter #0 [ <required> $alpha ]
          }
        }

        Method [ <internal:cairo> public method stroke ] {
        }

        Method [ <internal:cairo> public method strokePreserve ] {
        }

        Method [ <internal:cairo> public method strokeExtents ] {
        }

        Method [ <internal:cairo> public method inStroke ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo> public method copyPage ] {
        }

        Method [ <internal:cairo> public method showPage ] {
        }

        Method [ <internal:cairo> public method translate ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo> public method scale ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo> public method rotate ] {

          - Parameters [1] {
            Parameter #0 [ <required> $angle ]
          }
        }

        Method [ <internal:cairo> public method transform ] {

          - Parameters [1] {
            Parameter #0 [ <required> $matrix ]
          }
        }

        Method [ <internal:cairo> public method setMatrix ] {

          - Parameters [1] {
            Parameter #0 [ <required> $matrix ]
          }
        }

        Method [ <internal:cairo> public method getMatrix ] {
        }

        Method [ <internal:cairo> public method identityMatrix ] {
        }

        Method [ <internal:cairo> public method userToDevice ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo> public method userToDeviceDistance ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo> public method deviceToUser ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo> public method deviceToUserDistance ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo> public method copyPath ] {
        }

        Method [ <internal:cairo> public method copyPathFlat ] {
        }

        Method [ <internal:cairo> public method appendPath ] {

          - Parameters [1] {
            Parameter #0 [ <required> $path ]
          }
        }

        Method [ <internal:cairo> public method hasCurrentPoint ] {
        }

        Method [ <internal:cairo> public method getCurrentPoint ] {
        }

        Method [ <internal:cairo> public method newPath ] {
        }

        Method [ <internal:cairo> public method newSubPath ] {
        }

        Method [ <internal:cairo> public method closePath ] {
        }

        Method [ <internal:cairo> public method arc ] {

          - Parameters [5] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $radius ]
            Parameter #3 [ <required> $angle1 ]
            Parameter #4 [ <required> $angle2 ]
          }
        }

        Method [ <internal:cairo> public method arcNegative ] {

          - Parameters [5] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $radius ]
            Parameter #3 [ <required> $angle1 ]
            Parameter #4 [ <required> $angle2 ]
          }
        }

        Method [ <internal:cairo> public method curveTo ] {

          - Parameters [6] {
            Parameter #0 [ <required> $x1 ]
            Parameter #1 [ <required> $y1 ]
            Parameter #2 [ <required> $x2 ]
            Parameter #3 [ <required> $y2 ]
            Parameter #4 [ <required> $x3 ]
            Parameter #5 [ <required> $y3 ]
          }
        }

        Method [ <internal:cairo> public method lineTo ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo> public method moveTo ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo> public method rectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo> public method glyphPath ] {

          - Parameters [1] {
            Parameter #0 [ <required> array $glyphs ]
          }
        }

        Method [ <internal:cairo> public method textPath ] {

          - Parameters [1] {
            Parameter #0 [ <required> $string ]
          }
        }

        Method [ <internal:cairo> public method relCurveTo ] {

          - Parameters [6] {
            Parameter #0 [ <required> $x1 ]
            Parameter #1 [ <required> $y1 ]
            Parameter #2 [ <required> $x2 ]
            Parameter #3 [ <required> $y2 ]
            Parameter #4 [ <required> $x3 ]
            Parameter #5 [ <required> $y3 ]
          }
        }

        Method [ <internal:cairo> public method relLineTo ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo> public method relMoveTo ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo> public method pathExtents ] {
        }

        Method [ <internal:cairo> public method selectFontFace ] {

          - Parameters [3] {
            Parameter #0 [ <required> $family ]
            Parameter #1 [ <optional> $slant ]
            Parameter #2 [ <optional> $weight ]
          }
        }

        Method [ <internal:cairo> public method setFontSize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $size ]
          }
        }

        Method [ <internal:cairo> public method setFontMatrix ] {

          - Parameters [1] {
            Parameter #0 [ <required> $matrix ]
          }
        }

        Method [ <internal:cairo> public method getFontMatrix ] {
        }

        Method [ <internal:cairo> public method setFontOptions ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fontoptions ]
          }
        }

        Method [ <internal:cairo> public method getFontOptions ] {
        }

        Method [ <internal:cairo> public method setFontFace ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fontface ]
          }
        }

        Method [ <internal:cairo> public method getFontFace ] {
        }

        Method [ <internal:cairo> public method setScaledFont ] {

          - Parameters [1] {
            Parameter #0 [ <required> $scaledfont ]
          }
        }

        Method [ <internal:cairo> public method getScaledFont ] {
        }

        Method [ <internal:cairo> public method showText ] {

          - Parameters [1] {
            Parameter #0 [ <required> $text ]
          }
        }

        Method [ <internal:cairo> public method fontExtents ] {
        }

        Method [ <internal:cairo> public method textExtents ] {

          - Parameters [1] {
            Parameter #0 [ <required> $text ]
          }
        }
      }
    }

    Class [ <internal:cairo> abstract final class CairoAntialias ] {

      - Constants [4] {
        Constant [ integer MODE_DEFAULT ] { 0 }
        Constant [ integer MODE_NONE ] { 1 }
        Constant [ integer MODE_GRAY ] { 2 }
        Constant [ integer MODE_SUBPIXEL ] { 3 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> abstract final class CairoSubpixelOrder ] {

      - Constants [5] {
        Constant [ integer ORDER_DEFAULT ] { 0 }
        Constant [ integer ORDER_RGB ] { 1 }
        Constant [ integer ORDER_BGR ] { 2 }
        Constant [ integer ORDER_VRGB ] { 3 }
        Constant [ integer ORDER_VBGR ] { 4 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> abstract final class CairoFillRule ] {

      - Constants [2] {
        Constant [ integer WINDING ] { 0 }
        Constant [ integer EVEN_ODD ] { 1 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> abstract final class CairoLineCap ] {

      - Constants [3] {
        Constant [ integer BUTT ] { 0 }
        Constant [ integer ROUND ] { 1 }
        Constant [ integer SQUARE ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> abstract final class CairoLineJoin ] {

      - Constants [3] {
        Constant [ integer MITER ] { 0 }
        Constant [ integer ROUND ] { 1 }
        Constant [ integer BEVEL ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> abstract final class CairoOperator ] {

      - Constants [29] {
        Constant [ integer CLEAR ] { 0 }
        Constant [ integer SOURCE ] { 1 }
        Constant [ integer OVER ] { 2 }
        Constant [ integer IN ] { 3 }
        Constant [ integer OUT ] { 4 }
        Constant [ integer ATOP ] { 5 }
        Constant [ integer DEST ] { 6 }
        Constant [ integer DEST_OVER ] { 7 }
        Constant [ integer DEST_IN ] { 8 }
        Constant [ integer DEST_OUT ] { 9 }
        Constant [ integer DEST_ATOP ] { 10 }
        Constant [ integer XOR ] { 11 }
        Constant [ integer ADD ] { 12 }
        Constant [ integer SATURATE ] { 13 }
        Constant [ integer MULTIPLY ] { 14 }
        Constant [ integer SCREEN ] { 15 }
        Constant [ integer OVERLAY ] { 16 }
        Constant [ integer DARKEN ] { 17 }
        Constant [ integer LIGHTEN ] { 18 }
        Constant [ integer COLOR_DODGE ] { 19 }
        Constant [ integer COLOR_BURN ] { 20 }
        Constant [ integer HARD_LIGHT ] { 21 }
        Constant [ integer SOFT_LIGHT ] { 22 }
        Constant [ integer DIFFERENCE ] { 23 }
        Constant [ integer EXCLUSION ] { 24 }
        Constant [ integer HSL_HUE ] { 25 }
        Constant [ integer HSL_SATURATION ] { 26 }
        Constant [ integer HSL_COLOR ] { 27 }
        Constant [ integer HSL_LUMINOSITY ] { 28 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> class CairoMatrix ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [5] {
        Method [ <internal:cairo> static public method initIdentity ] {
        }

        Method [ <internal:cairo> static public method initTranslate ] {

          - Parameters [2] {
            Parameter #0 [ <required> $tx ]
            Parameter #1 [ <required> $ty ]
          }
        }

        Method [ <internal:cairo> static public method initScale ] {

          - Parameters [2] {
            Parameter #0 [ <required> $sx ]
            Parameter #1 [ <required> $sy ]
          }
        }

        Method [ <internal:cairo> static public method initRotate ] {

          - Parameters [1] {
            Parameter #0 [ <required> $radians ]
          }
        }

        Method [ <internal:cairo> static public method multiply ] {

          - Parameters [2] {
            Parameter #0 [ <required> $matrix1 ]
            Parameter #1 [ <required> $matrix2 ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [7] {
        Method [ <internal:cairo, ctor> public method __construct ] {

          - Parameters [5] {
            Parameter #0 [ <optional> $yx ]
            Parameter #1 [ <optional> $xy ]
            Parameter #2 [ <optional> $yy ]
            Parameter #3 [ <optional> $x0 ]
            Parameter #4 [ <optional> $y0 ]
          }
        }

        Method [ <internal:cairo> public method translate ] {

          - Parameters [2] {
            Parameter #0 [ <required> $tx ]
            Parameter #1 [ <required> $ty ]
          }
        }

        Method [ <internal:cairo> public method scale ] {

          - Parameters [2] {
            Parameter #0 [ <required> $sx ]
            Parameter #1 [ <required> $sy ]
          }
        }

        Method [ <internal:cairo> public method rotate ] {

          - Parameters [2] {
            Parameter #0 [ <required> $sx ]
            Parameter #1 [ <required> $sy ]
          }
        }

        Method [ <internal:cairo> public method invert ] {
        }

        Method [ <internal:cairo> public method transformDistance ] {

          - Parameters [2] {
            Parameter #0 [ <required> $dx ]
            Parameter #1 [ <required> $dy ]
          }
        }

        Method [ <internal:cairo> public method transformPoint ] {

          - Parameters [2] {
            Parameter #0 [ <required> $dx ]
            Parameter #1 [ <required> $dy ]
          }
        }
      }
    }

    Class [ <internal:cairo> abstract class CairoPattern ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:cairo, ctor> public method __construct ] {
        }

        Method [ <internal:cairo> public method getType ] {
        }

        Method [ <internal:cairo> public method status ] {
        }

        Method [ <internal:cairo> public method getMatrix ] {
        }

        Method [ <internal:cairo> public method setMatrix ] {

          - Parameters [1] {
            Parameter #0 [ <required> $matrix ]
          }
        }
      }
    }

    Class [ <internal:cairo> abstract class CairoGradientPattern extends CairoPattern ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [11] {
        Method [ <internal:cairo> public method addColorStopRgb ] {

          - Parameters [4] {
            Parameter #0 [ <required> $offset ]
            Parameter #1 [ <required> $red ]
            Parameter #2 [ <required> $green ]
            Parameter #3 [ <required> $blue ]
          }
        }

        Method [ <internal:cairo> public method addColorStopRgba ] {

          - Parameters [5] {
            Parameter #0 [ <required> $offset ]
            Parameter #1 [ <required> $red ]
            Parameter #2 [ <required> $green ]
            Parameter #3 [ <required> $blue ]
            Parameter #4 [ <required> $alpha ]
          }
        }

        Method [ <internal:cairo> public method getColorStopRgba ] {

          - Parameters [1] {
            Parameter #0 [ <required> $index ]
          }
        }

        Method [ <internal:cairo> public method getColorStopCount ] {
        }

        Method [ <internal:cairo> public method getExtend ] {
        }

        Method [ <internal:cairo> public method setExtend ] {

          - Parameters [1] {
            Parameter #0 [ <required> $extend ]
          }
        }

        Method [ <internal:cairo, inherits CairoPattern, ctor> public method __construct ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method getType ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method status ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method getMatrix ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method setMatrix ] {

          - Parameters [1] {
            Parameter #0 [ <required> $matrix ]
          }
        }
      }
    }

    Class [ <internal:cairo> class CairoSolidPattern extends CairoPattern ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:cairo, overwrites CairoPattern, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> $red ]
            Parameter #1 [ <required> $green ]
            Parameter #2 [ <required> $blue ]
            Parameter #3 [ <optional> $alpha ]
          }
        }

        Method [ <internal:cairo> public method getRgba ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method getType ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method status ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method getMatrix ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method setMatrix ] {

          - Parameters [1] {
            Parameter #0 [ <required> $matrix ]
          }
        }
      }
    }

    Class [ <internal:cairo> class CairoSurfacePattern extends CairoPattern ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [10] {
        Method [ <internal:cairo, overwrites CairoPattern, ctor> public method __construct ] {

          - Parameters [1] {
            Parameter #0 [ <required> $surface ]
          }
        }

        Method [ <internal:cairo> public method getSurface ] {
        }

        Method [ <internal:cairo> public method setFilter ] {

          - Parameters [1] {
            Parameter #0 [ <required> $filter ]
          }
        }

        Method [ <internal:cairo> public method getFilter ] {
        }

        Method [ <internal:cairo> public method setExtend ] {

          - Parameters [1] {
            Parameter #0 [ <required> $extend ]
          }
        }

        Method [ <internal:cairo> public method getExtend ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method getType ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method status ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method getMatrix ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method setMatrix ] {

          - Parameters [1] {
            Parameter #0 [ <required> $matrix ]
          }
        }
      }
    }

    Class [ <internal:cairo> class CairoLinearGradient extends CairoGradientPattern ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [12] {
        Method [ <internal:cairo, overwrites CairoPattern, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x0 ]
            Parameter #1 [ <required> $y0 ]
            Parameter #2 [ <required> $x1 ]
            Parameter #3 [ <required> $y1 ]
          }
        }

        Method [ <internal:cairo> public method getPoints ] {
        }

        Method [ <internal:cairo, inherits CairoGradientPattern> public method addColorStopRgb ] {

          - Parameters [4] {
            Parameter #0 [ <required> $offset ]
            Parameter #1 [ <required> $red ]
            Parameter #2 [ <required> $green ]
            Parameter #3 [ <required> $blue ]
          }
        }

        Method [ <internal:cairo, inherits CairoGradientPattern> public method addColorStopRgba ] {

          - Parameters [5] {
            Parameter #0 [ <required> $offset ]
            Parameter #1 [ <required> $red ]
            Parameter #2 [ <required> $green ]
            Parameter #3 [ <required> $blue ]
            Parameter #4 [ <required> $alpha ]
          }
        }

        Method [ <internal:cairo, inherits CairoGradientPattern> public method getColorStopRgba ] {

          - Parameters [1] {
            Parameter #0 [ <required> $index ]
          }
        }

        Method [ <internal:cairo, inherits CairoGradientPattern> public method getColorStopCount ] {
        }

        Method [ <internal:cairo, inherits CairoGradientPattern> public method getExtend ] {
        }

        Method [ <internal:cairo, inherits CairoGradientPattern> public method setExtend ] {

          - Parameters [1] {
            Parameter #0 [ <required> $extend ]
          }
        }

        Method [ <internal:cairo, inherits CairoPattern> public method getType ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method status ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method getMatrix ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method setMatrix ] {

          - Parameters [1] {
            Parameter #0 [ <required> $matrix ]
          }
        }
      }
    }

    Class [ <internal:cairo> class CairoRadialGradient extends CairoGradientPattern ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [12] {
        Method [ <internal:cairo, overwrites CairoPattern, ctor> public method __construct ] {

          - Parameters [6] {
            Parameter #0 [ <required> $x0 ]
            Parameter #1 [ <required> $y0 ]
            Parameter #2 [ <required> $r0 ]
            Parameter #3 [ <required> $x1 ]
            Parameter #4 [ <required> $y1 ]
            Parameter #5 [ <required> $r1 ]
          }
        }

        Method [ <internal:cairo> public method getCircles ] {
        }

        Method [ <internal:cairo, inherits CairoGradientPattern> public method addColorStopRgb ] {

          - Parameters [4] {
            Parameter #0 [ <required> $offset ]
            Parameter #1 [ <required> $red ]
            Parameter #2 [ <required> $green ]
            Parameter #3 [ <required> $blue ]
          }
        }

        Method [ <internal:cairo, inherits CairoGradientPattern> public method addColorStopRgba ] {

          - Parameters [5] {
            Parameter #0 [ <required> $offset ]
            Parameter #1 [ <required> $red ]
            Parameter #2 [ <required> $green ]
            Parameter #3 [ <required> $blue ]
            Parameter #4 [ <required> $alpha ]
          }
        }

        Method [ <internal:cairo, inherits CairoGradientPattern> public method getColorStopRgba ] {

          - Parameters [1] {
            Parameter #0 [ <required> $index ]
          }
        }

        Method [ <internal:cairo, inherits CairoGradientPattern> public method getColorStopCount ] {
        }

        Method [ <internal:cairo, inherits CairoGradientPattern> public method getExtend ] {
        }

        Method [ <internal:cairo, inherits CairoGradientPattern> public method setExtend ] {

          - Parameters [1] {
            Parameter #0 [ <required> $extend ]
          }
        }

        Method [ <internal:cairo, inherits CairoPattern> public method getType ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method status ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method getMatrix ] {
        }

        Method [ <internal:cairo, inherits CairoPattern> public method setMatrix ] {

          - Parameters [1] {
            Parameter #0 [ <required> $matrix ]
          }
        }
      }
    }

    Class [ <internal:cairo> abstract final class CairoPatternType ] {

      - Constants [4] {
        Constant [ integer SOLID ] { 0 }
        Constant [ integer SURFACE ] { 1 }
        Constant [ integer LINEAR ] { 2 }
        Constant [ integer RADIAL ] { 3 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> abstract final class CairoExtend ] {

      - Constants [4] {
        Constant [ integer NONE ] { 0 }
        Constant [ integer REPEAT ] { 1 }
        Constant [ integer REFLECT ] { 2 }
        Constant [ integer PAD ] { 3 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> abstract final class CairoFilter ] {

      - Constants [6] {
        Constant [ integer FAST ] { 0 }
        Constant [ integer GOOD ] { 1 }
        Constant [ integer BEST ] { 2 }
        Constant [ integer NEAREST ] { 3 }
        Constant [ integer BILINEAR ] { 4 }
        Constant [ integer GAUSSIAN ] { 5 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> class CairoPath ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> class CairoFontOptions ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [13] {
        Method [ <internal:cairo, ctor> public method __construct ] {
        }

        Method [ <internal:cairo> public method status ] {
        }

        Method [ <internal:cairo> public method merge ] {

          - Parameters [1] {
            Parameter #0 [ <required> $other ]
          }
        }

        Method [ <internal:cairo> public method hash ] {
        }

        Method [ <internal:cairo> public method equal ] {

          - Parameters [1] {
            Parameter #0 [ <required> $other ]
          }
        }

        Method [ <internal:cairo> public method setAntialias ] {

          - Parameters [1] {
            Parameter #0 [ <required> $antialias ]
          }
        }

        Method [ <internal:cairo> public method getAntialias ] {
        }

        Method [ <internal:cairo> public method setSubpixelOrder ] {

          - Parameters [1] {
            Parameter #0 [ <required> $subpixel_order ]
          }
        }

        Method [ <internal:cairo> public method getSubpixelOrder ] {
        }

        Method [ <internal:cairo> public method setHintStyle ] {

          - Parameters [1] {
            Parameter #0 [ <required> $hint_style ]
          }
        }

        Method [ <internal:cairo> public method getHintStyle ] {
        }

        Method [ <internal:cairo> public method setHintMetrics ] {

          - Parameters [1] {
            Parameter #0 [ <required> $hint_metrics ]
          }
        }

        Method [ <internal:cairo> public method getHintMetrics ] {
        }
      }
    }

    Class [ <internal:cairo> abstract final class CairoHintStyle ] {

      - Constants [5] {
        Constant [ integer STYLE_DEFAULT ] { 0 }
        Constant [ integer STYLE_NONE ] { 1 }
        Constant [ integer STYLE_SLIGHT ] { 2 }
        Constant [ integer STYLE_MEDIUM ] { 3 }
        Constant [ integer STYLE_FULL ] { 4 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> abstract final class CairoHintMetrics ] {

      - Constants [3] {
        Constant [ integer METRICS_DEFAULT ] { 0 }
        Constant [ integer METRICS_OFF ] { 1 }
        Constant [ integer METRICS_ON ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> abstract class CairoFontFace ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [3] {
        Method [ <internal:cairo, ctor> public method __construct ] {
        }

        Method [ <internal:cairo> public method status ] {
        }

        Method [ <internal:cairo> public method getType ] {
        }
      }
    }

    Class [ <internal:cairo> abstract final class CairoFontType ] {

      - Constants [5] {
        Constant [ integer TOY ] { 0 }
        Constant [ integer FT ] { 1 }
        Constant [ integer WIN32 ] { 2 }
        Constant [ integer QUARTZ ] { 3 }
        Constant [ integer USER ] { 4 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> class CairoScaledFont ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [11] {
        Method [ <internal:cairo, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> $font_face ]
            Parameter #1 [ <optional> $matrix ]
            Parameter #2 [ <optional> $ctm ]
            Parameter #3 [ <optional> $options ]
          }
        }

        Method [ <internal:cairo> public method status ] {
        }

        Method [ <internal:cairo> public method extents ] {
        }

        Method [ <internal:cairo> public method textExtents ] {

          - Parameters [1] {
            Parameter #0 [ <required> $text ]
          }
        }

        Method [ <internal:cairo> public method glyphExtents ] {

          - Parameters [1] {
            Parameter #0 [ <required> $glyphs ]
          }
        }

        Method [ <internal:cairo> public method getFontFace ] {
        }

        Method [ <internal:cairo> public method getFontOptions ] {
        }

        Method [ <internal:cairo> public method getFontMatrix ] {
        }

        Method [ <internal:cairo> public method getCtm ] {
        }

        Method [ <internal:cairo> public method getScaleMatrix ] {
        }

        Method [ <internal:cairo> public method getType ] {
        }
      }
    }

    Class [ <internal:cairo> class CairoToyFontFace extends CairoFontFace ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:cairo, overwrites CairoFontFace, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> $family ]
            Parameter #1 [ <optional> $slant ]
            Parameter #2 [ <optional> $weight ]
          }
        }

        Method [ <internal:cairo> public method getFamily ] {
        }

        Method [ <internal:cairo> public method getSlant ] {
        }

        Method [ <internal:cairo> public method getWeight ] {
        }

        Method [ <internal:cairo, inherits CairoFontFace> public method status ] {
        }

        Method [ <internal:cairo, inherits CairoFontFace> public method getType ] {
        }
      }
    }

    Class [ <internal:cairo> abstract final class CairoFontSlant ] {

      - Constants [3] {
        Constant [ integer NORMAL ] { 0 }
        Constant [ integer ITALIC ] { 1 }
        Constant [ integer OBLIQUE ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> abstract final class CairoFontWeight ] {

      - Constants [2] {
        Constant [ integer NORMAL ] { 0 }
        Constant [ integer BOLD ] { 1 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> class CairoFtFontFace extends CairoFontFace ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [3] {
        Method [ <internal:cairo, overwrites CairoFontFace, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> $face ]
            Parameter #1 [ <optional> $load_flags ]
          }
        }

        Method [ <internal:cairo, inherits CairoFontFace> public method status ] {
        }

        Method [ <internal:cairo, inherits CairoFontFace> public method getType ] {
        }
      }
    }

    Class [ <internal:cairo> abstract class CairoSurface ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [19] {
        Method [ <internal:cairo, ctor> public method __construct ] {
        }

        Method [ <internal:cairo> public method createSimilar ] {

          - Parameters [3] {
            Parameter #0 [ <required> $content ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <required> $height ]
          }
        }

        Method [ <internal:cairo> public method createForRectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo> public method status ] {
        }

        Method [ <internal:cairo> public method finish ] {
        }

        Method [ <internal:cairo> public method flush ] {
        }

        Method [ <internal:cairo> public method getFontOptions ] {
        }

        Method [ <internal:cairo> public method getContent ] {
        }

        Method [ <internal:cairo> public method markDirty ] {
        }

        Method [ <internal:cairo> public method markDirtyRectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo> public method setDeviceOffset ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo> public method getDeviceOffset ] {
        }

        Method [ <internal:cairo> public method setFallbackResolution ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo> public method getFallbackResolution ] {
        }

        Method [ <internal:cairo> public method getType ] {
        }

        Method [ <internal:cairo> public method copyPage ] {
        }

        Method [ <internal:cairo> public method showPage ] {
        }

        Method [ <internal:cairo> public method hasShowTextGlyphs ] {
        }

        Method [ <internal:cairo> public method writeToPng ] {

          - Parameters [1] {
            Parameter #0 [ <required> $file ]
          }
        }
      }
    }

    Class [ <internal:cairo> abstract final class CairoContent ] {

      - Constants [3] {
        Constant [ integer COLOR ] { 4096 }
        Constant [ integer ALPHA ] { 8192 }
        Constant [ integer COLOR_ALPHA ] { 12288 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> abstract final class CairoSurfaceType ] {

      - Constants [14] {
        Constant [ integer IMAGE ] { 0 }
        Constant [ integer PDF ] { 1 }
        Constant [ integer PS ] { 2 }
        Constant [ integer XLIB ] { 3 }
        Constant [ integer XCB ] { 4 }
        Constant [ integer GLITZ ] { 5 }
        Constant [ integer QUARTZ ] { 6 }
        Constant [ integer WIN32 ] { 7 }
        Constant [ integer BEOS ] { 8 }
        Constant [ integer DIRECTFB ] { 9 }
        Constant [ integer SVG ] { 10 }
        Constant [ integer OS2 ] { 11 }
        Constant [ integer WIN32_PRINTING ] { 12 }
        Constant [ integer QUARTZ_IMAGE ] { 13 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> class CairoImageSurface extends CairoSurface ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [2] {
        Method [ <internal:cairo> static public method createForData ] {

          - Parameters [4] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <required> $format ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo> static public method createFromPng ] {

          - Parameters [1] {
            Parameter #0 [ <required> $file ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [24] {
        Method [ <internal:cairo, overwrites CairoSurface, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> $format ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <required> $height ]
          }
        }

        Method [ <internal:cairo> public method getData ] {
        }

        Method [ <internal:cairo> public method getFormat ] {
        }

        Method [ <internal:cairo> public method getWidth ] {
        }

        Method [ <internal:cairo> public method getHeight ] {
        }

        Method [ <internal:cairo> public method getStride ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method createSimilar ] {

          - Parameters [3] {
            Parameter #0 [ <required> $content ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method createForRectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method status ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method finish ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method flush ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getFontOptions ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getContent ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method markDirty ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method markDirtyRectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method setDeviceOffset ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getDeviceOffset ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method setFallbackResolution ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getFallbackResolution ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getType ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method copyPage ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method showPage ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method hasShowTextGlyphs ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method writeToPng ] {

          - Parameters [1] {
            Parameter #0 [ <required> $file ]
          }
        }
      }
    }

    Class [ <internal:cairo> abstract final class CairoFormat ] {

      - Constants [4] {
        Constant [ integer ARGB32 ] { 0 }
        Constant [ integer RGB24 ] { 1 }
        Constant [ integer A8 ] { 2 }
        Constant [ integer A1 ] { 3 }
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:cairo> static public method strideForWidth ] {

          - Parameters [2] {
            Parameter #0 [ <required> $format ]
            Parameter #1 [ <required> $width ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> class CairoPdfSurface extends CairoSurface ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [20] {
        Method [ <internal:cairo, overwrites CairoSurface, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> $file ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <required> $height ]
          }
        }

        Method [ <internal:cairo> public method setSize ] {

          - Parameters [2] {
            Parameter #0 [ <required> $width ]
            Parameter #1 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method createSimilar ] {

          - Parameters [3] {
            Parameter #0 [ <required> $content ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method createForRectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method status ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method finish ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method flush ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getFontOptions ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getContent ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method markDirty ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method markDirtyRectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method setDeviceOffset ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getDeviceOffset ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method setFallbackResolution ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getFallbackResolution ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getType ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method copyPage ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method showPage ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method hasShowTextGlyphs ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method writeToPng ] {

          - Parameters [1] {
            Parameter #0 [ <required> $file ]
          }
        }
      }
    }

    Class [ <internal:cairo> class CairoPsSurface extends CairoSurface ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [2] {
        Method [ <internal:cairo> static public method getLevels ] {
        }

        Method [ <internal:cairo> static public method levelToString ] {

          - Parameters [1] {
            Parameter #0 [ <required> $level ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [26] {
        Method [ <internal:cairo, overwrites CairoSurface, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> $file ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <required> $height ]
          }
        }

        Method [ <internal:cairo> public method setSize ] {

          - Parameters [2] {
            Parameter #0 [ <required> $width ]
            Parameter #1 [ <required> $height ]
          }
        }

        Method [ <internal:cairo> public method restrictToLevel ] {

          - Parameters [1] {
            Parameter #0 [ <required> $level ]
          }
        }

        Method [ <internal:cairo> public method setEps ] {

          - Parameters [1] {
            Parameter #0 [ <required> $level ]
          }
        }

        Method [ <internal:cairo> public method getEps ] {
        }

        Method [ <internal:cairo> public method dscBeginSetup ] {
        }

        Method [ <internal:cairo> public method dscBeginPageSetup ] {
        }

        Method [ <internal:cairo> public method dscComment ] {

          - Parameters [1] {
            Parameter #0 [ <required> $comment ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method createSimilar ] {

          - Parameters [3] {
            Parameter #0 [ <required> $content ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method createForRectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method status ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method finish ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method flush ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getFontOptions ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getContent ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method markDirty ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method markDirtyRectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method setDeviceOffset ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getDeviceOffset ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method setFallbackResolution ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getFallbackResolution ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getType ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method copyPage ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method showPage ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method hasShowTextGlyphs ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method writeToPng ] {

          - Parameters [1] {
            Parameter #0 [ <required> $file ]
          }
        }
      }
    }

    Class [ <internal:cairo> abstract final class CairoPsLevel ] {

      - Constants [2] {
        Constant [ integer LEVEL_2 ] { 0 }
        Constant [ integer LEVEL_3 ] { 1 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> class CairoSvgSurface extends CairoSurface ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [2] {
        Method [ <internal:cairo> static public method versionToString ] {

          - Parameters [1] {
            Parameter #0 [ <required> $version ]
          }
        }

        Method [ <internal:cairo> static public method getVersions ] {
        }
      }

      - Properties [0] {
      }

      - Methods [20] {
        Method [ <internal:cairo, overwrites CairoSurface, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> $file ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <required> $height ]
          }
        }

        Method [ <internal:cairo> public method restrictToVersion ] {

          - Parameters [1] {
            Parameter #0 [ <required> $version ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method createSimilar ] {

          - Parameters [3] {
            Parameter #0 [ <required> $content ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method createForRectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method status ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method finish ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method flush ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getFontOptions ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getContent ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method markDirty ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method markDirtyRectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method setDeviceOffset ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getDeviceOffset ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method setFallbackResolution ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getFallbackResolution ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getType ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method copyPage ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method showPage ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method hasShowTextGlyphs ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method writeToPng ] {

          - Parameters [1] {
            Parameter #0 [ <required> $file ]
          }
        }
      }
    }

    Class [ <internal:cairo> abstract final class CairoSvgVersion ] {

      - Constants [2] {
        Constant [ integer VERSION_1_1 ] { 0 }
        Constant [ integer VERSION_1_2 ] { 1 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:cairo> class CairoRecordingSurface extends CairoSurface ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [20] {
        Method [ <internal:cairo, overwrites CairoSurface, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> $content ]
            Parameter #1 [ <required> $extents ]
          }
        }

        Method [ <internal:cairo> public method inkExtents ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method createSimilar ] {

          - Parameters [3] {
            Parameter #0 [ <required> $content ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method createForRectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method status ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method finish ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method flush ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getFontOptions ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getContent ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method markDirty ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method markDirtyRectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method setDeviceOffset ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getDeviceOffset ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method setFallbackResolution ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getFallbackResolution ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getType ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method copyPage ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method showPage ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method hasShowTextGlyphs ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method writeToPng ] {

          - Parameters [1] {
            Parameter #0 [ <required> $file ]
          }
        }
      }
    }

    Class [ <internal:cairo> class CairoSubSurface extends CairoSurface ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [19] {
        Method [ <internal:cairo, overwrites CairoSurface, ctor> public method __construct ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method createSimilar ] {

          - Parameters [3] {
            Parameter #0 [ <required> $content ]
            Parameter #1 [ <required> $width ]
            Parameter #2 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method createForRectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method status ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method finish ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method flush ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getFontOptions ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getContent ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method markDirty ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method markDirtyRectangle ] {

          - Parameters [4] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
            Parameter #2 [ <required> $width ]
            Parameter #3 [ <required> $height ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method setDeviceOffset ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getDeviceOffset ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method setFallbackResolution ] {

          - Parameters [2] {
            Parameter #0 [ <required> $x ]
            Parameter #1 [ <required> $y ]
          }
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getFallbackResolution ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method getType ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method copyPage ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method showPage ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method hasShowTextGlyphs ] {
        }

        Method [ <internal:cairo, inherits CairoSurface> public method writeToPng ] {

          - Parameters [1] {
            Parameter #0 [ <required> $file ]
          }
        }
      }
    }
  }
}

