Extension [ <persistent> extension #142 swoole version 1.7.4 ] {

  - INI {
    Entry [ swoole.task_worker_num <ALL> ]
      Current = '0'
    }
    Entry [ swoole.task_ipc_mode <ALL> ]
      Current = '0'
    }
    Entry [ swoole.task_auto_start <ALL> ]
      Current = '0'
    }
    Entry [ swoole.message_queue_key <ALL> ]
      Current = '0'
    }
    Entry [ swoole.unixsock_buffer_size <ALL> ]
      Current = '8388608'
    }
  }

  - Constants [36] {
    Constant [ integer SWOOLE_BASE ] { 4 }
    Constant [ integer SWOOLE_THREAD ] { 2 }
    Constant [ integer SWOOLE_PROCESS ] { 3 }
    Constant [ integer SWOOLE_IPC_UNSOCK ] { 1 }
    Constant [ integer SWOOLE_IPC_MSGQUEUE ] { 2 }
    Constant [ integer SWOOLE_IPC_CHANNEL ] { 3 }
    Constant [ integer SWOOLE_SOCK_TCP ] { 1 }
    Constant [ integer SWOOLE_SOCK_TCP6 ] { 3 }
    Constant [ integer SWOOLE_SOCK_UDP ] { 2 }
    Constant [ integer SWOOLE_SOCK_UDP6 ] { 4 }
    Constant [ integer SWOOLE_TCP ] { 1 }
    Constant [ integer SWOOLE_TCP6 ] { 3 }
    Constant [ integer SWOOLE_UDP ] { 2 }
    Constant [ integer SWOOLE_UDP6 ] { 4 }
    Constant [ integer SWOOLE_UNIX_DGRAM ] { 5 }
    Constant [ integer SWOOLE_UNIX_STREAM ] { 6 }
    Constant [ integer SWOOLE_RWLOCK ] { 1 }
    Constant [ integer SWOOLE_FILELOCK ] { 2 }
    Constant [ integer SWOOLE_MUTEX ] { 3 }
    Constant [ integer SWOOLE_SEM ] { 4 }
    Constant [ integer SWOOLE_SPINLOCK ] { 5 }
    Constant [ integer SWOOLE_SOCK_SYNC ] { 0 }
    Constant [ integer SWOOLE_SOCK_ASYNC ] { 1 }
    Constant [ integer SWOOLE_SYNC ] { 2048 }
    Constant [ integer SWOOLE_ASYNC ] { 1024 }
    Constant [ integer SWOOLE_KEEP ] { 512 }
    Constant [ integer SWOOLE_SSL ] { 512 }
    Constant [ integer SWOOLE_EVENT_READ ] { 512 }
    Constant [ integer SWOOLE_EVENT_WRITE ] { 1024 }
    Constant [ integer SWOOLE_SIGN ] { 64 }
    Constant [ integer SWOOLE_UNSIGN ] { 32 }
    Constant [ integer SWOOLE_NET ] { 8 }
    Constant [ integer SWOOLE_HOST ] { 16 }
    Constant [ integer SWOOLE_SHORT ] { 2 }
    Constant [ integer SWOOLE_INT ] { 4 }
    Constant [ string SWOOLE_VERSION ] { 1.7.4 }
  }

  - Functions {
    Function [ <internal:swoole> function swoole_version ] {
    }
    Function [ <internal:swoole> function swoole_server_create ] {

      - Parameters [4] {
        Parameter #0 [ <required> $serv_host ]
        Parameter #1 [ <required> $serv_port ]
        Parameter #2 [ <optional> $serv_mode ]
        Parameter #3 [ <optional> $sock_type ]
      }
    }
    Function [ <internal:swoole> function swoole_server_set ] {

      - Parameters [2] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $zset ]
      }
    }
    Function [ <internal:swoole> function swoole_server_start ] {

      - Parameters [1] {
        Parameter #0 [ <required> swoole_server $zobject ]
      }
    }
    Function [ <internal:swoole> function swoole_server_send ] {

      - Parameters [4] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $conn_fd ]
        Parameter #2 [ <required> $send_data ]
        Parameter #3 [ <optional> $from_id ]
      }
    }
    Function [ <internal:swoole> function swoole_server_sendfile ] {

      - Parameters [3] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $conn_fd ]
        Parameter #2 [ <required> $filename ]
      }
    }
    Function [ <internal:swoole> function swoole_server_close ] {

      - Parameters [2] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $fd ]
      }
    }
    Function [ <internal:swoole> function swoole_server_handler ] {

      - Parameters [3] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $ha_name ]
        Parameter #2 [ <required> $cb ]
      }
    }
    Function [ <internal:swoole> function swoole_server_on ] {

      - Parameters [3] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $ha_name ]
        Parameter #2 [ <required> $cb ]
      }
    }
    Function [ <internal:swoole> function swoole_server_addlisten ] {

      - Parameters [4] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $host ]
        Parameter #2 [ <required> $port ]
        Parameter #3 [ <required> $sock_type ]
      }
    }
    Function [ <internal:swoole> function swoole_server_addtimer ] {

      - Parameters [2] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $interval ]
      }
    }
    Function [ <internal:swoole> function swoole_server_deltimer ] {

      - Parameters [2] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $interval ]
      }
    }
    Function [ <internal:swoole> function swoole_server_task ] {

      - Parameters [3] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $data ]
        Parameter #2 [ <optional> $worker_id ]
      }
    }
    Function [ <internal:swoole> function swoole_server_taskwait ] {

      - Parameters [4] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $data ]
        Parameter #2 [ <optional> $timeout ]
        Parameter #3 [ <optional> $worker_id ]
      }
    }
    Function [ <internal:swoole> function swoole_server_finish ] {

      - Parameters [2] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $data ]
      }
    }
    Function [ <internal:swoole> function swoole_server_reload ] {

      - Parameters [1] {
        Parameter #0 [ <required> swoole_server $zobject ]
      }
    }
    Function [ <internal:swoole> function swoole_server_shutdown ] {

      - Parameters [1] {
        Parameter #0 [ <required> swoole_server $zobject ]
      }
    }
    Function [ <internal:swoole> function swoole_server_heartbeat ] {

      - Parameters [2] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $from_id ]
      }
    }
    Function [ <internal:swoole> function swoole_connection_info ] {

      - Parameters [3] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $fd ]
        Parameter #2 [ <optional> $from_id ]
      }
    }
    Function [ <internal:swoole> function swoole_connection_list ] {

      - Parameters [3] {
        Parameter #0 [ <required> swoole_server $zobject ]
        Parameter #1 [ <required> $start_fd ]
        Parameter #2 [ <required> $find_count ]
      }
    }
    Function [ <internal:swoole> function swoole_event_add ] {

      - Parameters [2] {
        Parameter #0 [ <required> $fd ]
        Parameter #1 [ <required> $cb ]
      }
    }
    Function [ <internal:swoole> function swoole_event_set ] {
    }
    Function [ <internal:swoole> function swoole_event_del ] {

      - Parameters [1] {
        Parameter #0 [ <required> $fd ]
      }
    }
    Function [ <internal:swoole> function swoole_event_exit ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:swoole> function swoole_event_wait ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:swoole> function swoole_timer_add ] {

      - Parameters [2] {
        Parameter #0 [ <required> $interval ]
        Parameter #1 [ <required> $cb ]
      }
    }
    Function [ <internal:swoole> function swoole_timer_del ] {

      - Parameters [1] {
        Parameter #0 [ <required> $interval ]
      }
    }
    Function [ <internal:swoole> function swoole_async_read ] {
    }
    Function [ <internal:swoole> function swoole_async_write ] {
    }
    Function [ <internal:swoole> function swoole_async_readfile ] {
    }
    Function [ <internal:swoole> function swoole_async_writefile ] {
    }
    Function [ <internal:swoole> function swoole_async_dns_lookup ] {
    }
    Function [ <internal:swoole> function swoole_client_select ] {
    }
    Function [ <internal:swoole> function swoole_set_process_name ] {
    }
    Function [ <internal:swoole> function swoole_get_local_ip ] {
    }
    Function [ <internal:swoole> function swoole_strerror ] {
    }
    Function [ <internal:swoole> function swoole_errno ] {
    }
    Function [ <internal:swoole> function swoole_get_mysqli_sock ] {
    }
  }

  - Classes [4] {
    Class [ <internal:swoole> class swoole_client ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [2] {
        Property [ <default> public $errCode ]
        Property [ <default> public $sock ]
      }

      - Methods [6] {
        Method [ <internal:swoole, ctor> public method __construct ] {
        }

        Method [ <internal:swoole> public method connect ] {
        }

        Method [ <internal:swoole> public method recv ] {
        }

        Method [ <internal:swoole> public method send ] {
        }

        Method [ <internal:swoole> public method close ] {
        }

        Method [ <internal:swoole> public method on ] {
        }
      }
    }

    Class [ <internal:swoole> class swoole_server ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [20] {
        Method [ <internal:swoole, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> $serv_host ]
            Parameter #1 [ <required> $serv_port ]
            Parameter #2 [ <optional> $serv_mode ]
            Parameter #3 [ <optional> $sock_type ]
          }
        }

        Method [ <internal:swoole> public method set ] {

          - Parameters [1] {
            Parameter #0 [ <required> $zset ]
          }
        }

        Method [ <internal:swoole> public method start ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method send ] {

          - Parameters [3] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $send_data ]
            Parameter #2 [ <optional> $from_id ]
          }
        }

        Method [ <internal:swoole> public method sendfile ] {

          - Parameters [2] {
            Parameter #0 [ <required> $conn_fd ]
            Parameter #1 [ <required> $filename ]
          }
        }

        Method [ <internal:swoole> public method close ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fd ]
          }
        }

        Method [ <internal:swoole> public method task ] {

          - Parameters [2] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <required> $worker_id ]
          }
        }

        Method [ <internal:swoole> public method taskwait ] {

          - Parameters [3] {
            Parameter #0 [ <required> $data ]
            Parameter #1 [ <optional> $timeout ]
            Parameter #2 [ <optional> $worker_id ]
          }
        }

        Method [ <internal:swoole> public method finish ] {

          - Parameters [1] {
            Parameter #0 [ <required> $data ]
          }
        }

        Method [ <internal:swoole> public method addlistener ] {

          - Parameters [3] {
            Parameter #0 [ <required> $host ]
            Parameter #1 [ <required> $port ]
            Parameter #2 [ <required> $sock_type ]
          }
        }

        Method [ <internal:swoole> public method addtimer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $interval ]
          }
        }

        Method [ <internal:swoole> public method deltimer ] {

          - Parameters [1] {
            Parameter #0 [ <required> $interval ]
          }
        }

        Method [ <internal:swoole> public method reload ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method shutdown ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:swoole> public method hbcheck ] {

          - Parameters [1] {
            Parameter #0 [ <required> $from_id ]
          }
        }

        Method [ <internal:swoole> public method heartbeat ] {

          - Parameters [1] {
            Parameter #0 [ <required> $from_id ]
          }
        }

        Method [ <internal:swoole> public method handler ] {

          - Parameters [2] {
            Parameter #0 [ <required> $ha_name ]
            Parameter #1 [ <required> $cb ]
          }
        }

        Method [ <internal:swoole> public method on ] {

          - Parameters [2] {
            Parameter #0 [ <required> $ha_name ]
            Parameter #1 [ <required> $cb ]
          }
        }

        Method [ <internal:swoole> public method connection_info ] {

          - Parameters [2] {
            Parameter #0 [ <required> $fd ]
            Parameter #1 [ <required> $from_id ]
          }
        }

        Method [ <internal:swoole> public method connection_list ] {

          - Parameters [2] {
            Parameter #0 [ <required> $start_fd ]
            Parameter #1 [ <required> $find_count ]
          }
        }
      }
    }

    Class [ <internal:swoole> class swoole_lock ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:swoole, ctor> public method __construct ] {
        }

        Method [ <internal:swoole> public method lock ] {
        }

        Method [ <internal:swoole> public method trylock ] {
        }

        Method [ <internal:swoole> public method lock_read ] {
        }

        Method [ <internal:swoole> public method trylock_read ] {
        }

        Method [ <internal:swoole> public method unlock ] {
        }
      }
    }

    Class [ <internal:swoole> class swoole_process ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [2] {
        Method [ <internal:swoole> static public method wait ] {
        }

        Method [ <internal:swoole> static public method kill ] {
        }
      }

      - Properties [0] {
      }

      - Methods [6] {
        Method [ <internal:swoole, ctor> public method __construct ] {
        }

        Method [ <internal:swoole> public method start ] {
        }

        Method [ <internal:swoole> public method write ] {
        }

        Method [ <internal:swoole> public method read ] {
        }

        Method [ <internal:swoole> public method exit ] {
        }

        Method [ <internal:swoole> public method exec ] {
        }
      }
    }
  }
}

