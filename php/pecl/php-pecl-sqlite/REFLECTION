Extension [ <persistent> extension #130 SQLite version 2.0-dev ] {

  - Dependencies {
    Dependency [ spl (Required) ]
    Dependency [ session (Required) ]
    Dependency [ pdo (Required) ]
  }

  - INI {
    Entry [ sqlite.assoc_case <ALL> ]
      Current = '0'
    }
  }

  - Constants [31] {
    Constant [ integer SQLITE_BOTH ] { 3 }
    Constant [ integer SQLITE_NUM ] { 2 }
    Constant [ integer SQLITE_ASSOC ] { 1 }
    Constant [ integer SQLITE_OK ] { 0 }
    Constant [ integer SQLITE_ERROR ] { 1 }
    Constant [ integer SQLITE_INTERNAL ] { 2 }
    Constant [ integer SQLITE_PERM ] { 3 }
    Constant [ integer SQLITE_ABORT ] { 4 }
    Constant [ integer SQLITE_BUSY ] { 5 }
    Constant [ integer SQLITE_LOCKED ] { 6 }
    Constant [ integer SQLITE_NOMEM ] { 7 }
    Constant [ integer SQLITE_READONLY ] { 8 }
    Constant [ integer SQLITE_INTERRUPT ] { 9 }
    Constant [ integer SQLITE_IOERR ] { 10 }
    Constant [ integer SQLITE_CORRUPT ] { 11 }
    Constant [ integer SQLITE_NOTFOUND ] { 12 }
    Constant [ integer SQLITE_FULL ] { 13 }
    Constant [ integer SQLITE_CANTOPEN ] { 14 }
    Constant [ integer SQLITE_PROTOCOL ] { 15 }
    Constant [ integer SQLITE_EMPTY ] { 16 }
    Constant [ integer SQLITE_SCHEMA ] { 17 }
    Constant [ integer SQLITE_TOOBIG ] { 18 }
    Constant [ integer SQLITE_CONSTRAINT ] { 19 }
    Constant [ integer SQLITE_MISMATCH ] { 20 }
    Constant [ integer SQLITE_MISUSE ] { 21 }
    Constant [ integer SQLITE_NOLFS ] { 22 }
    Constant [ integer SQLITE_AUTH ] { 23 }
    Constant [ integer SQLITE_NOTADB ] { 26 }
    Constant [ integer SQLITE_FORMAT ] { 24 }
    Constant [ integer SQLITE_ROW ] { 100 }
    Constant [ integer SQLITE_DONE ] { 101 }
  }

  - Functions {
    Function [ <internal:SQLite> function sqlite_open ] {

      - Parameters [3] {
        Parameter #0 [ <required> $filename ]
        Parameter #1 [ <optional> $mode ]
        Parameter #2 [ <optional> &$error_message ]
      }
    }
    Function [ <internal:SQLite> function sqlite_popen ] {

      - Parameters [3] {
        Parameter #0 [ <required> $filename ]
        Parameter #1 [ <optional> $mode ]
        Parameter #2 [ <optional> &$error_message ]
      }
    }
    Function [ <internal:SQLite> function sqlite_close ] {

      - Parameters [1] {
        Parameter #0 [ <required> $db ]
      }
    }
    Function [ <internal:SQLite> function sqlite_query ] {

      - Parameters [4] {
        Parameter #0 [ <required> $query ]
        Parameter #1 [ <required> $db ]
        Parameter #2 [ <optional> $result_type ]
        Parameter #3 [ <optional> &$error_message ]
      }
    }
    Function [ <internal:SQLite> function sqlite_exec ] {

      - Parameters [3] {
        Parameter #0 [ <required> $query ]
        Parameter #1 [ <required> $db ]
        Parameter #2 [ <optional> &$error_message ]
      }
    }
    Function [ <internal:SQLite> function sqlite_array_query ] {

      - Parameters [4] {
        Parameter #0 [ <required> $db ]
        Parameter #1 [ <required> $query ]
        Parameter #2 [ <optional> $result_type ]
        Parameter #3 [ <optional> $decode_binary ]
      }
    }
    Function [ <internal:SQLite> function sqlite_single_query ] {

      - Parameters [4] {
        Parameter #0 [ <required> $db ]
        Parameter #1 [ <required> $query ]
        Parameter #2 [ <optional> $first_row_only ]
        Parameter #3 [ <optional> $decode_binary ]
      }
    }
    Function [ <internal:SQLite> function sqlite_fetch_array ] {

      - Parameters [3] {
        Parameter #0 [ <required> $result ]
        Parameter #1 [ <optional> $result_type ]
        Parameter #2 [ <optional> $decode_binary ]
      }
    }
    Function [ <internal:SQLite> function sqlite_fetch_object ] {

      - Parameters [4] {
        Parameter #0 [ <required> $result ]
        Parameter #1 [ <optional> $class_name ]
        Parameter #2 [ <optional> $ctor_params ]
        Parameter #3 [ <optional> $decode_binary ]
      }
    }
    Function [ <internal:SQLite> function sqlite_fetch_single ] {

      - Parameters [2] {
        Parameter #0 [ <required> $result ]
        Parameter #1 [ <optional> $decode_binary ]
      }
    }
    Function [ <internal:SQLite> function sqlite_fetch_string ] {

      - Parameters [2] {
        Parameter #0 [ <required> $result ]
        Parameter #1 [ <optional> $decode_binary ]
      }
    }
    Function [ <internal:SQLite> function sqlite_fetch_all ] {

      - Parameters [3] {
        Parameter #0 [ <required> $result ]
        Parameter #1 [ <optional> $result_type ]
        Parameter #2 [ <optional> $decode_binary ]
      }
    }
    Function [ <internal:SQLite> function sqlite_current ] {

      - Parameters [3] {
        Parameter #0 [ <required> $result ]
        Parameter #1 [ <optional> $result_type ]
        Parameter #2 [ <optional> $decode_binary ]
      }
    }
    Function [ <internal:SQLite> function sqlite_column ] {

      - Parameters [3] {
        Parameter #0 [ <required> $result ]
        Parameter #1 [ <required> $index_or_name ]
        Parameter #2 [ <optional> $decode_binary ]
      }
    }
    Function [ <internal:SQLite> function sqlite_libversion ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:SQLite> function sqlite_libencoding ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:SQLite> function sqlite_changes ] {

      - Parameters [1] {
        Parameter #0 [ <required> $db ]
      }
    }
    Function [ <internal:SQLite> function sqlite_last_insert_rowid ] {

      - Parameters [1] {
        Parameter #0 [ <required> $db ]
      }
    }
    Function [ <internal:SQLite> function sqlite_num_rows ] {

      - Parameters [1] {
        Parameter #0 [ <required> $result ]
      }
    }
    Function [ <internal:SQLite> function sqlite_num_fields ] {

      - Parameters [1] {
        Parameter #0 [ <required> $result ]
      }
    }
    Function [ <internal:SQLite> function sqlite_field_name ] {

      - Parameters [2] {
        Parameter #0 [ <required> $result ]
        Parameter #1 [ <required> $field_index ]
      }
    }
    Function [ <internal:SQLite> function sqlite_seek ] {

      - Parameters [2] {
        Parameter #0 [ <required> $result ]
        Parameter #1 [ <required> $row ]
      }
    }
    Function [ <internal:SQLite> function sqlite_rewind ] {

      - Parameters [1] {
        Parameter #0 [ <required> $result ]
      }
    }
    Function [ <internal:SQLite> function sqlite_next ] {

      - Parameters [1] {
        Parameter #0 [ <required> $result ]
      }
    }
    Function [ <internal:SQLite> function sqlite_prev ] {

      - Parameters [1] {
        Parameter #0 [ <required> $result ]
      }
    }
    Function [ <internal:SQLite> function sqlite_valid ] {

      - Parameters [1] {
        Parameter #0 [ <required> $result ]
      }
    }
    Function [ <internal:SQLite> function sqlite_has_more ] {

      - Parameters [1] {
        Parameter #0 [ <required> $result ]
      }
    }
    Function [ <internal:SQLite> function sqlite_has_prev ] {

      - Parameters [1] {
        Parameter #0 [ <required> $result ]
      }
    }
    Function [ <internal:SQLite> function sqlite_escape_string ] {

      - Parameters [1] {
        Parameter #0 [ <required> $item ]
      }
    }
    Function [ <internal:SQLite> function sqlite_busy_timeout ] {

      - Parameters [2] {
        Parameter #0 [ <required> $db ]
        Parameter #1 [ <required> $ms ]
      }
    }
    Function [ <internal:SQLite> function sqlite_last_error ] {

      - Parameters [1] {
        Parameter #0 [ <required> $db ]
      }
    }
    Function [ <internal:SQLite> function sqlite_error_string ] {

      - Parameters [1] {
        Parameter #0 [ <required> $error_code ]
      }
    }
    Function [ <internal:SQLite> function sqlite_unbuffered_query ] {

      - Parameters [4] {
        Parameter #0 [ <required> $query ]
        Parameter #1 [ <required> $db ]
        Parameter #2 [ <optional> $result_type ]
        Parameter #3 [ <optional> &$error_message ]
      }
    }
    Function [ <internal:SQLite> function sqlite_create_aggregate ] {

      - Parameters [5] {
        Parameter #0 [ <required> $db ]
        Parameter #1 [ <required> $funcname ]
        Parameter #2 [ <required> $step_func ]
        Parameter #3 [ <required> $finalize_func ]
        Parameter #4 [ <optional> $num_args ]
      }
    }
    Function [ <internal:SQLite> function sqlite_create_function ] {

      - Parameters [4] {
        Parameter #0 [ <required> $db ]
        Parameter #1 [ <required> $funcname ]
        Parameter #2 [ <required> $callback ]
        Parameter #3 [ <optional> $num_args ]
      }
    }
    Function [ <internal:SQLite> function sqlite_factory ] {

      - Parameters [3] {
        Parameter #0 [ <required> $filename ]
        Parameter #1 [ <optional> $mode ]
        Parameter #2 [ <optional> &$error_message ]
      }
    }
    Function [ <internal:SQLite> function sqlite_udf_encode_binary ] {

      - Parameters [1] {
        Parameter #0 [ <required> $data ]
      }
    }
    Function [ <internal:SQLite> function sqlite_udf_decode_binary ] {

      - Parameters [1] {
        Parameter #0 [ <required> $data ]
      }
    }
    Function [ <internal:SQLite> function sqlite_fetch_column_types ] {

      - Parameters [3] {
        Parameter #0 [ <required> $table_name ]
        Parameter #1 [ <required> $db ]
        Parameter #2 [ <optional> $result_type ]
      }
    }
  }

  - Classes [4] {
    Class [ <internal:SQLite> class SQLiteDatabase ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [13] {
        Method [ <internal:SQLite, ctor> final public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> $filename ]
            Parameter #1 [ <optional> $mode ]
            Parameter #2 [ <optional> &$error_message ]
          }
        }

        Method [ <internal:SQLite> public method query ] {

          - Parameters [3] {
            Parameter #0 [ <required> $query ]
            Parameter #1 [ <optional> $result_type ]
            Parameter #2 [ <optional> &$error_message ]
          }
        }

        Method [ <internal:SQLite> public method queryExec ] {

          - Parameters [2] {
            Parameter #0 [ <required> $query ]
            Parameter #1 [ <optional> &$error_message ]
          }
        }

        Method [ <internal:SQLite> public method arrayQuery ] {

          - Parameters [3] {
            Parameter #0 [ <required> $query ]
            Parameter #1 [ <optional> $result_type ]
            Parameter #2 [ <optional> $decode_binary ]
          }
        }

        Method [ <internal:SQLite> public method singleQuery ] {

          - Parameters [3] {
            Parameter #0 [ <required> $query ]
            Parameter #1 [ <optional> $first_row_only ]
            Parameter #2 [ <optional> $decode_binary ]
          }
        }

        Method [ <internal:SQLite> public method unbufferedQuery ] {

          - Parameters [3] {
            Parameter #0 [ <required> $query ]
            Parameter #1 [ <optional> $result_type ]
            Parameter #2 [ <optional> &$error_message ]
          }
        }

        Method [ <internal:SQLite> public method lastInsertRowid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:SQLite> public method changes ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:SQLite> public method createAggregate ] {

          - Parameters [4] {
            Parameter #0 [ <required> $funcname ]
            Parameter #1 [ <required> $step_func ]
            Parameter #2 [ <required> $finalize_func ]
            Parameter #3 [ <optional> $num_args ]
          }
        }

        Method [ <internal:SQLite> public method createFunction ] {

          - Parameters [3] {
            Parameter #0 [ <required> $funcname ]
            Parameter #1 [ <required> $callback ]
            Parameter #2 [ <optional> $num_args ]
          }
        }

        Method [ <internal:SQLite> public method busyTimeout ] {

          - Parameters [1] {
            Parameter #0 [ <required> $ms ]
          }
        }

        Method [ <internal:SQLite> public method lastError ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:SQLite> public method fetchColumnTypes ] {

          - Parameters [2] {
            Parameter #0 [ <required> $table_name ]
            Parameter #1 [ <optional> $result_type ]
          }
        }
      }
    }

    Class [ <internal:SQLite> <iterateable> final class SQLiteResult implements Iterator, Traversable, Countable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [17] {
        Method [ <internal:SQLite> public method fetch ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $result_type ]
            Parameter #1 [ <optional> $decode_binary ]
          }
        }

        Method [ <internal:SQLite> public method fetchObject ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $class_name ]
            Parameter #1 [ <optional> $ctor_params ]
            Parameter #2 [ <optional> $decode_binary ]
          }
        }

        Method [ <internal:SQLite> public method fetchSingle ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $decode_binary ]
          }
        }

        Method [ <internal:SQLite> public method fetchAll ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $result_type ]
            Parameter #1 [ <optional> $decode_binary ]
          }
        }

        Method [ <internal:SQLite> public method column ] {

          - Parameters [2] {
            Parameter #0 [ <required> $index_or_name ]
            Parameter #1 [ <optional> $decode_binary ]
          }
        }

        Method [ <internal:SQLite> public method numFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:SQLite> public method fieldName ] {

          - Parameters [1] {
            Parameter #0 [ <required> $field_index ]
          }
        }

        Method [ <internal:SQLite, prototype Iterator> public method current ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $result_type ]
            Parameter #1 [ <optional> $decode_binary ]
          }
        }

        Method [ <internal:SQLite, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:SQLite, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:SQLite, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:SQLite, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:SQLite, prototype Countable> public method count ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:SQLite> public method prev ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:SQLite> public method hasPrev ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:SQLite> public method numRows ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:SQLite> public method seek ] {

          - Parameters [1] {
            Parameter #0 [ <required> $row ]
          }
        }
      }
    }

    Class [ <internal:SQLite> <iterateable> final class SQLiteUnbuffered ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [10] {
        Method [ <internal:SQLite> public method fetch ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $result_type ]
            Parameter #1 [ <optional> $decode_binary ]
          }
        }

        Method [ <internal:SQLite> public method fetchObject ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $class_name ]
            Parameter #1 [ <optional> $ctor_params ]
            Parameter #2 [ <optional> $decode_binary ]
          }
        }

        Method [ <internal:SQLite> public method fetchSingle ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $decode_binary ]
          }
        }

        Method [ <internal:SQLite> public method fetchAll ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $result_type ]
            Parameter #1 [ <optional> $decode_binary ]
          }
        }

        Method [ <internal:SQLite> public method column ] {

          - Parameters [2] {
            Parameter #0 [ <required> $index_or_name ]
            Parameter #1 [ <optional> $decode_binary ]
          }
        }

        Method [ <internal:SQLite> public method numFields ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:SQLite> public method fieldName ] {

          - Parameters [1] {
            Parameter #0 [ <required> $field_index ]
          }
        }

        Method [ <internal:SQLite> public method current ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $result_type ]
            Parameter #1 [ <optional> $decode_binary ]
          }
        }

        Method [ <internal:SQLite> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:SQLite> public method valid ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:SQLite> final class SQLiteException extends RuntimeException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [9] {
        Method [ <internal:Core, inherits Exception, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }
  }
}

