Extension [ <persistent> extension #155 XCache version 3.2.0-rc1 ] {

  - Dependencies {
    Dependency [ standard (Required) ]
    Dependency [ apc (Conflicts) ]
    Dependency [ eAccelerator (Conflicts) ]
    Dependency [ Turck MMCache (Conflicts) ]
  }

  - INI {
    Entry [ xcache.coredump_directory <SYSTEM> ]
      Current = ''
    }
    Entry [ xcache.disable_on_crash <SYSTEM> ]
      Current = ''
    }
    Entry [ xcache.test <SYSTEM> ]
      Current = '0'
    }
    Entry [ xcache.experimental <ALL> ]
      Current = ''
    }
  }

  - Constants [198] {
    Constant [ integer XC_NULL? ] { 0 }
    Constant [ integer XC_IS_CONST ] { 1 }
    Constant [ integer XC_IS_TMP_VAR ] { 2 }
    Constant [ integer XC_IS_VAR ] { 4 }
    Constant [ integer XC_IS_UNUSED ] { 8 }
    Constant [ integer XC_IS_CV ] { 16 }
    Constant [ integer XC_IS_NULL ] { 0 }
    Constant [ integer XC_IS_LONG ] { 1 }
    Constant [ integer XC_IS_DOUBLE ] { 2 }
    Constant [ integer XC_IS_BOOL ] { 3 }
    Constant [ integer XC_IS_ARRAY ] { 4 }
    Constant [ integer XC_IS_OBJECT ] { 5 }
    Constant [ integer XC_IS_STRING ] { 6 }
    Constant [ integer XC_IS_RESOURCE ] { 7 }
    Constant [ integer XC_IS_CONSTANT ] { 8 }
    Constant [ integer XC_IS_CONSTANT_ARRAY ] { 9 }
    Constant [ integer XC_IS_UNICODE ] { 10 }
    Constant [ integer XC_NOP ] { 0 }
    Constant [ integer XC_ADD ] { 1 }
    Constant [ integer XC_SUB ] { 2 }
    Constant [ integer XC_MUL ] { 3 }
    Constant [ integer XC_DIV ] { 4 }
    Constant [ integer XC_MOD ] { 5 }
    Constant [ integer XC_SL ] { 6 }
    Constant [ integer XC_SR ] { 7 }
    Constant [ integer XC_CONCAT ] { 8 }
    Constant [ integer XC_BW_OR ] { 9 }
    Constant [ integer XC_BW_AND ] { 10 }
    Constant [ integer XC_BW_XOR ] { 11 }
    Constant [ integer XC_BW_NOT ] { 12 }
    Constant [ integer XC_BOOL_NOT ] { 13 }
    Constant [ integer XC_BOOL_XOR ] { 14 }
    Constant [ integer XC_IS_IDENTICAL ] { 15 }
    Constant [ integer XC_IS_NOT_IDENTICAL ] { 16 }
    Constant [ integer XC_IS_EQUAL ] { 17 }
    Constant [ integer XC_IS_NOT_EQUAL ] { 18 }
    Constant [ integer XC_IS_SMALLER ] { 19 }
    Constant [ integer XC_IS_SMALLER_OR_EQUAL ] { 20 }
    Constant [ integer XC_CAST ] { 21 }
    Constant [ integer XC_QM_ASSIGN ] { 22 }
    Constant [ integer XC_ASSIGN_ADD ] { 23 }
    Constant [ integer XC_ASSIGN_SUB ] { 24 }
    Constant [ integer XC_ASSIGN_MUL ] { 25 }
    Constant [ integer XC_ASSIGN_DIV ] { 26 }
    Constant [ integer XC_ASSIGN_MOD ] { 27 }
    Constant [ integer XC_ASSIGN_SL ] { 28 }
    Constant [ integer XC_ASSIGN_SR ] { 29 }
    Constant [ integer XC_ASSIGN_CONCAT ] { 30 }
    Constant [ integer XC_ASSIGN_BW_OR ] { 31 }
    Constant [ integer XC_ASSIGN_BW_AND ] { 32 }
    Constant [ integer XC_ASSIGN_BW_XOR ] { 33 }
    Constant [ integer XC_PRE_INC ] { 34 }
    Constant [ integer XC_PRE_DEC ] { 35 }
    Constant [ integer XC_POST_INC ] { 36 }
    Constant [ integer XC_POST_DEC ] { 37 }
    Constant [ integer XC_ASSIGN ] { 38 }
    Constant [ integer XC_ASSIGN_REF ] { 39 }
    Constant [ integer XC_ECHO ] { 40 }
    Constant [ integer XC_PRINT ] { 41 }
    Constant [ integer XC_JMP ] { 42 }
    Constant [ integer XC_JMPZ ] { 43 }
    Constant [ integer XC_JMPNZ ] { 44 }
    Constant [ integer XC_JMPZNZ ] { 45 }
    Constant [ integer XC_JMPZ_EX ] { 46 }
    Constant [ integer XC_JMPNZ_EX ] { 47 }
    Constant [ integer XC_CASE ] { 48 }
    Constant [ integer XC_SWITCH_FREE ] { 49 }
    Constant [ integer XC_BRK ] { 50 }
    Constant [ integer XC_CONT ] { 51 }
    Constant [ integer XC_BOOL ] { 52 }
    Constant [ integer XC_INIT_STRING ] { 53 }
    Constant [ integer XC_ADD_CHAR ] { 54 }
    Constant [ integer XC_ADD_STRING ] { 55 }
    Constant [ integer XC_ADD_VAR ] { 56 }
    Constant [ integer XC_BEGIN_SILENCE ] { 57 }
    Constant [ integer XC_END_SILENCE ] { 58 }
    Constant [ integer XC_INIT_FCALL_BY_NAME ] { 59 }
    Constant [ integer XC_DO_FCALL ] { 60 }
    Constant [ integer XC_DO_FCALL_BY_NAME ] { 61 }
    Constant [ integer XC_RETURN ] { 62 }
    Constant [ integer XC_RECV ] { 63 }
    Constant [ integer XC_RECV_INIT ] { 64 }
    Constant [ integer XC_SEND_VAL ] { 65 }
    Constant [ integer XC_SEND_VAR ] { 66 }
    Constant [ integer XC_SEND_REF ] { 67 }
    Constant [ integer XC_NEW ] { 68 }
    Constant [ integer XC_INIT_NS_FCALL_BY_NAME ] { 69 }
    Constant [ integer XC_FREE ] { 70 }
    Constant [ integer XC_INIT_ARRAY ] { 71 }
    Constant [ integer XC_ADD_ARRAY_ELEMENT ] { 72 }
    Constant [ integer XC_INCLUDE_OR_EVAL ] { 73 }
    Constant [ integer XC_UNSET_VAR ] { 74 }
    Constant [ integer XC_UNSET_DIM ] { 75 }
    Constant [ integer XC_UNSET_OBJ ] { 76 }
    Constant [ integer XC_FE_RESET ] { 77 }
    Constant [ integer XC_FE_FETCH ] { 78 }
    Constant [ integer XC_EXIT ] { 79 }
    Constant [ integer XC_FETCH_R ] { 80 }
    Constant [ integer XC_FETCH_DIM_R ] { 81 }
    Constant [ integer XC_FETCH_OBJ_R ] { 82 }
    Constant [ integer XC_FETCH_W ] { 83 }
    Constant [ integer XC_FETCH_DIM_W ] { 84 }
    Constant [ integer XC_FETCH_OBJ_W ] { 85 }
    Constant [ integer XC_FETCH_RW ] { 86 }
    Constant [ integer XC_FETCH_DIM_RW ] { 87 }
    Constant [ integer XC_FETCH_OBJ_RW ] { 88 }
    Constant [ integer XC_FETCH_IS ] { 89 }
    Constant [ integer XC_FETCH_DIM_IS ] { 90 }
    Constant [ integer XC_FETCH_OBJ_IS ] { 91 }
    Constant [ integer XC_FETCH_FUNC_ARG ] { 92 }
    Constant [ integer XC_FETCH_DIM_FUNC_ARG ] { 93 }
    Constant [ integer XC_FETCH_OBJ_FUNC_ARG ] { 94 }
    Constant [ integer XC_FETCH_UNSET ] { 95 }
    Constant [ integer XC_FETCH_DIM_UNSET ] { 96 }
    Constant [ integer XC_FETCH_OBJ_UNSET ] { 97 }
    Constant [ integer XC_FETCH_DIM_TMP_VAR ] { 98 }
    Constant [ integer XC_FETCH_CONSTANT ] { 99 }
    Constant [ integer XC_GOTO ] { 100 }
    Constant [ integer XC_EXT_STMT ] { 101 }
    Constant [ integer XC_EXT_FCALL_BEGIN ] { 102 }
    Constant [ integer XC_EXT_FCALL_END ] { 103 }
    Constant [ integer XC_EXT_NOP ] { 104 }
    Constant [ integer XC_TICKS ] { 105 }
    Constant [ integer XC_SEND_VAR_NO_REF ] { 106 }
    Constant [ integer XC_CATCH ] { 107 }
    Constant [ integer XC_THROW ] { 108 }
    Constant [ integer XC_FETCH_CLASS ] { 109 }
    Constant [ integer XC_CLONE ] { 110 }
    Constant [ integer XC_RETURN_BY_REF ] { 111 }
    Constant [ integer XC_INIT_METHOD_CALL ] { 112 }
    Constant [ integer XC_INIT_STATIC_METHOD_CALL ] { 113 }
    Constant [ integer XC_ISSET_ISEMPTY_VAR ] { 114 }
    Constant [ integer XC_ISSET_ISEMPTY_DIM_OBJ ] { 115 }
    Constant [ integer XC_UNDEF ] { 116 }
    Constant [ integer XC_PRE_INC_OBJ ] { 132 }
    Constant [ integer XC_PRE_DEC_OBJ ] { 133 }
    Constant [ integer XC_POST_INC_OBJ ] { 134 }
    Constant [ integer XC_POST_DEC_OBJ ] { 135 }
    Constant [ integer XC_ASSIGN_OBJ ] { 136 }
    Constant [ integer XC_OP_DATA ] { 137 }
    Constant [ integer XC_INSTANCEOF ] { 138 }
    Constant [ integer XC_DECLARE_CLASS ] { 139 }
    Constant [ integer XC_DECLARE_INHERITED_CLASS ] { 140 }
    Constant [ integer XC_DECLARE_FUNCTION ] { 141 }
    Constant [ integer XC_RAISE_ABSTRACT_ERROR ] { 142 }
    Constant [ integer XC_DECLARE_CONST ] { 143 }
    Constant [ integer XC_ADD_INTERFACE ] { 144 }
    Constant [ integer XC_DECLARE_INHERITED_CLASS_DELAYED ] { 145 }
    Constant [ integer XC_VERIFY_ABSTRACT_CLASS ] { 146 }
    Constant [ integer XC_ASSIGN_DIM ] { 147 }
    Constant [ integer XC_ISSET_ISEMPTY_PROP_OBJ ] { 148 }
    Constant [ integer XC_HANDLE_EXCEPTION ] { 149 }
    Constant [ integer XC_USER_OPCODE ] { 150 }
    Constant [ integer XC_JMP_SET ] { 152 }
    Constant [ integer XC_DECLARE_LAMBDA_FUNCTION ] { 153 }
    Constant [ integer XC_ADD_TRAIT ] { 154 }
    Constant [ integer XC_BIND_TRAITS ] { 155 }
    Constant [ integer XC_SEPARATE ] { 156 }
    Constant [ integer XC_QM_ASSIGN_VAR ] { 157 }
    Constant [ integer XC_JMP_SET_VAR ] { 158 }
    Constant [ integer XC_DISCARD_EXCEPTION ] { 159 }
    Constant [ integer XC_YIELD ] { 160 }
    Constant [ integer XC_GENERATOR_RETURN ] { 161 }
    Constant [ integer XC_FAST_CALL ] { 162 }
    Constant [ integer XC_FAST_RET ] { 163 }
    Constant [ integer XC_RECV_VARIADIC ] { 164 }
    Constant [ integer XC_SEND_UNPACK ] { 165 }
    Constant [ integer XC_POW ] { 166 }
    Constant [ integer XC_ASSIGN_POW ] { 167 }
    Constant [ integer XC_OPSPEC_STD ] { 0 }
    Constant [ integer XC_OPSPEC_UNUSED ] { 1 }
    Constant [ integer XC_OPSPEC_OPLINE ] { 2 }
    Constant [ integer XC_OPSPEC_FCALL ] { 3 }
    Constant [ integer XC_OPSPEC_INIT_FCALL ] { 4 }
    Constant [ integer XC_OPSPEC_ARG ] { 5 }
    Constant [ integer XC_OPSPEC_CAST ] { 6 }
    Constant [ integer XC_OPSPEC_FETCH ] { 7 }
    Constant [ integer XC_OPSPEC_DECLARE ] { 8 }
    Constant [ integer XC_OPSPEC_SEND ] { 9 }
    Constant [ integer XC_OPSPEC_SEND_NOREF ] { 10 }
    Constant [ integer XC_OPSPEC_FCLASS ] { 11 }
    Constant [ integer XC_OPSPEC_UCLASS ] { 12 }
    Constant [ integer XC_OPSPEC_CLASS ] { 13 }
    Constant [ integer XC_OPSPEC_FE ] { 14 }
    Constant [ integer XC_OPSPEC_IFACE ] { 15 }
    Constant [ integer XC_OPSPEC_ISSET ] { 16 }
    Constant [ integer XC_OPSPEC_BIT ] { 17 }
    Constant [ integer XC_OPSPEC_VAR ] { 18 }
    Constant [ integer XC_OPSPEC_TMP ] { 19 }
    Constant [ integer XC_OPSPEC_JMPADDR ] { 20 }
    Constant [ integer XC_OPSPEC_BRK ] { 21 }
    Constant [ integer XC_OPSPEC_CONT ] { 22 }
    Constant [ integer XC_OPSPEC_INCLUDE ] { 23 }
    Constant [ integer XC_OPSPEC_ASSIGN ] { 24 }
    Constant [ integer XC_OPSPEC_FETCHTYPE ] { 25 }
    Constant [ integer XC_SIZEOF_TEMP_VARIABLE ] { 32 }
    Constant [ string XCACHE_VERSION ] { 3.2.0-rc1 }
    Constant [ string XCACHE_MODULES ] { cacher optimizer coverager }
  }

  - Functions {
    Function [ <internal:XCache> function xcache_coredump ] {
    }
    Function [ <internal:XCache> function xcache_get_special_value ] {
    }
    Function [ <internal:XCache> function xcache_get_type ] {
    }
    Function [ <internal:XCache> function xcache_get_op_type ] {
    }
    Function [ <internal:XCache> function xcache_get_data_type ] {
    }
    Function [ <internal:XCache> function xcache_get_opcode ] {
    }
    Function [ <internal:XCache> function xcache_get_opcode_spec ] {
    }
    Function [ <internal:XCache> function xcache_is_autoglobal ] {
    }
    Function [ <internal:XCache> function xcache_get_refcount ] {
    }
    Function [ <internal:XCache> function xcache_get_isref ] {

      - Parameters [1] {
        Parameter #0 [ <required> &$variable ]
      }
    }
  }
}

Extension [ <persistent> extension #181 XCache Cacher version 3.2.0-rc1 ] {

  - INI {
    Entry [ xcache.shm_scheme <SYSTEM> ]
      Current = 'mmap'
    }
    Entry [ xcache.mmap_path <SYSTEM> ]
      Current = '/dev/zero'
    }
    Entry [ xcache.readonly_protection <SYSTEM> ]
      Current = ''
    }
    Entry [ xcache.admin.enable_auth <SYSTEM> ]
      Current = ''
    }
    Entry [ xcache.size <SYSTEM> ]
      Current = '60M'
    }
    Entry [ xcache.count <SYSTEM> ]
      Current = '1'
    }
    Entry [ xcache.slots <SYSTEM> ]
      Current = '8K'
    }
    Entry [ xcache.allocator <SYSTEM> ]
      Current = 'bestfit'
    }
    Entry [ xcache.ttl <SYSTEM> ]
      Current = '0'
    }
    Entry [ xcache.gc_interval <SYSTEM> ]
      Current = '0'
    }
    Entry [ xcache.cacher <ALL> ]
      Current = ''
    }
    Entry [ xcache.stat <ALL> ]
      Current = '1'
    }
    Entry [ xcache.var_size <SYSTEM> ]
      Current = '4M'
    }
    Entry [ xcache.var_count <SYSTEM> ]
      Current = '1'
    }
    Entry [ xcache.var_slots <SYSTEM> ]
      Current = '8K'
    }
    Entry [ xcache.var_maxttl <SYSTEM> ]
      Current = '0'
    }
    Entry [ xcache.var_gc_interval <SYSTEM> ]
      Current = '300'
    }
    Entry [ xcache.var_allocator <SYSTEM> ]
      Current = 'bestfit'
    }
    Entry [ xcache.var_ttl <ALL> ]
      Current = '0'
    }
    Entry [ xcache.var_namespace_mode <SYSTEM> ]
      Current = '0'
    }
    Entry [ xcache.var_namespace <SYSTEM> ]
      Current = ''
    }
  }

  - Constants [2] {
    Constant [ integer XC_TYPE_PHP ] { 0 }
    Constant [ integer XC_TYPE_VAR ] { 1 }
  }

  - Functions {
    Function [ <internal:XCache Cacher> function xcache_count ] {
    }
    Function [ <internal:XCache Cacher> function xcache_info ] {
    }
    Function [ <internal:XCache Cacher> function xcache_list ] {
    }
    Function [ <internal:XCache Cacher> function xcache_clear_cache ] {
    }
    Function [ <internal:XCache Cacher> function xcache_enable_cache ] {
    }
    Function [ <internal:XCache Cacher> function xcache_admin_namespace ] {
    }
    Function [ <internal:XCache Cacher> function xcache_set_namespace ] {
    }
    Function [ <internal:XCache Cacher> function xcache_get ] {
    }
    Function [ <internal:XCache Cacher> function xcache_set ] {
    }
    Function [ <internal:XCache Cacher> function xcache_isset ] {
    }
    Function [ <internal:XCache Cacher> function xcache_unset ] {
    }
    Function [ <internal:XCache Cacher> function xcache_unset_by_prefix ] {
    }
    Function [ <internal:XCache Cacher> function xcache_inc ] {
    }
    Function [ <internal:XCache Cacher> function xcache_dec ] {
    }
  }
}

Extension [ <persistent> extension #182 XCache Coverager version 3.2.0-rc1 ] {

  - INI {
    Entry [ xcache.coverager <PERDIR,SYSTEM> ]
      Current = ''
    }
    Entry [ xcache.coverager_autostart <PERDIR,SYSTEM> ]
      Current = '1'
    }
    Entry [ xcache.coveragedump_directory <SYSTEM> ]
      Current = ''
    }
  }

  - Functions {
    Function [ <internal:XCache Coverager> function xcache_coverager_decode ] {
    }
    Function [ <internal:XCache Coverager> function xcache_coverager_start ] {
    }
    Function [ <internal:XCache Coverager> function xcache_coverager_stop ] {
    }
    Function [ <internal:XCache Coverager> function xcache_coverager_get ] {
    }
  }
}

Extension [ <persistent> extension #180 XCache Optimizer version 3.2.0-rc1 ] {

  - INI {
    Entry [ xcache.optimizer <ALL> ]
      Current = ''
    }
  }
}

