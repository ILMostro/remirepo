From f4ef6c52ffde9f1fea0e05fedb5576bcb7a60970 Mon Sep 17 00:00:00 2001
From: Remi Collet <fedora@famillecollet.com>
Date: Wed, 2 Sep 2015 13:57:42 +0200
Subject: [PATCH 1/2] move phpunit configuration file

---
 .travis.yml       | 2 +-
 phpunit.xml.dist  | 5 +++++
 tests/phpunit.xml | 5 -----
 3 files changed, 6 insertions(+), 6 deletions(-)
 create mode 100644 phpunit.xml.dist
 delete mode 100644 tests/phpunit.xml

diff --git a/.travis.yml b/.travis.yml
index c00af81..c104d6e 100644
--- a/.travis.yml
+++ b/.travis.yml
@@ -34,4 +34,4 @@ script:
   - make
   - sudo make install
   - echo 'extension="libsmbclient.so"' | sudo tee -a /etc/php5/cli/php.ini
-  - /usr/bin/php phpunit.phar tests
+  - /usr/bin/php phpunit.phar --verbose
diff --git a/phpunit.xml.dist b/phpunit.xml.dist
new file mode 100644
index 0000000..60f4db9
--- /dev/null
+++ b/phpunit.xml.dist
@@ -0,0 +1,5 @@
+<phpunit colors="true">
+  <testsuite name="libsmbclient-php">
+    <directory suffix=".php">./</directory>
+  </testsuite>
+</phpunit>
diff --git a/tests/phpunit.xml b/tests/phpunit.xml
deleted file mode 100644
index 60f4db9..0000000
--- a/tests/phpunit.xml
+++ /dev/null
@@ -1,5 +0,0 @@
-<phpunit colors="true">
-  <testsuite name="libsmbclient-php">
-    <directory suffix=".php">./</directory>
-  </testsuite>
-</phpunit>

From 9f7ee02dba2e714d6279c8f71a4eb2fa623104d1 Mon Sep 17 00:00:00 2001
From: Remi Collet <fedora@famillecollet.com>
Date: Wed, 2 Sep 2015 13:59:40 +0200
Subject: [PATCH 2/2] move credentials and paths to phpunit configuration

---
 .gitignore              |  1 +
 phpunit.xml.dist        | 10 +++++++++-
 tests/ClosedirTest.php  | 12 ++++++------
 tests/CreateTest.php    | 14 +++++++-------
 tests/GetxattrTest.php  | 20 ++++++++++----------
 tests/LseekTest.php     | 15 ++++++++++-----
 tests/OpendirTest.php   | 18 +++++++++---------
 tests/OptionsTest.php   | 28 ++++++++++++++--------------
 tests/ReaddirTest.php   |  6 +++---
 tests/RenameTest.php    | 34 +++++++++++++++++-----------------
 tests/StateInitTest.php |  2 +-
 tests/VfsTest.php       | 10 +++++++---
 tests/WriteTest.php     | 15 ++++++++++-----
 13 files changed, 104 insertions(+), 81 deletions(-)
 create mode 100644 .gitignore

diff --git a/.gitignore b/.gitignore
new file mode 100644
index 0000000..ce3aa65
--- /dev/null
+++ b/.gitignore
@@ -0,0 +1 @@
+phpunit.xml
diff --git a/phpunit.xml.dist b/phpunit.xml.dist
index 60f4db9..05ba054 100644
--- a/phpunit.xml.dist
+++ b/phpunit.xml.dist
@@ -1,5 +1,13 @@
 <phpunit colors="true">
+  <php>
+     <const name="SMB_HOST"  value="localhost" />
+     <const name="SMB_USER"  value="testuser" />
+     <const name="SMB_PASS"  value="password" />
+     <const name="SMB_HASH"  value="8846F7EAEE8FB117AD06BDD830B7586C" />
+     <const name="SMB_SHARE" value="testshare" />
+     <const name="SMB_LOCAL" value="/home/testuser/testshare" />
+  </php>
   <testsuite name="libsmbclient-php">
-    <directory suffix=".php">./</directory>
+    <directory suffix=".php">tests</directory>
   </testsuite>
 </phpunit>
diff --git a/tests/ClosedirTest.php b/tests/ClosedirTest.php
index a015d6d..3323cdd 100644
--- a/tests/ClosedirTest.php
+++ b/tests/ClosedirTest.php
@@ -6,8 +6,8 @@ public function
 	testClosedirSuccess ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
-		$dir = smbclient_opendir($state, 'smb://localhost/testshare');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
+		$dir = smbclient_opendir($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE);
 		$this->assertTrue(smbclient_closedir($state, $dir));
 	}
 
@@ -18,7 +18,7 @@ public function
 	testClosedirEmpty ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 		$this->assertFalse(smbclient_closedir($state));
 	}
 
@@ -29,7 +29,7 @@ public function
 	testClosedirNull ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 		$this->assertTrue(smbclient_closedir($state, null));
 	}
 
@@ -40,8 +40,8 @@ public function
 	testClosedirDouble ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
-		$dir = smbclient_opendir($state, 'smb://localhost/testshare');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
+		$dir = smbclient_opendir($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE);
 		$this->assertTrue(smbclient_closedir($state, $dir));
 		$this->assertFalse(smbclient_closedir($state, $dir));
 	}
diff --git a/tests/CreateTest.php b/tests/CreateTest.php
index 0e6480f..94a010b 100644
--- a/tests/CreateTest.php
+++ b/tests/CreateTest.php
@@ -5,11 +5,11 @@ class CreateTest extends PHPUnit_Framework_TestCase
 	public function
 	testCreateSuccess ()
 	{
-		$testuri = 'smb://localhost/testshare/writetest.txt';
-		$realfile = '/home/testuser/testshare/writetest.txt';
+		$testuri = 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/writetest.txt';
+		$realfile = SMB_LOCAL . '/writetest.txt';
 
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 		$file = smbclient_creat($state, $testuri);
 		$this->assertTrue(is_resource($file));
 		$this->assertFileExists($realfile);
@@ -19,14 +19,14 @@ public function
 	public function
 	testCreateUrlencodedSuccess ()
 	{
-		$testuri = 'smb://localhost/testshare/ex%25%25%25ample.txt';
-		$realfile = '/home/testuser/testshare/ex%%%ample.txt';
+		$testuri = 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/ex%25%25%25ample.txt';
+		$realfile = SMB_LOCAL . '/ex%%%ample.txt';
 
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 		$file = smbclient_creat($state, $testuri);
 		$this->assertTrue(is_resource($file));
 		$this->assertFileExists($realfile);
-		unlink($realfile);
+		#unlink($realfile);
 	}
 }
diff --git a/tests/GetxattrTest.php b/tests/GetxattrTest.php
index 04834a3..539a0d0 100644
--- a/tests/GetxattrTest.php
+++ b/tests/GetxattrTest.php
@@ -6,8 +6,8 @@ public function
 	testGetxattrFileSuccess ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
-		$attr = smbclient_getxattr($state, 'smb://localhost/testshare/testdir/testfile.txt', 'system.*');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
+		$attr = smbclient_getxattr($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/testdir/testfile.txt', 'system.*');
 		$this->assertTrue(is_string($attr));
 	}
 
@@ -15,8 +15,8 @@ public function
 	testGetxattrDirSuccess ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
-		$attr = smbclient_getxattr($state, 'smb://localhost/testshare/testdir', 'system.*');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
+		$attr = smbclient_getxattr($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/testdir', 'system.*');
 		$this->assertTrue(is_string($attr));
 	}
 
@@ -24,8 +24,8 @@ public function
 	testGetxattrShareSuccess ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
-		$attr = smbclient_getxattr($state, 'smb://localhost/testshare', 'system.*');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
+		$attr = smbclient_getxattr($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE, 'system.*');
 		$this->assertTrue(is_string($attr));
 	}
 
@@ -36,8 +36,8 @@ public function
 	testGetxattrServer ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
-		$attr = smbclient_getxattr($state, 'smb://localhost', 'system.*');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
+		$attr = smbclient_getxattr($state, 'smb://'.SMB_HOST, 'system.*');
 		$this->assertFalse($attr);
 	}
 
@@ -48,8 +48,8 @@ public function
 	testGetxattrFileNotFound ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
-		$attr = smbclient_getxattr($state, 'smb://localhost/testshare/testdir/does-not-exist', 'system.dos_attr.mode');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
+		$attr = smbclient_getxattr($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/testdir/does-not-exist', 'system.dos_attr.mode');
 		$this->assertFalse($attr);
 		$this->assertEquals(smbclient_state_errno($state), 2);	// ENOENT
 	}
diff --git a/tests/LseekTest.php b/tests/LseekTest.php
index 0c5e79f..c2219d4 100644
--- a/tests/LseekTest.php
+++ b/tests/LseekTest.php
@@ -3,16 +3,21 @@
 class LseekTest extends PHPUnit_Framework_TestCase
 {
 	// The URI of the test file seen through Samba:
-	private $testuri = 'smb://localhost/testshare/lseektest.txt';
+	private $testuri;
 
 	// The "real" file on the filesystem:
-	private $realfile = '/home/testuser/testshare/lseektest.txt';
+	private $realfile;
+
+	public function setup() {
+		$this->testuri = 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/lseektest.txt';
+		$this->realfile = SMB_LOCAL.'/lseektest.txt';
+	}
 
 	public function
 	testLseekSet ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 		$file = smbclient_creat($state, $this->testuri);
 		$ret = smbclient_write($state, $file, 'abcdefgh');
 		$this->assertTrue(is_integer($ret));
@@ -29,7 +34,7 @@ public function
 	testLseekSetPastEnd ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 		$file = smbclient_creat($state, $this->testuri);
 
 		$ret = smbclient_lseek($state, $file, 3, SEEK_SET);
@@ -44,7 +49,7 @@ public function
 	testLseekCurPositive ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 		$file = smbclient_creat($state, $this->testuri);
 		smbclient_write($state, $file, 'abcdefgh');
 
diff --git a/tests/OpendirTest.php b/tests/OpendirTest.php
index 5c59fc3..bffc737 100644
--- a/tests/OpendirTest.php
+++ b/tests/OpendirTest.php
@@ -6,8 +6,8 @@ public function
 	testOpendirSuccess ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
-		$dir = smbclient_opendir($state, 'smb://localhost/testshare/testdir');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
+		$dir = smbclient_opendir($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/testdir');
 		$this->assertTrue(is_resource($dir));
 	}
 
@@ -17,7 +17,7 @@ public function
 	public function
 	testOpendirInvalidState ()
 	{
-		$dir = smbclient_opendir(null, 'smb://localhost/testshare/testdir');
+		$dir = smbclient_opendir(null, 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/testdir');
 		$this->assertFalse($dir);
 	}
 
@@ -28,8 +28,8 @@ public function
 	testOpendirNotFound ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
-		$dir = smbclient_opendir($state, 'smb://localhost/testshare/does-not-exist');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
+		$dir = smbclient_opendir($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/does-not-exist');
 		$this->assertFalse($dir);
 		$errno = smbclient_state_errno($state);
 		$this->assertEquals(2, $errno); // ENOENT
@@ -42,8 +42,8 @@ public function
 	testOpendirPermissionDenied ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
-		$dir = smbclient_opendir($state, 'smb://localhost/testshare/noaccess');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
+		$dir = smbclient_opendir($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/noaccess');
 		$this->assertFalse($dir);
 		$errno = smbclient_state_errno($state);
 		$this->assertEquals(13, $errno); // EACCES
@@ -56,8 +56,8 @@ public function
 	testOpendirNotDir ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
-		$dir = smbclient_opendir($state, 'smb://localhost/testshare/testfile.txt');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
+		$dir = smbclient_opendir($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/testfile.txt');
 		$this->assertFalse($dir);
 		$errno = smbclient_state_errno($state);
 		$this->assertEquals(20, $errno); // ENOTDIR
diff --git a/tests/OptionsTest.php b/tests/OptionsTest.php
index 54e50b9..868b00f 100644
--- a/tests/OptionsTest.php
+++ b/tests/OptionsTest.php
@@ -34,7 +34,7 @@ public function
 	testOptionSetGetCaseSensitive ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 		$this->assertTrue(smbclient_option_set($state, SMBCLIENT_OPT_CASE_SENSITIVE, true));
 		$this->assertTrue(smbclient_option_get($state, SMBCLIENT_OPT_CASE_SENSITIVE));
 
@@ -47,9 +47,9 @@ public function
 	testOptionSetGetUser ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
-		$this->assertTrue(smbclient_option_set($state, SMBCLIENT_OPT_USER, 'testuser'));
-		$this->assertEquals('testuser', smbclient_option_get($state, SMBCLIENT_OPT_USER));
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
+		$this->assertTrue(smbclient_option_set($state, SMBCLIENT_OPT_USER, SMB_USER));
+		$this->assertEquals(SMB_USER, smbclient_option_get($state, SMBCLIENT_OPT_USER));
 		smbclient_state_free($state);
 	}
 
@@ -57,9 +57,9 @@ public function
 	testOptionSetGetUserWithOpen ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
-		$this->assertTrue(smbclient_option_set($state, SMBCLIENT_OPT_USER, 'testuser'));
-		$this->assertEquals('testuser', smbclient_option_get($state, SMBCLIENT_OPT_USER));
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
+		$this->assertTrue(smbclient_option_set($state, SMBCLIENT_OPT_USER, SMB_USER));
+		$this->assertEquals(SMB_USER, smbclient_option_get($state, SMBCLIENT_OPT_USER));
 		$dir = smbclient_opendir($state, 'smb://localhost/testshare');
 		while (($out = smbclient_readdir($state, $dir)) !== false);
 		smbclient_closedir($state, $dir);
@@ -70,14 +70,14 @@ public function
 	testOptionUrlencodeReaddir ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 
 		// Create a file via the regular filesystem:
-		touch('/home/testuser/testshare/readdir%option.txt');
+		touch(SMB_LOCAL.'/readdir%option.txt');
 
 		// Technically options can only be set between new and init...
 		smbclient_option_set($state, SMBCLIENT_OPT_URLENCODE_READDIR_ENTRIES, false);
-		$dir = smbclient_opendir($state, 'smb://localhost/testshare');
+		$dir = smbclient_opendir($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE);
 		$found = false;
 		while (($out = smbclient_readdir($state, $dir)) !== false) {
 			if ($out['name'] === 'readdir%option.txt') {
@@ -89,7 +89,7 @@ public function
 		$this->assertTrue($found);
 
 		smbclient_option_set($state, SMBCLIENT_OPT_URLENCODE_READDIR_ENTRIES, true);
-		$dir = smbclient_opendir($state, 'smb://localhost/testshare');
+		$dir = smbclient_opendir($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE);
 		$found = false;
 		while (($out = smbclient_readdir($state, $dir)) !== false) {
 			if ($out['name'] === 'readdir%25option.txt') {
@@ -101,7 +101,7 @@ public function
 		smbclient_state_free($state);
 		$this->assertTrue($found);
 
-		unlink('/home/testuser/testshare/readdir%option.txt');
+		unlink(SMB_LOCAL.'/readdir%option.txt');
 	}
 
 	public function
@@ -116,9 +116,9 @@ public function
 		smbclient_option_set($state, SMBCLIENT_OPT_USE_NT_HASH, true);
 
 		// NTLM hash of 'password' generated at http://www.tobtu.com/lmntlm.php
-		smbclient_state_init($state, null, 'testuser', '8846F7EAEE8FB117AD06BDD830B7586C');
+		smbclient_state_init($state, null, SMB_USER, SMB_HASH);
 
-		$dir = smbclient_opendir($state, 'smb://localhost/testshare');
+		$dir = smbclient_opendir($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE);
 		while (($out = smbclient_readdir($state, $dir)) !== false);
 		$this->assertTrue(is_resource($dir));
 		smbclient_closedir($state, $dir);
diff --git a/tests/ReaddirTest.php b/tests/ReaddirTest.php
index d65644f..1f0b0c2 100644
--- a/tests/ReaddirTest.php
+++ b/tests/ReaddirTest.php
@@ -6,15 +6,15 @@ public function
 	testReaddirSuccess ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
-		$dir = smbclient_opendir($state, 'smb://localhost/testshare');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
+		$dir = smbclient_opendir($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE);
 
 		$smb = array();
 		while (($out = smbclient_readdir($state, $dir)) !== false) {
 			$smb[] = $out['name'];
 		}
 		// Compare this with a copy we get through the filesystem:
-		$local = scandir('/home/testuser/testshare');
+		$local = scandir(SMB_LOCAL);
 
 		// Sort both arrays to ensure equality:
 		sort($smb);
diff --git a/tests/RenameTest.php b/tests/RenameTest.php
index ca14608..432ee6f 100644
--- a/tests/RenameTest.php
+++ b/tests/RenameTest.php
@@ -6,24 +6,24 @@ public function
 	testRenameFileSuccess ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 
 		// Create mock file "foo" via regular filesystem:
-		file_put_contents('/home/testuser/testshare/foo', 'this is a test');
+		file_put_contents(SMB_LOCAL.'/foo', 'this is a test');
 
-		$this->assertTrue(smbclient_rename($state, 'smb://localhost/testshare/foo', $state, 'smb://localhost/testshare/bar'));
+		$this->assertTrue(smbclient_rename($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/foo', $state, 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/bar'));
 
-		$moved = is_file('/home/testuser/testshare/bar');
+		$moved = is_file(SMB_LOCAL.'/bar');
 		$this->assertTrue($moved);
 
-		$gone = is_file('/home/testuser/testshare/foo');
+		$gone = is_file(SMB_LOCAL.'/foo');
 		$this->assertFalse($gone);
 
 		if ($moved) {
-			$this->assertEquals('this is a test', file_get_contents('/home/testuser/testshare/bar'));
+			$this->assertEquals('this is a test', file_get_contents(SMB_LOCAL.'/bar'));
 		}
-		@unlink('/home/testuser/testshare/foo');
-		@unlink('/home/testuser/testshare/bar');
+		@unlink(SMB_LOCAL.'/foo');
+		@unlink(SMB_LOCAL.'/bar');
 	}
 
 	/**
@@ -33,8 +33,8 @@ public function
 	testRenameFileNotExists ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
-		$this->assertFalse(smbclient_rename($state, 'smb://localhost/testshare/does-not-exist', $state, 'smb://localhost/testshare/somewhere-else'));
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
+		$this->assertFalse(smbclient_rename($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/does-not-exist', $state, 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/somewhere-else'));
 		$this->assertEquals(2, smbclient_state_errno($state));	// ENOENT
 	}
 
@@ -42,20 +42,20 @@ public function
 	testRenameDirSuccess ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 
 		// Create mock dir "foo" via regular filesystem:
-		mkdir('/home/testuser/testshare/foo');
+		mkdir(SMB_LOCAL.'/foo');
 
-		$this->assertTrue(smbclient_rename($state, 'smb://localhost/testshare/foo', $state, 'smb://localhost/testshare/bar'));
+		$this->assertTrue(smbclient_rename($state, 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/foo', $state, 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/bar'));
 
-		$moved = is_dir('/home/testuser/testshare/bar');
+		$moved = is_dir(SMB_LOCAL.'/bar');
 		$this->assertTrue($moved);
 
-		$gone = is_dir('/home/testuser/testshare/foo');
+		$gone = is_dir(SMB_LOCAL.'/foo');
 		$this->assertFalse($gone);
 
-		@rmdir('/home/testuser/testshare/foo');
-		@rmdir('/home/testuser/testshare/bar');
+		@rmdir(SMB_LOCAL.'/foo');
+		@rmdir(SMB_LOCAL.'/bar');
 	}
 }
diff --git a/tests/StateInitTest.php b/tests/StateInitTest.php
index e865ac6..da305d1 100644
--- a/tests/StateInitTest.php
+++ b/tests/StateInitTest.php
@@ -6,7 +6,7 @@ public function
 	testStateInitValid ()
 	{
 		$state = smbclient_state_new();
-		$this->assertTrue(smbclient_state_init($state, null, 'testuser', 'password'));
+		$this->assertTrue(smbclient_state_init($state, null, SMB_USER, SMB_PASS));
 	}
 
 	/**
diff --git a/tests/VfsTest.php b/tests/VfsTest.php
index ee217b4..99cca05 100644
--- a/tests/VfsTest.php
+++ b/tests/VfsTest.php
@@ -2,7 +2,11 @@
 
 class VfsTest extends PHPUnit_Framework_TestCase
 {
-	private $testuri = 'smb://localhost/testshare/testdir/testfile.txt';
+	private $testuri;
+
+	public function setup() {
+		$this->testuri = 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/testdir/testfile.txt';
+	}
 
 	public function
 	testHaveConstants ()
@@ -27,7 +31,7 @@ public function
 	testStatVFS ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 
 		$vfs = smbclient_statvfs($state, $this->testuri);
 
@@ -41,7 +45,7 @@ public function
 	testFstatVFS ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 		$file = smbclient_open($state, $this->testuri, 'r');
 
 		$vfs = smbclient_fstatvfs($state, $file);
diff --git a/tests/WriteTest.php b/tests/WriteTest.php
index b4886f4..98e13ba 100644
--- a/tests/WriteTest.php
+++ b/tests/WriteTest.php
@@ -7,16 +7,21 @@ class WriteTest extends PHPUnit_Framework_TestCase
 		sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\n";
 
 	// The URI of the test file seen through Samba:
-	private $testuri = 'smb://localhost/testshare/writetest.txt';
+	private $testuri;
 
 	// The "real" file on the filesystem:
-	private $realfile = '/home/testuser/testshare/writetest.txt';
+	private $realfile;
+
+	public function setup() {
+		$this->testuri = 'smb://'.SMB_HOST.'/'.SMB_SHARE.'/writetest.txt';
+		$this->realfile = SMB_LOCAL.'/writetest.txt';
+	}
 
 	public function
 	testWriteSuccess ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 		$file = smbclient_creat($state, $this->testuri);
 		$this->assertTrue(is_resource($file));
 
@@ -36,7 +41,7 @@ public function
 	testWritePartial ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 		$file = smbclient_creat($state, $this->testuri);
 		$this->assertTrue(is_resource($file));
 
@@ -55,7 +60,7 @@ public function
 	testWriteOversized ()
 	{
 		$state = smbclient_state_new();
-		smbclient_state_init($state, null, 'testuser', 'password');
+		smbclient_state_init($state, null, SMB_USER, SMB_PASS);
 		$file = smbclient_creat($state, $this->testuri);
 		$this->assertTrue(is_resource($file));
 
